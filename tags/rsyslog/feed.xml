<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rsyslog on Morfitronik</title>
    <link>https://morfikov.github.io/tags/rsyslog/</link>
    <description>Recent content in rsyslog on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Tue, 25 Aug 2020 19:21:00 +0200</lastBuildDate><atom:link href="https://morfikov.github.io/tags/rsyslog/feed.xml" rel="self" type="application/rss" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Raspberry Pi, LibreELEC, Kodi i zdalne logi via rsyslog</title>
      <link>https://morfikov.github.io/post/raspberry-pi-libreelec-kodi-i-zdalne-logi-via-rsyslog/</link>
      <pubDate>Tue, 25 Aug 2020 19:21:00 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/raspberry-pi-libreelec-kodi-i-zdalne-logi-via-rsyslog/</guid>
      <description>&lt;p&gt;Parę lat temu, gdy pojawił się u mnie w domu bezprzewodowy router WiFi, postanowiłem wgrać na niego
linux&#39;a w postaci OpenWRT. Pierwszym kluczowym elementem konfiguracyjnym tego urządzenia było
&lt;a href=&#34;https://morfikov.github.io
/post/logread-czyli-system-logowania-w-openwrt/&#34;&gt;przesłanie jego logów systemowych przez sieć&lt;/a&gt; do mojego laptopa, tak by wszystkie
zarejestrowane komunikaty zostały wyświetlone na konsoli mojego komputera z zainstalowanym Debianem.
W ten sposób nie musiałem się co chwila logować na router po SSH (czy też przez panel webowy), by
sprawdzić czy aby na pewno z tym urządzeniem jest wszystko w porządku. Teraz, po nabyciu Raspberry
Pi 4B i wgraniu na niego &lt;a href=&#34;https://libreelec.tv/&#34;&gt;LibreELEC&lt;/a&gt; z preinstalowanym Kodi, mam dokładnie to samo zadanie do
zrealizowania. Trzeba zatem znaleźć sposób na przesłanie wszystkich logów generowanych przez system
LibreELEC do demona &lt;code&gt;rsyslogd&lt;/code&gt; , który jest uruchomiony na zdalnej maszynie.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
