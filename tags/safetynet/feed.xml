<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>safetynet on Morfitronik</title>
    <link>https://morfikov.github.io/tags/safetynet/</link>
    <description>Recent content in safetynet on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Wed, 29 Sep 2021 17:09:00 +0200</lastBuildDate><atom:link href="https://morfikov.github.io/tags/safetynet/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak wgrać crDroid Android ROM na Xiaomi Redmi 9 (lancelot/galahad)</title>
      <link>https://morfikov.github.io/post/jak-wgrac-crdroid-android-rom-na-xiaomi-redmi-9-lancelot-galahad/</link>
      <pubDate>Wed, 29 Sep 2021 17:09:00 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-wgrac-crdroid-android-rom-na-xiaomi-redmi-9-lancelot-galahad/</guid>
      <description>&lt;p&gt;Przyszła pora pozbyć się w końcu tego stock&#39;owego oprogramowania, które zostało wgrane na mojego
smartfona Xiaomi Redmi 9 (lancelot/galahad) przez producenta tego urządzenia. Przez ostatnich parę
tygodni testowałem różne wersje ROM&#39;ów na bazie AOSP/LineageOS, z których bardziej użyteczne
okazały się &lt;a href=&#34;https://forum.xda-developers.com/t/rom-11-official-pixelplusui-for-redmi-9-poco-m2-lancelot-shiva.4254891/&#34;&gt;PixelPlusUI&lt;/a&gt;, &lt;a href=&#34;https://forum.xda-developers.com/t/rom-11-pixel-extended-official-redmi-9-poco-m2-lava.4296941/&#34;&gt;Pixel Extended&lt;/a&gt; oraz &lt;a href=&#34;https://forum.xda-developers.com/t/rom-official-crdroidandroid-for-redmi-9-poco-m2-lancelot-galahad-shiva.4333181/&#34;&gt;crDroid Anadroid&lt;/a&gt;. Niestety nikt jeszcze
nie opracował LineageOS na ten telefon, więc pozostaje w zasadzie wgranie jednej z tych trzech
powyższych pozycji, jako że Xiaomi Redmi 9 jest oficjalnie przez te ROM&#39;y wspierany. Obecnie Pixel
Extended ma jednak problemy z hostowaniem swoich plików i od paru miesięcy nie miał praktycznie
żadnej aktualizacji, przez co wybór został ograniczony do dwóch pozostałych ROM&#39;ów. Powodem, dla
którego zdecydowałem się wgrać crDroid Android, jest fakt, że nie ma on zintegrowanych aplikacji od
Google (GAPPS). Oczywiście można po instalacji samego ROM&#39;u wgrać także Open GAPPS ale naturalnie
nie jest to wymagane, przez co można sobie skonfigurować cały telefon według własnego uznania
wykorzystując jako bazę początkową microG. W tym artykule zostanie przedstawiony sposób wgrania
ROM&#39;u crDroid Android na smartfon, tak by czasem nie uszkodzić tego urządzenia.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak wgrać TWRP recovery i Magisk w Xiaomi Redmi 9 (galahad/lancelot)</title>
      <link>https://morfikov.github.io/post/jak-wgrac-twrp-recovery-i-magisk-w-xiaomi-redmi-9-galahad-lancelot/</link>
      <pubDate>Tue, 31 Aug 2021 19:45:00 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-wgrac-twrp-recovery-i-magisk-w-xiaomi-redmi-9-galahad-lancelot/</guid>
      <description>&lt;p&gt;Parę dni temu udało mi się &lt;a href=&#34;https://morfikov.github.io/post/jak-odblokowac-bootloader-w-xiaomi-redmi-9-galahad-lancelot/&#34;&gt;odblokować bootloader w moim smartfonie Xiaomi Redmi 9
(galahad/lancelot)&lt;/a&gt;. Nie licząc błędnego URI przy logowaniu na konto Mi wewnątrz appki
XiaoMiTool, nie było zbytnio problemów z tym procesem. Takie odblokowanie bootloader&#39;a w telefonie
w zasadzie nic nam samo z siebie nie daje, no może poza ściągnięciem z niego zabezpieczeń, co
ułatwia dostanie się syfu na Androida, no i też ułatwia złodziejom robotę, bo gdy takie odblokowane
urządzenie wpadnie w ich łapki, to mamy praktycznie pozamiatane. Niemniej jednak, odblokowany
bootloader daje nam możliwość wgrania custom recovery, np. TWRP, co z kolei otwiera nam drogę do
uzyskania praw administratora systemu root, np. za sprawą zainstalowania Magisk&#39;a. Mając dostęp do
root, będziemy mogli takim urządzeniem dowolnie zarządzać. Naturalnie, TWRP daje nam też możliwość
wgrania alternatywnych ROM&#39;ów na bazie AOSP/LineageOS ale w tym artykule skupimy się jedynie na
wrzuceniu TWRP recovery na tego Xiaomi Redmi 9 i ukorzenimy jego Androida przy pomocy wspomnianej już aplikacji Magisk.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Czy smartfon z Androidem bez Google Apps/Services ma sens</title>
      <link>https://morfikov.github.io/post/czy-smartfon-z-androidem-bez-google-apps-services-ma-sens/</link>
      <pubDate>Tue, 16 Apr 2019 21:00:15 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/czy-smartfon-z-androidem-bez-google-apps-services-ma-sens/</guid>
      <description>&lt;p&gt;Jakiś czas temu &lt;a href=&#34;https://android.com.pl/programowanie/188397-po-co-nam-uslugi-google-play/&#34;&gt;natknąłem się na artykuł&lt;/a&gt; chwalący Google Play Services i sugerujący zarazem,
że nasz smartfon bez tych usług (i appek zależnych od nich) na niewiele się zda człowiekowi. Nie
jest to jednak do końca prawdą i postanowiłem pokazać na żywym przykładzie jak wygląda operowanie na
telefonie z Androidem pozbawionym jakichkolwiek usług czy aplikacji własnościowych od Google. W
rolach głównych wystąpi mój smartfon LG G4C, który jest już dość leciwy ale można na niego wgrać
LineageOS (lub też inny ROM na bazie AOSP). Po wgraniu ROM&#39;u, w telefonie znajduje się jedynie
garstka podstawowych aplikacji (przeglądarka, galeria, itp), które po pierwsze są opensource, a po
drugie można je bez problemu wyłączyć jeśli nie zamierzamy z nich korzystać. Z telefonu można
dzwonić, przeglądać net (WiFi/LTE), robić zdjęcia i używać tego urządzenia do różnego rodzaju
multimediów. W zasadzie czego oczekiwać więcej od telefonu? Niektórzy jednak chcieli by mieć
możliwość używania, np. nawigacji. No i tu już zaczynają się schody, bo na takim w pełni
otwartoźródłowym Androidzie, GPS nie zadziała OOTB i potrzebna nam jest jakaś alternatywa w postaci
pośrednika między aplikacjami a GPS. Standardowo w Andkach tym zadaniem zajmują się właśnie te
usługi Google. Jak więc zatem zmusić GPS do poprawnej pracy nie chcąc przy tym wgrywać sobie tego
rozbudowanego w uprawnieniach szpiega od Google? Problemów naturalnie może być więcej, a to czy
doświadczymy któregokolwiek z nich zależy głównie od odpowiedniej konfiguracji systemu. Niniejszy
artykuł postara się zebrać wszystkie te niezbędne informacje mające na celu zaimplementowanie w
naszym smartfonie otwartoźródłowej alternatywy dla Google Play Services w postaci microG.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak przy pomocy Magisk&#39;a pogodzić SafetyNet i ADB/USB debug</title>
      <link>https://morfikov.github.io/post/jak-przy-pomocy-magiska-pogodzic-safetynet-i-adb-usb-debug/</link>
      <pubDate>Sat, 19 Jan 2019 21:12:11 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-przy-pomocy-magiska-pogodzic-safetynet-i-adb-usb-debug/</guid>
      <description>&lt;p&gt;Do tej pory zbytnio nie interesowałem się zagadnieniami dotyczącymi mechanizmu &lt;a href=&#34;https://lineageos.org/Safetynet/&#34;&gt;SafetyNet&lt;/a&gt;, który
ma na celu utrudnić nieco życie użytkownikom smartfonów z Androidem lubiącym posiadać pełny dostęp
do systemu swoich urządzeń za sprawą uzyskania praw administratora (root). To co się zmieniło na
przestrzeni ostatnich paru miesięcy, to fakt, że coraz więcej aplikacji polega na tym całym
SafetyNet, a przynajmniej ja zaczynam coraz częściej korzystać z tego typu oprogramowania. Jeśli
jednak nasze urządzenie nie przejdzie testów SafetyNet, to funkcjonalność aplikacji polegających na
tym mechanizmie może zostać dość znacznie ograniczona. Przykładem może być appka Revolut i jej
odblokowanie za pomocą czytnika linii papilarnych. Bez SafetyNet trzeba podawać PIN za każdym
razem, gdy się do tej aplikacji będziemy próbowali zalogować. Zwykle do obejścia SafetyNet używa
się Magisk&#39;a ale w pewnych sytuacjach, nawet i on nie jest w stanie z tym zdaniem sobie poradzić,
przynajmniej nie bez dodatkowej konfiguracji. Jeśli na co dzień korzystamy z opcji debugowania
ADB/USB, to może nas spotkać nie lada dylemat -- ADB/USB debug vs. SafetyNet. Okazuje się, że można
pogodzić te dwie rzeczy.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
