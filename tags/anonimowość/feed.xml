<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>anonimowość on Morfitronik</title>
    <link>https://morfikov.github.io/tags/anonimowo%C5%9B%C4%87/</link>
    <description>Recent content in anonimowość on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Sun, 07 Aug 2016 13:06:03 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/anonimowo%C5%9B%C4%87/feed.xml" rel="self" type="application/rss" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Debian: Anonimowe pobieranie aktualizacji (apt-transport-tor)</title>
      <link>https://morfikov.github.io/post/debian-anonimowe-pobieranie-aktualizacji-apt-transport-tor/</link>
      <pubDate>Sun, 07 Aug 2016 13:06:03 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/debian-anonimowe-pobieranie-aktualizacji-apt-transport-tor/</guid>
      <description>&lt;p&gt;Dystrybucja linux&#39;a Debian oferuje możliwość pobierania pakietów &lt;code&gt;.deb&lt;/code&gt; za pomocą sieci TOR. W ten
sposób jesteśmy w stanie ukryć nieco informacji na temat zainstalowanego w naszym systemie
oprogramowania. Jakby nie patrzeć, aplikacje mają pełno dziur i nie wszystkie z tych programików są
łatane natychmiast po opublikowaniu podatności. Z chwilą dokonywania aktualizacji systemu,
potencjalny atakujący może dowiedzieć się zatem z jakich programów korzystamy, wliczając w to ich
wersje. Znając te dane, można ocenić czy system posiada jakieś błędy. By zaimplementować w
menadżerze pakietów &lt;code&gt;apt&lt;/code&gt;/&lt;code&gt;aptitude&lt;/code&gt; możliwość korzystania z &lt;a href=&#34;https://www.torproject.org/&#34;&gt;sieci
TOR&lt;/a&gt;, musimy posiadać w systemie skonfigurowanego klienta TOR oraz
zainstalować pakiet &lt;code&gt;apt-transport-tor&lt;/code&gt; . W tym artykule postaramy się skonfigurować ten cały
mechanizm TOR&#39;owych aktualizacji.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Systemowy klient Tor w TorBrowser</title>
      <link>https://morfikov.github.io/post/systemowy-klient-tor-w-torbrowser/</link>
      <pubDate>Wed, 02 Mar 2016 15:14:33 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/systemowy-klient-tor-w-torbrowser/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.torproject.org/projects/torbrowser.html.en&#34;&gt;TorBrowser&lt;/a&gt; to projekt, który ma na celu zabezpieczenie użytkownika przed przeciekiem
informacji. Jest to połączenie klienta sieci Tor oraz przeglądarki Firefox (plus kilka dodatków).
Ten mechanizm jest tak skonfigurowany, by możliwie jak w największym stopniu dbał o naszą prywatność
podczas przeglądania stron internetowych. Kilka lat wstecz, użytkownicy Firefox&#39;a mogli się
zaopatrzyć w addon TorButton. Niemniej jednak, obecnie &lt;a href=&#34;https://www.torproject.org/docs/torbutton/index.html.en&#34;&gt;ten dodatek nie jest już rozwijany&lt;/a&gt;,
przynajmniej nie jako osobny projekt. Cały ten TorButton został zintegrowany z TorBrowser i nie ma
obecnie sposobu na to, by przeznaczyć jeden profil Firefox&#39;a pod bezpieczne przeglądanie internetu.
Jeśli chcemy mieć taką możliwość, to musimy korzystać z TorBrowser. Nie stanowi to oczywiście
problemu ale jako, że ma on w sobie wbudowanego klienta Tor&#39;a, to uruchamia też pewne procesy, które
mogą okazać się zbędne, zwłaszcza, gdy na swoim linux&#39;ie mamy już systemową instancję Tor&#39;a. W takim
przypadku, przydałoby się wyłączyć tego klienta Tor w TorBrowser, a ruch z przeglądarki przekierować
do systemowego Tor&#39;a i przez ten proces postaramy się przebrnąć w tym wpisie.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Serwer kluczy GPG i kwestia prywatności</title>
      <link>https://morfikov.github.io/post/serwer-kluczy-gpg-i-kwestia-prywatnosci/</link>
      <pubDate>Fri, 16 Oct 2015 18:59:04 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/serwer-kluczy-gpg-i-kwestia-prywatnosci/</guid>
      <description>&lt;p&gt;Czytając sobie artykuł na temat &lt;a href=&#34;https://trac.torproject.org/projects/tor/wiki/doc/TorifyHOWTO/GnuPG&#34;&gt;TORyfikacji zapytań do serwerów kluczy
GPG&lt;/a&gt;, pomyślałem, że w sumie
mógłbym zreprodukować przedstawione tam kroki dotyczące implementacji tego rozwiązania na windowsie
i wdrożyć je na linux&#39;ie. Chodzi generalnie o to, by serwer kluczy GPG nie był odpytywany
bezpośrednio przy szukaniu/przesyłaniu kluczy przez sieć, bo to może identyfikować nas, jak i grupę
ludzi, która się z nami komunikuje. Jakby nie patrzeć, klucze GPG składają się z dość newralgicznych
informacji, typu imię, nazwisko czy adres email, a serwer kluczy GPG tych danych w żaden sposób nie
zabezpiecza i są one zwykle przesyłane otwartym tekstem przez sieć.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
