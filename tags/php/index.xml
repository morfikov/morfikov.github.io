<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on Morfitronik</title>
    <link>https://morfikov.github.io/tags/php/</link>
    <description>Recent content in php on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Mon, 22 Aug 2016 22:03:02 +0000</lastBuildDate>
    
	<atom:link href="https://morfikov.github.io/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Chroot Apache2 vs dyrektywa open_basedir w PHP</title>
      <link>https://morfikov.github.io/post/chroot-apache2-vs-dyrektywa-open_basedir-w-php/</link>
      <pubDate>Mon, 22 Aug 2016 22:03:02 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/chroot-apache2-vs-dyrektywa-open_basedir-w-php/</guid>
      <description>&lt;p&gt;Kilka dni temu wpadł mi w oko artykuł na temat wykonania &lt;a href=&#34;https://nfsec.pl/root/5874&#34;&gt;chroot serwera
Apache2&lt;/a&gt;. Problem z tamtym tekstem jest taki, że nie uwzględnia on
serwera bazy danych MySQL. W efekcie, taki chroot&#39;owany Apache2 będzie miał problemy z połączeniem
się do bazy, a nasz serwis bez niej raczej nie będzie działał prawidłowo. Przydałoby się zatem
dopracować nieco ten artykuł i wypracować takie rozwiązanie, które nie popsuje przy okazji naszego
serwisu www. Dlatego też w tym wpisie wykonamy sobie chroot zarówno serwera Apache2 z obsługą PHP i
bazy danych MySQL za sprawą modułu &lt;code&gt;unixd&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WordPress: Jak przetłumaczyć motyw/wtyczkę</title>
      <link>https://morfikov.github.io/post/wordpress-jak-przetlumaczyc-motyw-wtyczke/</link>
      <pubDate>Wed, 27 Jul 2016 20:00:04 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wordpress-jak-przetlumaczyc-motyw-wtyczke/</guid>
      <description>&lt;p&gt;WordPress został przetłumaczony na dość sporo języków, w tym też i na język polski. Niemniej jednak,
pliki bazowe to nie to samo co pliki różnych dodatków. Dlatego też czasem po zmianie języka na
polski, nie wszystkie elementy naszego bloga są przetłumaczone. Nie ma przy tym znaczenia czy
&lt;a href=&#34;https://morfikov.github.io
/post/wordpress-domyslny-jezyk-instalacji/&#34;&gt;ustawialiśmy język podczas instalacji
WordPress&#39;a&lt;/a&gt;, czy też później z poziomu
panela administracyjnego. Taki stan rzeczy nie wygląda zbyt estetycznie i przydałoby się coś z tym
zrobić. Jeśli zajrzymy do katalogu wtyczek czy motywów, to zwykle znajdziemy tam pliki &lt;code&gt;.mo&lt;/code&gt; oraz
&lt;code&gt;.po&lt;/code&gt; , które są używane przy tłumaczeniu tekstu z wykorzystaniem
&lt;a href=&#34;https://www.gnu.org/software/gettext/&#34;&gt;gettext&lt;/a&gt;. Jako, że motyw, który jest wykorzystywany na tym
blogu nie jest przetłumaczony, to postanowiłem go przetłumaczyć i przy okazji opisać ten niezbyt
skomplikowany proces.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>