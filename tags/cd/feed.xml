<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cd on Morfitronik</title>
    <link>https://morfikov.github.io/tags/cd/</link>
    <description>Recent content in cd on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Thu, 19 Nov 2015 14:17:20 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/cd/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Montowanie obrazów ISO (urządzenia loop)</title>
      <link>https://morfikov.github.io/post/montowanie-obrazow-iso-urzadzenia-loop/</link>
      <pubDate>Thu, 19 Nov 2015 14:17:20 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/montowanie-obrazow-iso-urzadzenia-loop/</guid>
      <description>&lt;p&gt;Użytkownicy Debiana (i innych dystrybucji linux&#39;a) mają czasem poważne problemy z zamontowaniem
&lt;a href=&#34;https://pl.wikipedia.org/wiki/ISO_%28obraz%29&#34;&gt;obrazu ISO&lt;/a&gt; pozyskanego czy to z internetu, czy też
od swoich znajomych. Na windowsach zwykliśmy korzystać z takich rozwiązań jak Daemon Tools, Alcohol
120%, czy też &lt;a href=&#34;http://wincdemu.sysprogs.org/&#34;&gt;WinCDEmu&lt;/a&gt;. Na linux&#39;ach z narzędzi, które mają GUI,
można chyba wyróżnić &lt;a href=&#34;https://launchpad.net/furiusisomount&#34;&gt;furiusisomount&lt;/a&gt; oraz
&lt;a href=&#34;http://sourceforge.net/projects/acetoneiso/&#34;&gt;acetoneiso&lt;/a&gt; ale nie będziemy się nimi zajmować w tym
wpisie. Na dobrą sprawę, to nie potrzebujemy żadnego zewnętrznego oprogramowania, by sprawnie i
szybko zamontować dowolny obraz ISO w swoim systemie. W tym wpisie zostanie przedstawiony sposób
montownia tychże obrazów, który zakłada wykorzystanie urządzeń &lt;code&gt;loop&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Udevil i montowanie zasobów bez uprawnień root</title>
      <link>https://morfikov.github.io/post/udevil-i-montowanie-zasobow-bez-uprawnien-root/</link>
      <pubDate>Fri, 19 Jun 2015 20:11:42 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/udevil-i-montowanie-zasobow-bez-uprawnien-root/</guid>
      <description>&lt;p&gt;Linux jest bezpiecznym środowiskiem operacyjnym ale to nie ze względu na to, że jego kod jest jakoś
mniej podatny na błędy czy coś w tym stylu, tylko przez restrykcyjną politykę dostępu do szeregu
miejsc w systemie. Jednym z nich są wszelkie urządzenia, w skład których wchodzą również i dyski
twarde, pendrive czy napędy cd/dvd. Oczywiście tych urządzeń może być o wile więcej ale my w tym
wpisie omówimy sobie dostęp tylko do tych trzech wymienionych wyżej. Standardowo zwykły użytkownik w
systemie nie ma możliwości przeprowadzenia szeregu czynności pod kątem większości z tych urządzeń i
wliczyć w to można, np. montowanie zasobów. Tego typu operacje może przeprowadzać jedynie
administrator. Ma to na celu ochronę bezpieczeństwa systemu. Jeśli chodzi o nośniki wymienne takie
jak płytki cd/dvd czy pendrive, to na nich może znajdować się podejrzane oprogramowanie i po
zamontowaniu takiego nośnika w systemie, wirusy, trojany czy keyloggery mogą się wgrać do systemu
zagrażając tym samym prywatności wszystkich użytkowników.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Autostart i automatyczne montowanie nośników</title>
      <link>https://morfikov.github.io/post/autostart-i-automatyczne-montowanie-nosnikow/</link>
      <pubDate>Fri, 19 Jun 2015 17:17:11 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/autostart-i-automatyczne-montowanie-nosnikow/</guid>
      <description>&lt;p&gt;Menadżery plików potrafią automatycznie montować nośniki wymienne w oparciu o pakiet
&lt;a href=&#34;https://www.freedesktop.org/wiki/Software/udisks/&#34;&gt;udisks2&lt;/a&gt;. Potrafią także uruchamiać odpowiednie
aplikacje zlokalizowane na tych urządzeniach. Może to prowadzić do oczywistych zagrożeń i jeśli nasz
system ma być bezpieczny, to musimy wyłączyć obie te opcje. W różnych menadżerach plików, ten proces
przebiega inaczej. Ja korzystam ze &lt;a href=&#34;https://ignorantguru.github.io/spacefm/&#34;&gt;spacefm&lt;/a&gt; i w jego
przypadku mamy dość rozbudowany mechanizm polityki dotyczącej tych dwóch powyższych kwestii.
Niemniej jednak, w przypadku każdego z menadżera plików, proces postępowania powinien przebiegać
mniej więcej w ten sam sposób.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Suma kontrolna nagranego obrazu .iso</title>
      <link>https://morfikov.github.io/post/suma-kontrolna-nagranego-obrazu-iso/</link>
      <pubDate>Mon, 15 Jun 2015 15:20:52 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/suma-kontrolna-nagranego-obrazu-iso/</guid>
      <description>&lt;p&gt;Suma kontrolna daje możliwość sprawdzenia czy dane zawarte w pliku nie zostały zmienione podczas
transferu z jednego medium informacyjnego na inne. Jeśli weźmiemy przykład pakietów sieciowych, to
pliki przesyłane między dwoma punktami są dzielone na mniejsze kawałki. W każdym z nich są zawarte
sumy kontrole danych, które zawierają. Komputer odbierający taki pakiet generuje własną sumę
kontrolą i porównuje ją z tą otrzymaną w pakiecie. W przypadku gdy suma kontrolna się nie zgadza,
mamy do czynienia z błędami przesyłu, tj. pakiet został uszkodzony gdzieś po drodze. W tej sytuacji
maszyna odbierająca dane prosi o ponowne przesłanie uszkodzonego segmentu. Ta sytuacja może się
zdarzyć ale błędy są automatycznie naprawiane. Problem jest taki, że przy pobieraniu plików z
internetu nie zawsze korzystamy z bezpiecznych połączeń, poza tym, zawsze ktoś może uzyskać dostęp
do serwera i podmienić pliki. Czy możemy zatem mieć pewność, że dany plik trafił do nas w formie
takiej jak powinien?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
