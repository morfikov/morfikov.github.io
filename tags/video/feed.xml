<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>video on Morfitronik</title>
    <link>https://morfikov.github.io/tags/video/</link>
    <description>Recent content in video on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Sat, 30 Jan 2016 20:37:08 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/video/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Streaming obrazu za sprawą ffmpeg i netcat</title>
      <link>https://morfikov.github.io/post/streaming-obrazu-za-sprawa-ffmpeg-netcat/</link>
      <pubDate>Sat, 30 Jan 2016 20:37:08 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/streaming-obrazu-za-sprawa-ffmpeg-netcat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://forum.dug.net.pl/viewtopic.php?id=28188&#34;&gt;Na forum DUG&#39;a pojawił się ciekawy post&lt;/a&gt;, w którym
autor wątku chciał wykonać coś co określił jako &amp;quot;display mirroring&amp;quot;. Poszukałem trochę informacji na
temat tego zagadnienia i okazało się, że to nic innego jak tylko wyświetlenie tej samej zawartości,
np. na dwóch monitorach. Nie jest to nic zaawansowanego, bo przecie Xserver jest w stanie tego typu
zadanie zrealizować. Niemniej jednak, oba monitory muszą być podłączone do tego samego komputera. W
tym przypadku mamy dwie maszyny i dwa osobne monitory. Celem jest przesłanie obrazu z jednej maszyny
na drugą za pomocą sieci. W tym podlinkowanym wątku została poruszona kwestia przechwycenia obrazu
przy pomocy &lt;code&gt;ffmpeg&lt;/code&gt; i przesłania go przez sieć za pomocą &lt;code&gt;nc&lt;/code&gt; (netcat). Tak bardzo zainteresowało
mnie to rozwiązanie, że postanowiłem zobaczyć jak wygląda ono w praktyce.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Konwersja napisów w kontenerze MP4</title>
      <link>https://morfikov.github.io/post/konwersja-napisow-w-kontenerze-mp4/</link>
      <pubDate>Mon, 19 Oct 2015 19:31:49 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/konwersja-napisow-w-kontenerze-mp4/</guid>
      <description>&lt;p&gt;Podczas ogarniania kolekcji filmów i przerabiania jej w taki sposób by został nam tylko jeden plik,
tj. &lt;a href=&#34;https://morfikov.github.io/post/kontener-multimedialny-mkv/&#34;&gt;kontener MKV&lt;/a&gt;, możemy czasem napotkać problemy, które mogą nam uniemożliwić to zadanie.
Może się zdarzyć tak, że będziemy mieli do czynienia z innymi kontenerami niż MKV, np. MP4. Ten wpis
będzie poświęcony właśnie tego rodzaju kontenerom.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Kontener multimedialny MKV</title>
      <link>https://morfikov.github.io/post/kontener-multimedialny-mkv/</link>
      <pubDate>Mon, 19 Oct 2015 19:29:10 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/kontener-multimedialny-mkv/</guid>
      <description>&lt;p&gt;Wiele osób posiada pliki video i ci co uczą się angielskiego, czy innych języków, niezbyt przepadają
za słuchaniem polskiego lektora na filmach, bo zagłusza on przecie całą oryginalną ścieżkę audio.
Poza tym, jakość tłumaczenia jest na żenująco niskim poziomie. Z samego słuchu człowiek ciężko się
uczy, zwłaszcza jak zaczyna naukę nowego języka, dlatego też można sobie dociągnąć polskie napisy.
Co jednak w przypadku, gdy chcemy mieć kilka ścieżek audio czy napisów w jednym filmie? Posiadanie
wielu plików wprowadza trochę zamętu. Poniżej zostanie opisany sposób na ogarnięcie kolekcji
filmowej, tak by został nam się tylko jeden plik w przypadku każdego ulubionego przez nas filmu.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
