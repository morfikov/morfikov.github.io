<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>root on Morfitronik</title>
    <link>https://morfikov.github.io/tags/root/</link>
    <description>Recent content in root on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Wed, 29 Sep 2021 17:09:00 +0200</lastBuildDate><atom:link href="https://morfikov.github.io/tags/root/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak wgrać crDroid Android ROM na Xiaomi Redmi 9 (lancelot/galahad)</title>
      <link>https://morfikov.github.io/post/jak-wgrac-crdroid-android-rom-na-xiaomi-redmi-9-lancelot-galahad/</link>
      <pubDate>Wed, 29 Sep 2021 17:09:00 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-wgrac-crdroid-android-rom-na-xiaomi-redmi-9-lancelot-galahad/</guid>
      <description>&lt;p&gt;Przyszła pora pozbyć się w końcu tego stock&#39;owego oprogramowania, które zostało wgrane na mojego
smartfona Xiaomi Redmi 9 (lancelot/galahad) przez producenta tego urządzenia. Przez ostatnich parę
tygodni testowałem różne wersje ROM&#39;ów na bazie AOSP/LineageOS, z których bardziej użyteczne
okazały się &lt;a href=&#34;https://forum.xda-developers.com/t/rom-11-official-pixelplusui-for-redmi-9-poco-m2-lancelot-shiva.4254891/&#34;&gt;PixelPlusUI&lt;/a&gt;, &lt;a href=&#34;https://forum.xda-developers.com/t/rom-11-pixel-extended-official-redmi-9-poco-m2-lava.4296941/&#34;&gt;Pixel Extended&lt;/a&gt; oraz &lt;a href=&#34;https://forum.xda-developers.com/t/rom-official-crdroidandroid-for-redmi-9-poco-m2-lancelot-galahad-shiva.4333181/&#34;&gt;crDroid Anadroid&lt;/a&gt;. Niestety nikt jeszcze
nie opracował LineageOS na ten telefon, więc pozostaje w zasadzie wgranie jednej z tych trzech
powyższych pozycji, jako że Xiaomi Redmi 9 jest oficjalnie przez te ROM&#39;y wspierany. Obecnie Pixel
Extended ma jednak problemy z hostowaniem swoich plików i od paru miesięcy nie miał praktycznie
żadnej aktualizacji, przez co wybór został ograniczony do dwóch pozostałych ROM&#39;ów. Powodem, dla
którego zdecydowałem się wgrać crDroid Android, jest fakt, że nie ma on zintegrowanych aplikacji od
Google (GAPPS). Oczywiście można po instalacji samego ROM&#39;u wgrać także Open GAPPS ale naturalnie
nie jest to wymagane, przez co można sobie skonfigurować cały telefon według własnego uznania
wykorzystując jako bazę początkową microG. W tym artykule zostanie przedstawiony sposób wgrania
ROM&#39;u crDroid Android na smartfon, tak by czasem nie uszkodzić tego urządzenia.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Czym jest tryb lockdown w smartfonie z Androidem</title>
      <link>https://morfikov.github.io/post/czym-jest-tryb-lockdown-w-smartfonie-z-androidem/</link>
      <pubDate>Mon, 27 Sep 2021 05:50:00 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/czym-jest-tryb-lockdown-w-smartfonie-z-androidem/</guid>
      <description>&lt;p&gt;Jeśli mamy wgranego w miarę nowego Androida (9+) na naszego smartfona i korzystamy aktywnie z tego
urządzenia, to zapewne zdążyliśmy się już przyzwyczaić, że co kilka dni musimy wpisywać ręcznie
hasło do blokady ekranu i to nawet pomimo aktywnej biometrii w ustawieniach systemu. Co ciekawe,
w stock&#39;owych ROM&#39;ach producentów telefonów (nawet w moim Xiaomi Redmi 9), nie ma żadnej opcji,
która byłaby w stanie skonfigurować czas, po którym taki monit z hasłem ma wyskakiwać. Przyznam, że
trochę mnie ten ficzer denerwował ale nie mogłem z nim w zasadzie nic zrobić i trzeba było nauczyć
się go tolerować. Do niedawna nawet nie wiedziałem, że takie pytanie użytkownika o hasło bierze się
z faktu przejścia telefonu w jeden ze jego trybów pracy, tj. &lt;a href=&#34;https://android-developers.googleblog.com/2020/09/lockscreen-and-authentication.html&#34;&gt;tryb lockdown&lt;/a&gt;, w który telefon
jest przełączany automatycznie zwykle co 72 godziny (3 dni). Ludzie mówią, że ten tryb ma chronić
użytkownika smartfona na wypadek utraty urządzenia. Z racji, że aktualnie wgrałem sobie custom ROM
na bazie AOSP/LineageOS, to postanowiłem sprawdzić czy jakieś opcje konfiguracji tego trybu są w
nim dostępne. Przy okazji chciałem nieco bardziej zapoznać się z tym mechanizmem lockdown&#39;u i
zweryfikować na ile może on być użyteczny.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Kopia zapasowa danych smartfona z Androidem (OAndBackupX, Syncthing)</title>
      <link>https://morfikov.github.io/post/kopia-zapasowa-danych-smartfona-z-androidem-oandbackupx-syncthing/</link>
      <pubDate>Sun, 26 Sep 2021 16:44:00 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/kopia-zapasowa-danych-smartfona-z-androidem-oandbackupx-syncthing/</guid>
      <description>&lt;p&gt;Jak to zwykło się mawiać w świecie IT: ludzie dzielą się na te osobniki, które robią backup i
te, co backup robić będą. Jakiś czas temu pochyliłem się nad zagadnieniem &lt;a href=&#34;https://morfikov.github.io/post/czy-smartfon-z-androidem-bez-google-apps-services-ma-sens/&#34;&gt;czy smartfon z
Androidem bez Google Play Services ma sens&lt;/a&gt;. Poruszyłem tam problem tworzenia kopi zapasowej
danych użytkownika zgromadzonych w telefonie. W tym podlinkowanym artykule zostało przestawione jak
przy pomocy TWRP dokonać pełnego backupu całego systemu urządzenia i o ile pod względem technicznym
takie podejście było jak najbardziej w pełni do zaakceptowania, to jednak to rozwiązanie miało dość
istotną wadę, tj. na czas backup&#39;u trzeba było wyłączyć smartfon. Parę dni temu natrafiłem
na &lt;a href=&#34;https://github.com/machiav3lli/oandbackupx&#34;&gt;narzędzia OAndBackupX&lt;/a&gt;, które jest w stanie zrobić kopię zapasową wszystkich zainstalowanych
w Androidzie aplikacji (oraz ich ustawień), wliczając w to nawet appki systemowe. OAndBackupX jest
o tyle lepszym rozwiązaniem w stosunku do TWRP, że można przy jego pomocy robić kopię danych
pojedynczych aplikacji, a nie od razu całego ROM&#39;u, co nie tylko jest czasochłonne ale również
zjada sporo miejsca na dysku komputera, czy gdzie ten backup zamierzamy przechowywać. Niestety
OAndBackupX wymaga uprawnień root, zatem na stock&#39;owym ROM&#39;ie producenta naszego telefonu nie damy
rady z tego narzędzia skorzystać. Jeśli jednak mamy alternatywny ROM na bazie AOSP/LineageOS, to
przydałoby się rzucić okiem na ten kawałek oprogramowania, bo zdaje się ono być wielce użyteczne,
zwłaszcza w przypadku osób mojego pokroju, czyli linux&#39;iarzy, którzy o backup swoich danych chcą
zatroszczyć się tylko i wyłącznie we własnym zakresie, zaprzęgając do pracy choćby &lt;a href=&#34;https://github.com/syncthing/syncthing&#34;&gt;Syncthing&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Optymalizacja procesu ładowania baterii via ACC w smartfonie z Androidem</title>
      <link>https://morfikov.github.io/post/optymalizacja-procesu-ladowania-baterii-via-acc-w-smartfonie-z-androidem/</link>
      <pubDate>Fri, 03 Sep 2021 20:53:00 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/optymalizacja-procesu-ladowania-baterii-via-acc-w-smartfonie-z-androidem/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://morfikov.github.io/post/jak-wgrac-twrp-recovery-i-magisk-w-xiaomi-redmi-9-galahad-lancelot/&#34;&gt;Odblokowanie bootloader&#39;a&lt;/a&gt; w smartfonie Xiaomi Redmi 9 (Galahad/Lancelot) mamy już z głowy.
Podobnie sprawa wygląda z &lt;a href=&#34;https://morfikov.github.io/post/jak-odblokowac-bootloader-w-xiaomi-redmi-9-galahad-lancelot/&#34;&gt;wgrywaniem na partycję recovery obrazu TWRP&lt;/a&gt; i uzyskiwaniem praw
administratora systemu root za sprawą Magisk&#39;a. Te dwa kluczowe procesy otworzyły nam drogę do
nieco bardziej zaawansowanych prac jeśli chodzi o konfigurację samego urządzenia. W tym artykule
nie będziemy się jeszcze bawić we wgrywanie alternatywnych ROM&#39;ów na bazie AOSP/LineageOS ale za to
zainteresujemy się nieco bardziej procesem ładowania samej baterii w takim telefonie. Chodzi
generalnie o fakt przedłużenia żywotności baterii smartfona za sprawą limitowania maksymalnej
wartości, do jakiej można taką baterię podładować podłączając telefon czy to do portu USB
komputera, czy też do pełnowymiarowej ładowarki. Taki stopień konfiguracji można osiągnąć
zaprzęgając do pracy zaawansowany kontroler ładowania (&lt;a href=&#34;https://github.com/VR-25/acc&#34;&gt;Advanced Charging Controller&lt;/a&gt;, ACC),
który manipuluje niskopoziomowymi ustawieniami kernela linux. W standardowym Androidzie tego typu
funkcjonalności nie uświadczymy, przez co bateria zużywa się parokrotnie szybciej niż powinna, co
przekłada się na wymianę urządzenia na nowe po niecałym roku czy dwóch jego użytkowania. Jeśli nie
uśmiecha nam się wydawać hajsu co roku na nowy telefon tylko dlatego, że nie można w nim wymienić
baterii, to powinniśmy rozważyć rozwiązanie jakie nam daje ACC.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak wgrać TWRP recovery i Magisk w Xiaomi Redmi 9 (galahad/lancelot)</title>
      <link>https://morfikov.github.io/post/jak-wgrac-twrp-recovery-i-magisk-w-xiaomi-redmi-9-galahad-lancelot/</link>
      <pubDate>Tue, 31 Aug 2021 19:45:00 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-wgrac-twrp-recovery-i-magisk-w-xiaomi-redmi-9-galahad-lancelot/</guid>
      <description>&lt;p&gt;Parę dni temu udało mi się &lt;a href=&#34;https://morfikov.github.io/post/jak-odblokowac-bootloader-w-xiaomi-redmi-9-galahad-lancelot/&#34;&gt;odblokować bootloader w moim smartfonie Xiaomi Redmi 9
(galahad/lancelot)&lt;/a&gt;. Nie licząc błędnego URI przy logowaniu na konto Mi wewnątrz appki
XiaoMiTool, nie było zbytnio problemów z tym procesem. Takie odblokowanie bootloader&#39;a w telefonie
w zasadzie nic nam samo z siebie nie daje, no może poza ściągnięciem z niego zabezpieczeń, co
ułatwia dostanie się syfu na Androida, no i też ułatwia złodziejom robotę, bo gdy takie odblokowane
urządzenie wpadnie w ich łapki, to mamy praktycznie pozamiatane. Niemniej jednak, odblokowany
bootloader daje nam możliwość wgrania custom recovery, np. TWRP, co z kolei otwiera nam drogę do
uzyskania praw administratora systemu root, np. za sprawą zainstalowania Magisk&#39;a. Mając dostęp do
root, będziemy mogli takim urządzeniem dowolnie zarządzać. Naturalnie, TWRP daje nam też możliwość
wgrania alternatywnych ROM&#39;ów na bazie AOSP/LineageOS ale w tym artykule skupimy się jedynie na
wrzuceniu TWRP recovery na tego Xiaomi Redmi 9 i ukorzenimy jego Androida przy pomocy wspomnianej już aplikacji Magisk.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak przy pomocy Magisk&#39;a pogodzić SafetyNet i ADB/USB debug</title>
      <link>https://morfikov.github.io/post/jak-przy-pomocy-magiska-pogodzic-safetynet-i-adb-usb-debug/</link>
      <pubDate>Sat, 19 Jan 2019 21:12:11 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-przy-pomocy-magiska-pogodzic-safetynet-i-adb-usb-debug/</guid>
      <description>&lt;p&gt;Do tej pory zbytnio nie interesowałem się zagadnieniami dotyczącymi mechanizmu &lt;a href=&#34;https://lineageos.org/Safetynet/&#34;&gt;SafetyNet&lt;/a&gt;, który
ma na celu utrudnić nieco życie użytkownikom smartfonów z Androidem lubiącym posiadać pełny dostęp
do systemu swoich urządzeń za sprawą uzyskania praw administratora (root). To co się zmieniło na
przestrzeni ostatnich paru miesięcy, to fakt, że coraz więcej aplikacji polega na tym całym
SafetyNet, a przynajmniej ja zaczynam coraz częściej korzystać z tego typu oprogramowania. Jeśli
jednak nasze urządzenie nie przejdzie testów SafetyNet, to funkcjonalność aplikacji polegających na
tym mechanizmie może zostać dość znacznie ograniczona. Przykładem może być appka Revolut i jej
odblokowanie za pomocą czytnika linii papilarnych. Bez SafetyNet trzeba podawać PIN za każdym
razem, gdy się do tej aplikacji będziemy próbowali zalogować. Zwykle do obejścia SafetyNet używa
się Magisk&#39;a ale w pewnych sytuacjach, nawet i on nie jest w stanie z tym zdaniem sobie poradzić,
przynajmniej nie bez dodatkowej konfiguracji. Jeśli na co dzień korzystamy z opcji debugowania
ADB/USB, to może nas spotkać nie lada dylemat -- ADB/USB debug vs. SafetyNet. Okazuje się, że można
pogodzić te dwie rzeczy.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Root w smartfonach Neffos od TP-LINK (X1, C5, C5 MAX, Y5, Y5L)</title>
      <link>https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/</link>
      <pubDate>Sun, 02 Apr 2017 19:27:56 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/</guid>
      <description>&lt;p&gt;Jakiś czas temu opisywałem proces ukorzeniania (root) smartfonów Neffos, a konkretnie były to
modele &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;C5&lt;/a&gt;, &lt;a href=&#34;http://www.neffos.pl/product/details/C5-Max&#34;&gt;C5 MAX&lt;/a&gt;, &lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;Y5&lt;/a&gt; i &lt;a href=&#34;http://www.neffos.pl/product/details/Y5L&#34;&gt;Y5L&lt;/a&gt;. Od tamtego czasu zdążyłem się nieco bardziej
zagłębić w struktury Androida i udało mi się ze źródeł &lt;a href=&#34;https://omnirom.org/&#34;&gt;OMNI ROM&lt;/a&gt; zbudować natwyne obrazy TWRP
dla każdego z tych ww. telefonów. Oczywiście TP-LINK ma w swojej ofercie jeszcze modele &lt;a href=&#34;http://www.neffos.pl/product/details/C5L&#34;&gt;C5L&lt;/a&gt;,
&lt;a href=&#34;http://www.neffos.com/en/product/details/Y50&#34;&gt;Y50&lt;/a&gt;, &lt;a href=&#34;http://www.neffos.com/en/product/details/X1&#34;&gt;X1&lt;/a&gt; oraz &lt;a href=&#34;http://www.neffos.com/en/product/details/X1Max&#34;&gt;X1 MAX&lt;/a&gt; ale póki co nie będę w stanie przygotować obrazu TWRP i opisu
jak ukorzenić Androidy w trzech z tych czterech smartfonów. Chodzi o to, że C5L został wycofany z
produkcji i raczej nie wpadnie on w moje łapki. Natomiast modele Y50 oraz X1 MAX nie są jeszcze
dostępne w polskiej ofercie TP-LINK&#39;a, przez co minie trochę czasu zanim uda mi się do nich dobrać.
Postanowiłem napisać świeży artykuł dotyczący procesu root w smartfonach Neffos C5, C5 MAX, Y5, Y5L
oraz X1. Po co pisać kolejny artykuł o ukorzenianiu Androida w Neffos&#39;ach? Generalnie rzecz biorąc,
w tych poprzednich wpisach było bardzo dużo informacji zbędnych z punktu widzenia przeciętnego
użytkownika, który chce zrootować system w swoim telefonie. Teraz, gdy dysponuję natywnymi obrazami
TWRP własnej roboty i zdobyłem nieco wiedzy z zakresu operowania na Androidzie, to proces root jest
o wiele prostszy i właśnie dlatego przydałoby się to wszystko opisać na nowo.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Framework Xposed i moduły do YouTube</title>
      <link>https://morfikov.github.io/post/android-framework-xposed-i-moduly-do-youtube/</link>
      <pubDate>Sat, 04 Mar 2017 21:56:54 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/android-framework-xposed-i-moduly-do-youtube/</guid>
      <description>&lt;p&gt;Stock&#39;owe Androidy w smartfonach mają ten problem, że zawierają całą masę preinstalowanych aplikacji
od Google. Nie to by jakoś mnie to bolało, no może za wyjątkiem braku możliwości ich wywalenia czy
wyłączenia. To co mnie trochę irytuje, to fakt obecności reklam w aplikacji YouTube. Nie da rady się
ich pozbyć praktycznie w żaden sposób. Zdaję sobie sprawę, że serwis YT można przeglądać w
Firefox&#39;ie i jeśli mamy &lt;a href=&#34;https://morfikov.github.io/post/android-blokowanie-reklam-z-adaway-na-smartfonie/&#34;&gt;zainstalowanego w telefonie adblock&#39;a, np. AdAway&lt;/a&gt;, czy też &lt;a href=&#34;https://morfikov.github.io/post/blokowanie-reklam-adblock-na-domowym-routerze-wifi/&#34;&gt;wdrożony
podobny filtr na domowym routerze WiFi z LEDE/OpenWRT&lt;/a&gt;, to te reklamy mogą zostać z powodzeniem
odfiltrowane, przynajmniej w Firefox&#39;ie. Jestem też świadom istnienia &lt;a href=&#34;https://morfikov.github.io/post/android-youtube-bez-reklam-na-smartfonie-newpipe/&#34;&gt;aplikacji NewPipe&lt;/a&gt;, która
jest zubożonym klientem YouTube. Niemniej jednak, te opisane wyżej sposoby mają jedną podstawową
wadę. Mianowicie tracimy lwią część funkcjonalności serwisu YouTube. Przykładem mogą być
powiadamiania w przypadku, gdy na jeden z subskrybowanych kanałów zostanie wrzucony jaki materiał
video. Taką opcję ma ta aplikacja od Google ale klikając w powiadomienie jest niemal pewne, że
włączy nam się jakaś wredna reklama o wiele głośniejsza niż sam filmik, który zamierzamy obejrzeć.
Innym problemem w przypadku tej góglowskiej aplikacji jest brak możliwości odtwarzania video w tle
czy też przy zgaszonym wyświetlaczu. Postanowiłem w końcu wziąć się za ogarnięcie tej góglowskiej
aplikacji YouTube i wyeliminować te drażniące mnie problemy &lt;a href=&#34;http://repo.xposed.info/module/de.robv.android.xposed.installer&#34;&gt;instalując w smartfonie framework
Xposed&lt;/a&gt; wraz z odpowiednimi modułami: &lt;a href=&#34;http://repo.xposed.info/module/com.pyler.youtubebackgroundplayback&#34;&gt;YouTube Background Playback&lt;/a&gt; oraz &lt;a href=&#34;http://repo.xposed.info/module/ma.wanam.youtubeadaway&#34;&gt;YouTube AdAway&lt;/a&gt;.
Jako, że nie jest to proces łatwy, to postanowiłem go opisać krok po kroku.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak zmienić hasło do zaszyfrowanego smartfona z Androidem</title>
      <link>https://morfikov.github.io/post/jak-zmienic-haslo-do-zaszyfrowanego-smartfona-z-androidem/</link>
      <pubDate>Fri, 03 Mar 2017 17:58:36 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-zmienic-haslo-do-zaszyfrowanego-smartfona-z-androidem/</guid>
      <description>&lt;p&gt;Każdy nowszy smartfon z Androidem oferuje możliwość zaszyfrowania wszystkich danych użytkownika
zlokalizowanych na partycji &lt;code&gt;/data/&lt;/code&gt; . Cały proces można przeprowadzić w bardzo prosty sposób i bez
większych problemów. Raz zaszyfrowanego telefonu nie da rady cofnąć do stadium przed szyfrowaniem i
w zasadzie to zabezpieczenie można zdjąć jedynie przez przywrócenie urządzenia do ustawień
fabrycznych. My tutaj jednak nie będziemy zajmować się samym szyfrowaniem smartfona i skupimy się
bardziej na hasłach zabezpieczających mających stać na straży dostępu do naszych cennych danych,
które mamy w telefonie. Większość z nas wykorzystuje krótkie hasło do odblokowania ekranu. To samo
hasło z kolei jest wykorzystywane do zaszyfrowania klucza używanego w procesie
szyfrowania/deszyfrowania danych na flash&#39;u smartfona. W ustawieniach Androida nie ma jednak opcji
rozdzielenia tych haseł i można by pomyśleć, że wykorzystanie czterocyfrowego kodu PIN jako
zabezpieczenie mija się z celem. Na pewno w części smartfonów tak ale niekoniecznie we wszystkich
modelach. Tak się składa, że akurat leży u mnie nieużywany Neffos Y5 od TP-LINK, to postanowiłem
przyjrzeć się nieco bliżej tej kwestii haseł i sprawdzić czy jest się czego obawiać stosując krótkie
hasła w zaszyfrowanych Androidach.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak odszyfrować zawartość karty SD w smartfonie z Androidem</title>
      <link>https://morfikov.github.io/post/jak-odszyfrowac-zawartosc-karty-sd-w-smartfonie-z-androidem/</link>
      <pubDate>Thu, 09 Feb 2017 18:01:56 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-odszyfrowac-zawartosc-karty-sd-w-smartfonie-z-androidem/</guid>
      <description>&lt;p&gt;W Androidzie 6.0 Marshmallow został wprowadzony ciekawy mechanizm zwany &lt;a href=&#34;https://source.android.com/devices/storage/adoptable&#34;&gt;Adoptable Storage&lt;/a&gt;,
który umożliwia &lt;a href=&#34;https://morfikov.github.io/post/android-formatowanie-karty-sd-jako-pamiec-wewnetrzna/&#34;&gt;zamontowanie karty SD w smartfonie jako pamięć wewnętrzna&lt;/a&gt;. W ten
sposób pamięć flash w telefonach, które mają jej niewiele, może zostać nieco rozbudowana. Jedyny
problem z tym całym Adoptable Storage jest taki, że Android szyfruje zawartość karty SD
automatycznie, przez co nie jesteśmy w stanie odczytać żadnych informacji z takiego nośnika na
innych urządzeniach. Istnieje jednak sposób, by rozszyfrować i tym samym uzyskać dostęp do danych
zgromadzonych na karcie SD z poziomu linux&#39;a, np. dystrybucji Debian. W tym artykule prześledzimy
sobie właśnie ten proces na przykładzie &lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;smartfona Neffos Y5&lt;/a&gt; od TP-LINK.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak przeprowadzić unroot na smartfonie Neffos Y5L od TP-LINK</title>
      <link>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-y5l-tp-link/</link>
      <pubDate>Thu, 12 Jan 2017 20:07:33 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-y5l-tp-link/</guid>
      <description>&lt;p&gt;Przeprowadzenie &lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-y5l-tp-link/&#34;&gt;procesu root na smartfonie Neffos Y5L&lt;/a&gt; od TP-LINK nie było tak łatwe jak w
przypadku innych modeli telefonów tego producenta. Niemniej jednak, trzeba zdawać sobie sprawę, że
ukorzenianie Androida niesie za sobą pewne zagrożenia. Nie chodzi tutaj tylko o niezaufane
aplikacje ale też trzeba brać pod uwagę możliwość przypadkowego (przypadki nie istnieją) skasowania
czy zmienienia plików systemowych, przez co nasz telefon może przestać nam działać poprawnie lub
też przestanie się w ogóle uruchamiać. Jeśli natomiast wgraliśmy SuperSU i praktycznie w ogóle z
niego nie korzystamy, to moim zdaniem lepiej jest przeprowadzić proces unroot i korzystać z
Neffos&#39;a Y5L, tak jak ze zwykłego urządzenia z Androidem na pokładzie. Proces cofania zmian w
systemie nie jest jakoś specjalnie trudny ale trzeba uważać, by w jego trakcie nie uszkodzić
smartfona. Ten artykuł ma na celu pokazanie jak cofnąć wszelkie zmiany wprowadzone w telefonie za
sprawą dostępu do praw administracyjnych w Neffos Y5L.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Root smartfona Neffos Y5L od TP-LINK</title>
      <link>https://morfikov.github.io/post/android-root-smartfona-neffos-y5l-tp-link/</link>
      <pubDate>Wed, 11 Jan 2017 19:30:26 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/android-root-smartfona-neffos-y5l-tp-link/</guid>
      <description>&lt;p&gt;Może i ten najtańszy smartfon w ofercie TP-LINK nie może popisać się najmocniejszymi podzespołami
ale w zasadzie ten fakt nie przeszkadza nam, by przeprowadzić na Neffos Y5L (TP801A) proces root.
Ten smartfon ma zbliżony SoC do Neffos Y5, a konkretnie mamy tutaj do czynienia z Snapdragon 210
(MSM8209) od Qualcomm&#39;a. Ten fakt sprawia, że w przypadku Neffos Y5L cały proces uzyskiwania
uprawnień administratora systemu przebiega bardzo podobnie do tego &lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-y5-od-tp-link/&#34;&gt;opisywanego wcześniej dla Neffos
Y5&lt;/a&gt;. Dlatego też poniższy artykuł za bardzo się nie różni i w zasadzie został jedynie lekko
przerobiony pod kątem zgodności ze smartfonem Neffos Y5L.&lt;/p&gt;
&lt;p&gt;Prostszy sposób na przeprowadzanie procesu root w smartfonach Neffos od TP-LINK z wykorzystaniem
natywnych obrazów TWRP &lt;a href=&#34;https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/&#34;&gt;został opisany w nowym wątku&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Root Integrity Check w smartfonach z Androidem</title>
      <link>https://morfikov.github.io/post/root-integrity-check-w-smartfonach-z-androidem/</link>
      <pubDate>Tue, 10 Jan 2017 18:24:47 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/root-integrity-check-w-smartfonach-z-androidem/</guid>
      <description>&lt;p&gt;W smartfonach Neffos od TP-LINK, którymi mam możliwość się bawić, standardowo jest dostępny tryb
recovery, a telefon można uruchomić w tym trybie przez przyciśnięcie przycisków VolumeUP + Power. W
zasadzie jest to jeden z podstawowych trybów pracy smartfona, który może nam pomóc, gdy mamy
problemy z uruchomieniem urządzenia. Zwykle w trybie recovery przeprowadza się takie czynności jak
czyszczenie partycji &lt;code&gt;/cache/&lt;/code&gt; i &lt;code&gt;/data/&lt;/code&gt; (Factory Reset). Z poziomu trybu recovery jesteśmy także w
stanie przeprowadzić aktualizację firmware (tego oprogramowania, które zarządza naszym telefonem). W
tym artykule jednak nie będziemy dokonywać żadnych z tych powyżej opisanych czynności. W menu trybu
recovery jest jeszcze jedna ciekawa opcja, tj. Root Integrity Check. Do czego ona służy i jak
interpretować wynik skanowania?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak przeprowadzić unroot na smartfonie Neffos Y5 od TP-LINK</title>
      <link>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-y5-od-tp-link/</link>
      <pubDate>Sat, 07 Jan 2017 18:56:00 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-y5-od-tp-link/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-y5-od-tp-link/&#34;&gt;Przeprowadzenie procesu root na smartfonie Neffos Y5&lt;/a&gt; od TP-LINK nie było tak łatwe jak w
przypadku innych modeli telefonów tego producenta. Niemniej jednak, trzeba zdawać sobie sprawę, że
ukorzenianie Androida niesie za sobą pewne zagrożenia. Nie chodzi tutaj tylko o niezaufane
aplikacje ale też trzeba brać pod uwagę możliwość przypadkowego (przypadki nie istnieją) skasowania
czy zmienienia plików systemowych, przez co nasz telefon może przestać nam działać poprawnie lub
też przestanie się w ogóle uruchamiać. Jeśli natomiast wgraliśmy SuperSU i praktycznie w ogóle z
niego nie korzystamy, to moim zdaniem lepiej jest przeprowadzić proces unroot i korzystać z
Neffos&#39;a Y5, tak jak ze zwykłego urządzenia z Androidem na pokładzie. Proces cofania zmian w
systemie nie jest jakoś specjalnie trudny ale trzeba uważać, by w jego trakcie nie uszkodzić
smartfona. Ten artykuł ma na celu pokazanie jak cofnąć wszelkie zmiany wprowadzone w telefonie za
sprawą dostępu do praw administracyjnych w Neffos Y5.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Root smartfona Neffos Y5 od TP-LINK</title>
      <link>https://morfikov.github.io/post/android-root-smartfona-neffos-y5-od-tp-link/</link>
      <pubDate>Fri, 06 Jan 2017 18:16:17 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/android-root-smartfona-neffos-y5-od-tp-link/</guid>
      <description>&lt;p&gt;Nie we wszystkich smartfonach Neffos da radę przeprowadzić proces root tak łatwo jak to miało
miejsce w przypadku modeli &lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-c5-od-tp-link/&#34;&gt;Neffos C5&lt;/a&gt; i &lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-c5-max-od-tp-link/&#34;&gt;Neffos C5 MAX&lt;/a&gt;. TP-LINK ma w swojej ofercie również
&lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;model Neffos Y5&lt;/a&gt; (TP802A) i on w odróżnieniu do tych dwóch poprzednich ma inne podzespoły, a
konkretnie SoC, którzy pochodzi od producenta Qualcomm (Snapdragon 210, model MSM8909). Root
smartfonów opartych o tego typu SoC przebiega nieco inaczej ale jest generalnie do zrobienia, choć
trzeba trochę się przyłożyć do procesu backup&#39;u flash&#39;a telefonu. Pozostała część jest w miarę
standardowa. W tym wpisie zostanie przeprowadzony proces root smartfona Neffos Y5.&lt;/p&gt;
&lt;p&gt;Prostszy sposób na przeprowadzanie procesu root w smartfonach Neffos od TP-LINK z wykorzystaniem
natywnych obrazów TWRP &lt;a href=&#34;https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/&#34;&gt;został opisany w nowym wątku&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak przeprowadzić unroot na smartfonie Neffos C5 MAX od TP-LINK</title>
      <link>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-c5-max-od-tp-link/</link>
      <pubDate>Wed, 14 Dec 2016 19:08:01 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-c5-max-od-tp-link/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-c5-max-od-tp-link/&#34;&gt;Proces root na smartfonie Neffos C5 MAX&lt;/a&gt; od TP-LINK można przeprowadzić w miarę bez większych
problemów, choć nie jest to rozwiązanie działające OOTB. Niemniej jednak, taki root telefonu czyni
go bardziej podatnym na zagrożenia ze strony wrogich aplikacji. Ponadto, kasując czy też zmieniając
pliki systemowe, możemy sprawić, że nasze urządzenie zwyczajnie przestanie nam działać, tj. już się
nie uruchomi. Niektórzy użytkownicy smartfonów nie zdają sobie z tego sprawy i ukorzeniają Androida
bez głębszego zastanowienia się. Mi jako linux&#39;iarzowi, root jest niezbędny do pracy ale czy aby na
pewno każdy musi go mieć? Ci z was, którzy taki root systemu przeprowadzili i nie korzystają z niego
praktycznie wcale, zastanawiają się pewnie czy istnieje sposób, by cofnąć wprowadzone zmiany i
przywrócić Androida do stanu pierwotnego. Krótka odpowiedź brzmi: &amp;quot;oczywiście, że tak&amp;quot; i temu
procesowi przyjrzymy się w niniejszym artykule.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Root smartfona Neffos C5 MAX od TP-LINK</title>
      <link>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-max-od-tp-link/</link>
      <pubDate>Tue, 13 Dec 2016 17:27:37 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-max-od-tp-link/</guid>
      <description>&lt;p&gt;Bawiąc się ostatnio &lt;a href=&#34;https://morfikov.github.io/post/recenzja-smartfon-neffos-c5-max-od-tp-link/&#34;&gt;smartfonem Neffos C5 MAX&lt;/a&gt; od TP-LINK, obiecałem sobie, że jak tylko będę
miał chwilę czasu, to postaram się ukorzenić Androida, który w tym telefonie siedzi (Lollipop).
Generalnie rzecz biorąc, sposób root&#39;owania tego urządzenia jest bardzo podobny do tego, który
miałem już możliwość &lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-c5-od-tp-link/&#34;&gt;przeprowadzić na innym modelu TP-LINK&#39;a, tj. Neffos C5&lt;/a&gt;. Dlatego też
poniższy artykuł jest bardzo zbliżony treścią, choć lekko zaktualizowany pod kątem Neffos&#39;a C5 MAX.
Grunt, że nie było żadnych problemów z przeprowadzeniem backup&#39;u flash&#39;a telefonu jak i samego
procesu root.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Formatowanie karty SD jako pamięć wewnętrzna</title>
      <link>https://morfikov.github.io/post/android-formatowanie-karty-sd-jako-pamiec-wewnetrzna/</link>
      <pubDate>Sun, 04 Dec 2016 19:18:40 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/android-formatowanie-karty-sd-jako-pamiec-wewnetrzna/</guid>
      <description>&lt;p&gt;Jakiś czas temu bawiąc się jednym z TP-LINK&#39;owch smartfonów, konkretnie to był &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;model Neffos C5&lt;/a&gt;,
nie byłem zbytnio zadowolony z faktu, że karta SD w takim telefonie może być sformatowana jedynie
systemem plików z rodziny FAT. Takie rozwiązanie niesie ze sobą pewne niedogodności, bo &lt;a href=&#34;https://pl.wikipedia.org/wiki/FAT32&#34;&gt;system
plików FAT ma dość spore ograniczenia&lt;/a&gt; jeśli chodzi o przechowywanie informacji. Niekoniecznie
wszyscy musimy wgrywać na smartfona bardzo duże pliki czy też trzymać ich tam setki GiB, bo to jest
raczej rzadkością, ale brak wsparcia uprawnień do plików i katalogów w systemie plików FAT powoduje,
że aplikacje w Androidzie nie chcą zapisywać swoich danych na karcie SD, która taki system plików
wykorzystuje. W efekcie trzeba kombinować, by &lt;a href=&#34;https://morfikov.github.io/post/android-brak-mozliwosci-zapisu-danych-na-karcie-sd-neffos-c5/&#34;&gt;aplikacja kamery/aparatu zapisywała zdjęcia czy
materiał video na karcie SD&lt;/a&gt;. Na smartfonach TP-LINK&#39;a, które mają zainstalowany Android 6.0
Marshmallow, np. &lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;Y5&lt;/a&gt; czy &lt;a href=&#34;http://www.neffos.pl/product/details/Y5L&#34;&gt;Y5L&lt;/a&gt;), jesteśmy w stanie sformatować karty SD jako pamięć
wewnętrzna za sprawą wprowadzonego w tej wersji Androida &lt;a href=&#34;https://source.android.com/devices/storage/adoptable&#34;&gt;mechanizmu Adoptable Storage&lt;/a&gt;.
Postanowiłem zatem sprawdzić jak taki proces formatowania karty SD przebiega i co dokładnie może
nam przynieść jego przeprowadzenie.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>XDA Labs: Repozytorium aplikacji i modułów Xposed</title>
      <link>https://morfikov.github.io/post/xda-labs-repozytorium-aplikacji-modulow-xposed/</link>
      <pubDate>Thu, 10 Nov 2016 15:44:05 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/xda-labs-repozytorium-aplikacji-modulow-xposed/</guid>
      <description>&lt;p&gt;Przeglądając sobie forum XDA w poszukiwaniu pewnych informacji natrafiłem na &lt;a href=&#34;https://forum.xda-developers.com/android/apps-games/labs-t3241866&#34;&gt;XDA Labs&lt;/a&gt;. Niby
jest to aplikacja mająca na celu poprawę doznań przy przeglądaniu tego forum na urządzeniach
mobilnych ale posiada ona też kilka użytecznych funkcji niekoniecznie związanych bezpośrednio z
interakcją ze stroną xda-developers. Przede wszystkim, mamy tutaj dostęp do repozytorium aplikacji
na Androida, mniej więcej coś jak &lt;a href=&#34;https://morfikov.github.io/post/android-repozytorium-aplikacji-opensource-f-droid/&#34;&gt;F-Droid&lt;/a&gt;. Przy pomocy XDA Labs jesteśmy też w stanie w prosty
sposób instalować moduły Xposed. Te powyższe rzeczy sprawiły, że postanowiłem się nieco bliżej
przyjrzeć aplikacji XDA Labs.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Blokowanie reklam z AdAway na smartfonie</title>
      <link>https://morfikov.github.io/post/android-blokowanie-reklam-z-adaway-na-smartfonie/</link>
      <pubDate>Sun, 30 Oct 2016 16:21:42 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/android-blokowanie-reklam-z-adaway-na-smartfonie/</guid>
      <description>&lt;p&gt;Dzięki &lt;a href=&#34;https://dnscrypt.org/&#34;&gt;dnscrypt-proxy&lt;/a&gt; jesteśmy w stanie &lt;a href=&#34;https://morfikov.github.io/post/jak-zaszyfrowac-zapytania-dns-na-smartfonie-dnscrypt-proxy/&#34;&gt;zaszyfrować zapytania DNS&lt;/a&gt; bezpośrednio na naszych
smartfonach. Niemniej jednak, w przypadku mojego Neffos&#39;a C5 od TP-LINK, w wielu aplikacjach
pojawiły się reklamy po wdrożeniu mechanizmu szyfrującego. Wcześniej oczywiście wykorzystywałem
&lt;a href=&#34;https://morfikov.github.io/post/blokowanie-reklam-adblock-na-domowym-routerze-wifi/&#34;&gt;adblock&#39;a bezpośrednio na routerze z wgranym firmware OpenWRT/LEDE&lt;/a&gt;, gdzie zapytania DNS do
adserwerów były filtrowane i blokowane bezpośrednio na tym urządzeniu. Po zaszyfrowaniu ruchu DNS w
telefonie, straciłem dostęp do mojego filtra reklam na routerze. Przydałoby się zatem
zaimplementować podobny mechanizm blokujący bezpośrednio na Androidzie, tak by ponownie wszystkie
te reklamy zniknęły przy jednoczesnym zachowaniu całej funkcjonalności płynącej za sprawą
szyfrowanego ruchu DNS. Jednym z rozwiązań jest wykorzystanie &lt;a href=&#34;https://adaway.org/&#34;&gt;narzędzia AdAway&lt;/a&gt;, które przy
pomocy pliku &lt;code&gt;/etc/hosts&lt;/code&gt; i lokalnego serwera www jest w stanie zablokować sporą większość reklam,
na które możemy natknąć się w internecie. Opis instalacji i konfiguracji AdAway zostanie
przedstawiony w niniejszym wpisie.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
