<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dac_read_search on Morfitronik</title>
    <link>https://morfikov.github.io/tags/dac_read_search/</link>
    <description>Recent content in dac_read_search on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Mon, 16 Sep 2019 18:20:15 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/dac_read_search/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Capability dac_read_search i dac_override w profilu AppArmor&#39;a</title>
      <link>https://morfikov.github.io/post/capability-dac_read_search-dac_override-w-profilu-apparmor/</link>
      <pubDate>Mon, 16 Sep 2019 18:20:15 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/capability-dac_read_search-dac_override-w-profilu-apparmor/</guid>
      <description>&lt;p&gt;Od jakiegoś czasu tworzę dla aplikacji w moim Debianie &lt;a href=&#34;https://gitlab.com/morfikov/debian-files/tree/master/configs/etc/apparmor.d&#34;&gt;profile pod AppArmor&lt;/a&gt;, tak by ograniczyć
programom swobodny dostęp do plików czy urządzeń. Tych profili zebrało się już trochę i podczas
pisania jednego z nich, zacząłem się zastanawiać czy wszystkie CAP&#39;y (linux capabilities), których
żądają procesy, są im faktycznie niezbędne do prawidłowego funkcjonowania. Chodzi póki co o
&lt;code&gt;dac_read_search&lt;/code&gt; i &lt;code&gt;dac_override&lt;/code&gt; . Co ciekawe, odmowa &lt;code&gt;dac_override&lt;/code&gt; w części aplikacji nie
powodowała żadnych negatywnych konsekwencji. Idąc dalej tym tropem, postanowiłem z paru profili AA
usunąć linijkę zawierającą &lt;code&gt;capability dac_override,&lt;/code&gt; zostawiając tym samym jedynie
&lt;code&gt;capability dac_read_search,&lt;/code&gt;  i zobaczyć co się stanie. Okazało się, że sporo programów już o
&lt;code&gt;dac_override&lt;/code&gt; nie prosi. Zatem co się zmieniło przez tych parę lat i czy ta zmiana dotyczy samych
aplikacji, a może kernela linux&#39;a?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
