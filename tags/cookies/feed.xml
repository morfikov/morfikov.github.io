<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cookies on Morfitronik</title>
    <link>https://morfikov.github.io/tags/cookies/</link>
    <description>Recent content in cookies on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Sat, 06 Jun 2015 18:50:51 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/cookies/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>WordPress: Ciasteczka i ich czas żywotności</title>
      <link>https://morfikov.github.io/post/wordpress-ciasteczka-i-ich-czas-zywotnosci/</link>
      <pubDate>Sat, 06 Jun 2015 18:50:51 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wordpress-ciasteczka-i-ich-czas-zywotnosci/</guid>
      <description>&lt;p&gt;Ciasteczka w WordPresie są bardzo ważne, bo wykorzystuje się je w procesie uwierzytelniania
logujących się i powracających użytkowników. Domyślnie czas ważności generowanych ciasteczek to &lt;code&gt;2&lt;/code&gt;
dni, chyba, że człowiek zaznaczy opcję &amp;quot;Pamiętaj&amp;quot; w formularzu logowania, wtedy ten okres ważności
ulega przedłużeniu do &lt;code&gt;14&lt;/code&gt; dni. Chodzi o to, że w przypadku gdyby ciasteczka nie posiadały terminu
ważności, to jeśli ktoś by wszedł w ich posiadanie, to mógłby się zalogować w serwisie bez większych
problemów, a tego przecież nie chcemy. Są jednak sytuacje, w których 2 czy nawet 14 dni, to ździebko
za mało (lub za dużo) i w tym wpisie postaramy się dostosować żywotność ciasteczek, tak by
odpowiadała naszym upodobaniom.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>WordPress: Klucze zabezpieczające ciasteczka</title>
      <link>https://morfikov.github.io/post/wordpress-klucze-zabezpieczajace-ciasteczka/</link>
      <pubDate>Sat, 06 Jun 2015 06:36:59 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wordpress-klucze-zabezpieczajace-ciasteczka/</guid>
      <description>&lt;p&gt;WordPress stara się dbać o bezpieczeństwo swoich użytkowników najlepiej jak potrafi. Dowodem na to
mogą być unikalne klucze i sole uwierzytelniające (Authentication Unique Keys and Salts) wprowadzone
w wersji 2.5 oraz nieco rozbudowane w wersji 2.7. Ten mechanizm nie wykorzystuje sesji PHP do
śledzenia np. statusu zalogowania, tylko zaprzęga do tego celu ciasteczka, by utrudnić (albo raczej
uniemożliwić) potencjalnemu atakującemu dostęp do witryny. Bez tych kluczy i soli jesteśmy w stanie
przewidzieć wszystkie składowe hasha danego ciasteczka, dlatego też powinniśmy pokusić się o ich
implementację na swojej stronie. Niemniej jednak, na necie jest bardzo dużo niskiej jakości
informacji na temat działania mechanizmu walidacji ciasteczek, a artykuły, które
&lt;a href=&#34;https://boren.blog/2008/07/14/ssl-and-cookies-in-wordpress-26/&#34;&gt;potrafią&lt;/a&gt;
&lt;a href=&#34;http://www.securitysift.com/understanding-wordpress-auth-cookies/&#34;&gt;go&lt;/a&gt;
&lt;a href=&#34;http://codeseekah.com/2012/04/09/why-wordpress-authentication-unique-keys-and-salts-are-important/&#34;&gt;opisać&lt;/a&gt;
w szerszym stopniu, są już lekko nieaktualne, bo zmienia się on praktycznie z każdą nową wersją
WordPressa. Zanim jednak przejdziemy do samych kluczy/soli, powinniśmy się zaznajomić ze sposobem w
jaki WordPress generuje i sprawdza wspomniane ciasteczka, na podstawie których to autoryzowane są
działania użytkowników naszego bloga.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
