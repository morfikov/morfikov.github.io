<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bridge on Morfitronik</title>
    <link>https://morfikov.github.io/tags/bridge/</link>
    <description>Recent content in Bridge on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Sun, 18 Sep 2016 13:01:58 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/bridge/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Mostek eth0 &#43; wlan0 z bridge-utils i wpa_supplicant</title>
      <link>https://morfikov.github.io/post/mostek-eth0-wlan0-bridge-utils-wpa_supplicant/</link>
      <pubDate>Sun, 18 Sep 2016 13:01:58 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/mostek-eth0-wlan0-bridge-utils-wpa_supplicant/</guid>
      <description>&lt;p&gt;Posiadając w komputerze kilka interfejsów sieciowych, prędzej czy później dostrzeżemy wady jakie
niesie ze sobą konfiguracja wszystkich posiadanych kart sieciowych. Skonfigurowanie szeregu
interfejsów przewodowych nie stanowi raczej większego wyzwania. Można je spiąć w jeden za pomocą
bonding&#39;u czy też konfigurując wirtualny interfejs mostka (bridge). A co w przypadku bezprzewodowych
interfejsów? Tu również możemy &lt;a href=&#34;https://morfikov.github.io/post/konfiguracja-interfejsow-bond-bonding/&#34;&gt;skonfigurować interfejs
bond0&lt;/a&gt; lub też podpiąć interfejs
&lt;code&gt;wlan0&lt;/code&gt; pod mostek. Jako, że bonding już opisywałem, to w tym artykule zajmiemy się mostkowaniem
interfejsu przewodowego i bezprzewodowego, które zwykle dostępne są w naszych laptopach. Ten proces
zostanie opisany w oparciu o dystrybucję linux&#39;a Debian i skontrastujemy go sobie z w/w bonding&#39;iem.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
