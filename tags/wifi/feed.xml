<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wifi on Morfitronik</title>
    <link>https://morfikov.github.io/tags/wifi/</link>
    <description>Recent content in wifi on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Fri, 06 Mar 2020 02:45:00 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/wifi/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak załadować firmware karty WiFi przed initrd/initramfs</title>
      <link>https://morfikov.github.io/post/jak-zaladowac-firmware-karty-wifi-przed-initrd-initramfs/</link>
      <pubDate>Fri, 06 Mar 2020 02:45:00 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-zaladowac-firmware-karty-wifi-przed-initrd-initramfs/</guid>
      <description>&lt;p&gt;Każdy kto ma laptopa wyposażonego w kartę WiFi, czy też ogólnie komputer posiadający bezprzewodową
sieciówkę, ten prawdopodobnie spotkał się z błędem podobnym do tego: &lt;code&gt;Direct firmware load for iwlwifi-6000g2a-6.ucode failed with error -2&lt;/code&gt; . W tym przypadku sprawa dotyczyła karty &lt;code&gt;Intel Corporation Centrino Advanced-N 6205 [Taylor Peak]&lt;/code&gt; działającej w oparciu o moduł kernela
&lt;code&gt;iwlwifi&lt;/code&gt; . W takich przypadkach zwykle wystarczy zainstalować firmware od określonego modułu i po
kłopocie. No i faktycznie w Debianie jest dostępny pakiet &lt;code&gt;firmware-iwlwifi&lt;/code&gt; , który zawiera ten
potrzebny plik &lt;code&gt;iwlwifi-6000g2a-6.ucode&lt;/code&gt; . Problem jednak w tym, że instalacja paczki z firmware
niekoniecznie może nam pomóc. Ten powyższy przykład nie jest odosobniony i czasami pliki z firmware
muszą być dostępne w chwili ładowania kernela do pamięci RAM czy też na etapie initramfs/initrd. W
takim przypadku zainstalowanie paczki z firmware w naszym linux&#39;ie nic nam nie da, bo pliki
rezydują na niezamontowanym jeszcze dysku. Jak zatem wybrnąć z tej wydawać by się było patowej
sytuacji?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak zmienić hostname w telefonie z Androidem</title>
      <link>https://morfikov.github.io/post/jak-zmienic-hostname-w-telefonie-z-androidem/</link>
      <pubDate>Wed, 29 Jan 2020 19:00:00 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-zmienic-hostname-w-telefonie-z-androidem/</guid>
      <description>&lt;p&gt;Przeglądając ostatnio listę sprzętów podłączonych do mojego routera WiFi, zauważyłem, że niektóre
pozycje na niej w polu z hostname mają coś na wzór &lt;code&gt;android-4c52c33baae0b4fa&lt;/code&gt; . Pierwsza część
nazwy tego hosta wskazuje na system operacyjny, a drugi kawałek to unikalny numerek ID.  Nie jestem
zbytnio fanem rozgłaszania takich informacji publicznie, bo mogą one ułatwić ewentualne ataki, oraz
też identyfikują jednoznacznie dane urządzenie (&lt;a href=&#34;https://source.android.com/devices/tech/connect/wifi-mac-randomization&#34;&gt;osobną kwestią jest adres MAC karty sieciowej&lt;/a&gt;).
Ponadto, mając w sieci wiele mobilnych urządzeń, ciężko jest czasem połapać się który telefon ma
przypisany konkretny adres IP (bez patrzenia w ustawienia telefonu). Z reguły na linux&#39;owym
desktopie czy laptopie zmiana hostname jest stosunkowo łatwym zadaniem ale w przypadku smartfona z
Androidem ten zabieg okazał się niezmiernie trudnym procesem. Jak zatem zmienić hostname telefonu,
by można było mu przypisać jakaś w miarę ludzką nazwę?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Wifi Roaming Fix i SWIFI, czyli roaming w smartfonie</title>
      <link>https://morfikov.github.io/post/wifi-roaming-fix-swifi-roaming-w-smartfonie/</link>
      <pubDate>Thu, 03 Nov 2016 19:33:54 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/wifi-roaming-fix-swifi-roaming-w-smartfonie/</guid>
      <description>&lt;p&gt;Ostatnimi czasy coraz więcej sieci domowych zaczyna być wyposażanych w sprzęt umożliwiający
połączenie bezprzewodowe. Router WiFi ma już chyba znaczna większość z nas ale nie są to jedyne
urządzenia, które są w stanie świadczyć bezprzewodowe usługi sieciowe. Im większy dystans dzieli
odbiornik od nadajnika lub też im więcej przeszkód stoi na bezpośredniej drodze komunikacji, tym
sygnał ulega większej degradacji. Zwykle w takiej sytuacji dokupujemy drugi router WiFi, ewentualnie
&lt;a href=&#34;http://www.tp-link.com.pl/products/list-12.html&#34;&gt;prosty AP&lt;/a&gt;, &lt;a href=&#34;http://www.tp-link.com.pl/products/list-10.html&#34;&gt;wzmacniacz sygnału WiFi&lt;/a&gt; czy też &lt;a href=&#34;http://www.tp-link.com.pl/products/list-18.html&#34;&gt;ekstendery powerline&lt;/a&gt; (PLC). Wszystko po
to, by jakoś przyzwoicie pokryć sygnałem całą przestrzeń użytkową naszego domu czy też miejsc, w
których spędzamy wolny czas. Każde takie urządzenie realizuje połączenie WiFi mniej więcej w ten
sam sposób, tj. zestawia punkt dostępu, do którego podłączamy komputer albo smartfona. O ile w
przypadku desktopów czy laptopów przełączanie się między tymi AP w zależności od siły sygnału nie
stanowi większego problemu, o tyle w przypadku smartfonów z Androidem nie jest już tak różowo, bo
przełączenie następuje jedynie przy całkowitej utracie sygnału z AP. Takiej sytuacji można zaradzić
ale trzeba posiłkować się dodatkowymi aplikacjami. W poniższym artykule zostaną opisane dwa takie
programiki: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.seah0rse.swififree&#34;&gt;SWIFI&lt;/a&gt; i &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.heleron.wifiroamingfix&#34;&gt;Wifi Roaming Fix&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Udostępnianie LTE/3G ze smartfona przez router OpenWRT (tethering)</title>
      <link>https://morfikov.github.io/post/udostepnianie-lte-3g-ze-smartfona-przez-router-openwrt-tethering/</link>
      <pubDate>Tue, 01 Nov 2016 18:14:53 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/udostepnianie-lte-3g-ze-smartfona-przez-router-openwrt-tethering/</guid>
      <description>&lt;p&gt;Przeglądając &lt;a href=&#34;http://eko.one.pl/forum/viewtopic.php?pid=175547&#34;&gt;forum eko.one.pl natrafiłem ciekawy
problem&lt;/a&gt;, nad którym też się zastanawiałem jakiś
czas temu. Chodzi o udostępnienie internetu komórkowego (LTE/3G) komputerom w domowej sieci za
pomocą smartfona (tzw. &lt;a href=&#34;https://pl.wikipedia.org/wiki/Tethering&#34;&gt;tethering&lt;/a&gt;). W takiej sytuacji, w
przypadku problemów z lokalnym dostawcą internetu moglibyśmy przepiąć wszystkie komputery na
internet świadczony przez operatora GSM, z którego korzystamy. Z reguły standardowy firmware
routerów WiFi nie pozwala na tego typu rozwiązania. Niemniej jednak, mając do dyspozycji router z
OpenWRT można spróbować połączyć go z naszym smartfonem udostępniając sieci lokalnej internet
LTE/3G. W tym artykule zostanie przedstawione tego typu rozwiązanie przy wykorzystaniu &lt;a href=&#34;http://www.tp-link.com.pl/en/products/details/cat-9_Archer-C7.html&#34;&gt;routera
Archer C7&lt;/a&gt; v2 od TP-LINK oraz
&lt;a href=&#34;http://www.neffos.com/en/product/details/C5&#34;&gt;smartfona Neffos C5&lt;/a&gt;, również od TP-LINK. Na routerze
zaś jest wgrana najnowsza stabilna wersja OpenWRT (Chaos Calmer). Sprawdzimy sobie jak takie
rozwiązanie wygląda oraz sprawuje się w praktyce i czy jest ono w ogóle godne jakiegoś większego
zainteresowania.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Mostek eth0 &#43; wlan0 z bridge-utils i wpa_supplicant</title>
      <link>https://morfikov.github.io/post/mostek-eth0-wlan0-bridge-utils-wpa_supplicant/</link>
      <pubDate>Sun, 18 Sep 2016 13:01:58 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/mostek-eth0-wlan0-bridge-utils-wpa_supplicant/</guid>
      <description>&lt;p&gt;Posiadając w komputerze kilka interfejsów sieciowych, prędzej czy później dostrzeżemy wady jakie
niesie ze sobą konfiguracja wszystkich posiadanych kart sieciowych. Skonfigurowanie szeregu
interfejsów przewodowych nie stanowi raczej większego wyzwania. Można je spiąć w jeden za pomocą
bonding&#39;u czy też konfigurując wirtualny interfejs mostka (bridge). A co w przypadku bezprzewodowych
interfejsów? Tu również możemy &lt;a href=&#34;https://morfikov.github.io/post/konfiguracja-interfejsow-bond-bonding/&#34;&gt;skonfigurować interfejs
bond0&lt;/a&gt; lub też podpiąć interfejs
&lt;code&gt;wlan0&lt;/code&gt; pod mostek. Jako, że bonding już opisywałem, to w tym artykule zajmiemy się mostkowaniem
interfejsu przewodowego i bezprzewodowego, które zwykle dostępne są w naszych laptopach. Ten proces
zostanie opisany w oparciu o dystrybucję linux&#39;a Debian i skontrastujemy go sobie z w/w bonding&#39;iem.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Router Archer C2600 od TP-LINK</title>
      <link>https://morfikov.github.io/post/recenzja-router-archer-c2600-od-tp-link/</link>
      <pubDate>Wed, 14 Sep 2016 18:20:30 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-router-archer-c2600-od-tp-link/</guid>
      <description>&lt;p&gt;Któż z nas nie ma gdzieś koło swojego domowego ogniska takiego małego urządzenia z antenami, które
nic tylko sobie leży gdzieś na półce i od czasu do czasu tylko mignie do nas swoimi diodami? Mowa
oczywiście o routerach WiFi, które można powoli chyba zacząć traktować jak nowych członków naszej
rodziny. Te elektroniczne stworzenia są tak bardzo użyteczne, że wielu z nas już sobie życia bez
nich nie wyobraża. Technologia bezprzewodowej łączności rozwija się bardzo prężnie i, gdy niecałe
dwa lata temu sprawiłem sobie mój pierwszy router WiFi (model
&lt;a href=&#34;http://www.tp-link.com.pl/products/details/TL-WR1043ND.html&#34;&gt;TL-WR1043ND&lt;/a&gt; v2), to myślałem, że
wystarczy mi on na jakiś dłuższy czas. Wtedy 450 mbit/s w paśmie 2,4 GHz to były naprawdę przyzwoite
osiągi, przynajmniej teoretycznie rzecz ujmując. Od tamtego czasu bardzo dużo się zmieniło w kwestii
WiFi, nie tylko pod względem przepustowości ale także technologii, które znajdują zastosowanie w tym
bezprzewodowym wymiarze otaczającej nas rzeczywistości. Tak się składa, że mam jedno z tych bardziej
zaawansowanych urządzeń i postanowiłem sobie je dokładnie obadać. Jest to &lt;a href=&#34;http://www.tp-link.com.pl/products/details/Archer-C2600.html&#34;&gt;router Archer
C2600&lt;/a&gt; od TP-LINK, który ma być zdolny
przesłać sygnał po WiFi z prędkością 800 mbit/s w paśmie 2,4 GHz i 1733 mbit/s w paśmie 5 GHz, także
zobaczmy co to jest za maszyna.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak skonfigurować roaming WiFi z wpa_supplicant w linux&#39;ie</title>
      <link>https://morfikov.github.io/post/jak-skonfigurowac-roaming-wifi-wpa_supplicant-linux/</link>
      <pubDate>Sat, 10 Sep 2016 12:13:09 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-skonfigurowac-roaming-wifi-wpa_supplicant-linux/</guid>
      <description>&lt;p&gt;Bezprzewodowe sieci WiFi są wszędzie. Wystarczy tylko przejść się kawałek po okolicy i przeskanować
eter, a sami zobaczymy, że wynik takiego skanowania zidentyfikuje nam całą masę domowych nadajników.
Oczywiście do większości z nich raczej nigdy nie będziemy mieć dostępu ale są wśród nich takie AP,
do których zwykliśmy się logować. Niekoniecznie te AP muszą należeć do naszej własnej domowej sieci
WiFi. Mogą to być, np. firmowe hotspoty. Nawet jeśli ograniczymy się tylko do naszego domu, to gdy
ten jest nieco większy, to prawdopodobnie jeden bezprzewodowy router nie wystarczy, by pokryć
zasięgiem całą dostępną przestrzeń użytkową. Będziemy musieli dokupić drugi router, czy jakiś
wzmacniacz sygnału. Być może też zdecydujemy się na &lt;a href=&#34;https://morfikov.github.io/post/transmitery-sieciowe-tl-wpa4226t-kit-tp-link/&#34;&gt;transmitery sieciowe
(powerline)&lt;/a&gt;. Jest cała masa
urządzeń, które mogą nam pomóc rozwiązać problem słabego zasięgu. To co zwykle łączy te urządzenia,
to fakt, że wszystkie z nich zawierają dodatkowy AP, który trzeba skonfigurować. Pojawia się zatem
problem przełączania między tymi punktami dostępowymi. Można sobie z tym poradzić konfigurując
roaming. W takiej sytuacji przełączanie między sieciami będzie następowało automatycznie, szybko i
bez naszego udziału. W linux&#39;ach roaming można włączyć przy pomocy narzędzia &lt;code&gt;wpa_supplicant&lt;/code&gt; i w
tym artykule zobaczymy jak tego dokonać.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Debian: Profilowanie sieci z guessnet, ifplugd i wpasupplicant</title>
      <link>https://morfikov.github.io/post/debian-profilowanie-sieci-guessnet-ifplugd-wpasupplicant/</link>
      <pubDate>Mon, 05 Sep 2016 13:01:08 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/debian-profilowanie-sieci-guessnet-ifplugd-wpasupplicant/</guid>
      <description>&lt;p&gt;Kilka dni temu na &lt;a href=&#34;https://forum.dug.net.pl/viewtopic.php?id=28903&#34;&gt;forum dug.net.pl&lt;/a&gt; pojawił się ciekawy wątek dotyczący problemu skonfigurowania
profilowanych sieci. Chodzi o to, że praktycznie każdy z nas jest po części w jakiś sposób mobilny
i zabiera laptopa ze sobą w dziwne miejsca. Sieci w tych lokalizacjach mogą cechować się różnym
poziomem bezpieczeństwa. Dlatego też zamiast korzystać z jednej konfiguracji sieci na linux&#39;ie,
można stworzyć szereg profili i w oparciu o nie dostosować sobie połączenie sieciowe. W tym artykule
spróbujemy zaimplementować takie rozwiązanie na Debianie wyposażonym w menadżer okien Openbox. W
skrócie stworzymy automat, który będzie nam działał w oparciu o pakiety guessnet, &lt;a href=&#34;http://0pointer.de/lennart/projects/ifplugd/&#34;&gt;ifplugd&lt;/a&gt; oraz
&lt;a href=&#34;https://w1.fi/wpa_supplicant/&#34;&gt;wpasupplicant&lt;/a&gt;. Cała konfiguracja zaś sprowadzać się będzie jedynie do edycji plików
&lt;code&gt;/etc/network/interfaces&lt;/code&gt; oraz &lt;code&gt;/etc/wpa_supplicant/wpa_supplicant.conf&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Niniejszy artykuł został nieco przerobiony po fazach eksperymentów. Przede wszystkim, zrezygnowałem
z zaprzęgania &lt;code&gt;guessnet&lt;/code&gt; do rozpoznawania sieci WiFi i aplikowania roamingu. Zamiast tego zostały
wykorzystane natywne rozwiązania roamingowe oferowane przez &lt;code&gt;wpa_supplicant&lt;/code&gt; . Zaowocowało to
uproszczeniem całej konfiguracji, co przełożyło się na wyeliminowanie pewnych błędów.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Metryki tras interfejsów eth0 i wlan0 w laptopie (metric)</title>
      <link>https://morfikov.github.io/post/metryki-tras-interfejsow-eth0-wlan0-laptop-metric/</link>
      <pubDate>Fri, 02 Sep 2016 17:50:11 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/metryki-tras-interfejsow-eth0-wlan0-laptop-metric/</guid>
      <description>&lt;p&gt;W obecnych czasach posiadanie komputera, który dysponuje kilkoma interfejsami sieciowymi nie jest
niczym niezwykłym. Praktycznie każdy laptop posiada już na pokładzie co najmniej jedną kartę WiFi i
minimum jeden port ethernet. W efekcie czego jesteśmy w stanie podłączyć się do sieci zarówno
przewodowo jak i bezprzewodowo. Problem jednak pojawia się w momencie, gdy chcemy wykorzystywać oba
te interfejsy, z tym, że dysponujemy jedynie niezbyt zaawansowanym menadżerem okien Openbox. Takie
środowiska zwykle nie mają na pokładzie automatów pokroju Network Manager, przez co bardziej
zaawansowana konfiguracja sieci może być dość skomplikowana. Do tej pory wykorzystywałem &lt;a href=&#34;https://morfikov.github.io/post/konfiguracja-interfejsow-bond-bonding/&#34;&gt;interfejs
bond0&lt;/a&gt;, by mieć możliwość łatwego
przełączania się miedzy sieciami. Istnieje inny sposób konfiguracji interfejsów &lt;code&gt;eth0&lt;/code&gt; i &lt;code&gt;wlan0&lt;/code&gt; w
pliku &lt;code&gt;/etc/network/interfaces&lt;/code&gt; tak, by działały one nam równolegle i nie powodowały problemów z
połączeniem, a wszystko za sprawą opcji &lt;code&gt;metric&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Przenośny router 3G/4G TL-MR3020  od TP-LINK</title>
      <link>https://morfikov.github.io/post/recenzja-router-3g-4g-tl-mr3020-tp-link/</link>
      <pubDate>Tue, 30 Aug 2016 17:44:53 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-router-3g-4g-tl-mr3020-tp-link/</guid>
      <description>&lt;p&gt;Coraz więcej użytkowników migruje od lokalnych providerów internetowych na technologię LTE, która
zapewnia nam połączenie z siecią globalną niezależnie od naszej fizycznej lokalizacji. Do obsługi
LTE potrzebny jest odpowiedni modem lub router WiFi, który już ma taki modem wbudowany. Jeśli
posiadamy modem LTE, to może się pojawić problem z udostępnianiem połączenia, np. w sieci domowej.
Jakby nie patrzeć taki modem jest przeznaczony na jedno urządzenie. Oczywiście w dalszym ciągu
możemy przerobić nasz router WiFi i dodać do niego obsługę modemów LTE ale takie rozwiązanie wymaga
firmware OpenWRT/LEDE. Istnieje prostsza alternatywa, która, można by rzec, działa OOTB i nie trzeba
się zbytnio wysilać przy jej implementacji. Musimy jednak posiadać odpowiednie urządzenie. W tym
artykule obadamy sobie &lt;a href=&#34;http://www.tp-link.com.pl/products/details/TL-MR3020.html&#34;&gt;przenośny router 3G/4G
TL-MR3020&lt;/a&gt; od TP-LINK.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Transmitery sieciowe TL-WPA4226T KIT od TP-LINK</title>
      <link>https://morfikov.github.io/post/transmitery-sieciowe-tl-wpa4226t-kit-tp-link/</link>
      <pubDate>Mon, 29 Aug 2016 18:01:22 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/transmitery-sieciowe-tl-wpa4226t-kit-tp-link/</guid>
      <description>&lt;p&gt;Wszystkim nam jest znany problem z niewielkim zasięgiem bezprzewodowych sieci WiFi. Nierzadko bywa
też tak, że sygnał z routera nie może się przebić przez grube ściany naszego domu, czy też większego
mieszkania. W takiej sytuacji szereg osób próbuje przestawiać router w bardziej dogodne miejsce, by
pokryć zasięgiem całą przestrzeń użytkową. Nie zawsze tego typu rozwiązanie jest jednak możliwe. Ci
bardziej majętni użytkownicy dokupują drugi router i spinają oba urządzenia mostem bezprzewodowym
WDS. O ile takie rozwiązanie może nam pomóc, to trzeba wziąć pod uwagę fakt, że punkty dostępowe
(AP) muszą być w swoim zasięgu oraz muszą wysyłać i odbierać dane, zatem użytkowa przepustowość
sieci WiFi spadnie nam dwukrotnie. Gdy do tego w grę wejdą nam jeszcze zakłócenia generowane przez
inne sieci w okolicy, to efekty mogą być niezbyt zadowalające. Poza tym, trzeba mieć również na
uwadze kompatybilność protokołu WDS, bo różni producenci inaczej go implementują. By rozwiązać ten
cały problem zasięgu w sieciach bezprzewodowych, możemy pokusić się o zakup czegoś, co nazywa się
transmiter sieciowy (ekstender powerline). Te urządzenia są w stanie &amp;quot;przebić się przez każdą
ścianę&amp;quot; i zapewnić nam połączenie z routerem WiFi na dystansie nawet do 300 metrów. Jak to
możliwe? W tym artykule odpowiemy na to pytanie testując jeden z &lt;a href=&#34;http://www.tp-link.com.pl/products/details/TL-WPA4226T-KIT.html&#34;&gt;ekstenderów powerline TL-WPA4226T
KIT (AV500)&lt;/a&gt; od TP-LINK&#39;a.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Antena TL-ANT2408C (8dBi, 2,4GHz) od TP-LINK</title>
      <link>https://morfikov.github.io/post/recenzja-antena-tl-ant2408c-8dbi-tp-link/</link>
      <pubDate>Fri, 26 Aug 2016 20:48:33 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-antena-tl-ant2408c-8dbi-tp-link/</guid>
      <description>&lt;p&gt;Jako użytkownik alternatywnych systemów operacyjnych wiem, że nie łatwo o sprzęt, który po
podłączeniu do komputera działa OOTB. Niemniej jednak, na rynku jest sporo urządzeń, które są w
stanie działać pod linux&#39;em nawet dość przyzwoicie, z tym, że trzeba pierw się naprawdę wysilić, by
je znaleźć. Tak było w przypadku &lt;a href=&#34;http://www.tp-link.com.pl/products/details/TL-WN722N.html&#34;&gt;adaptera WiFi
TL-WN722N&lt;/a&gt; od TP-LINK, który jest już ze
mną kilka lat. Nie miałem z nim problemów na swoim Debianie i praktycznie nie mam mu nic do
zarzucenia. No może za wyjątkiem bardzo przeciętnego zasięgu, choć ta karta dysponuje zewnętrzną
anteną 4 dBi. Postanowiłem zatem rozejrzeć się za nieco większymi antenami w celu wyeliminowania
problemów z zasięgiem. W ofercie TP-LINK&#39;a była &lt;a href=&#34;http://www.tp-link.com.pl/products/details/cat-5691_TL-ANT2408C.html&#34;&gt;antena
TL-ANT2408C&lt;/a&gt; (8 dBi, 2,4 GHz),
to pomyślałem, że przetestują ją i sprawdzę czy problem słabego zasięgu zostanie w końcu
wyeliminowany.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Transmiter sieciowy i jego panel admina pod linux&#39;em</title>
      <link>https://morfikov.github.io/post/transmiter-sieciowy-panel-admina-linux/</link>
      <pubDate>Sat, 20 Aug 2016 21:54:57 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/transmiter-sieciowy-panel-admina-linux/</guid>
      <description>&lt;p&gt;Bawię się ostatnio trochę transmiterem sieciowym (powerline ekstender). Konkretnie jest to zestaw
&lt;a href=&#34;http://www.tp-link.com.pl/products/details/TL-WPA4226T-KIT.html&#34;&gt;TL-WPA4226T KIT (AV500)&lt;/a&gt; od TP-LINK. Same urządzenia działają przyzwoicie i realizują powierzane
im funkcje w sposób bardzo zadowalający ale był jeden problem, który mi nie dawał spokoju. Do tych
ekstenderów jest dołączona płytka. Na płytce są aplikacje, które umożliwiają konfigurację tych
transmiterów sieciowych. Te programiki nie mają wersji dla linux&#39;a. Nasunęło mi się zatem pytanie:
to jak mam niby te transmitery skonfigurować pod tym systemem operacyjny? Niby one działają OOTB ale
w przypadku bezprzewodowego routera WiFi z alternatywnym firmware OpenWRT/LEDE na pokładzie
występuje kolizja adresów IP. Zarówno ekstendery jak i router roszczą sobie prawo do adresu
192.168.1.1 . Panel admina takich transmiterów umożliwia zmianę tego adresu, tylko nie mamy jak się
do niego dobrać z poziomu linux&#39;a. W tym artykule postaramy się rozwiązać problem kolizji adresów IP
i skonfigurujemy nasz transmiter tak, by miał inny adres.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Karta WiFi TP-LINK Archer T1U</title>
      <link>https://morfikov.github.io/post/recenzja-karta-wifi-tp-link-archer-t1u/</link>
      <pubDate>Fri, 19 Aug 2016 19:10:44 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-karta-wifi-tp-link-archer-t1u/</guid>
      <description>&lt;p&gt;Ostatnio recenzowałem dwie bezprzewodowe karty WiFi w standardzie mini/mikro, które podesłał mi
TP-LINK. W zestawie był jeszcze jeden adapter, a konkretnie chodzi o &lt;a href=&#34;http://www.tp-link.com.pl/products/details/Archer-T1U.html&#34;&gt;kartę Archer
T1U&lt;/a&gt;. Jest ona bardzo podobna do
&lt;a href=&#34;https://morfikov.github.io/post/recenzja-karta-wifi-tp-link-tl-wn725n/&#34;&gt;TL-WN725N&lt;/a&gt;, przynajmniej pod
względem wizualnym. To co odróżnia od siebie te dwa adaptery, to pasmo, w którym mogą pracować oraz
oczywiście prędkość transferu. Archer T1U działa w 5 GHz (standard AC) i teoretycznie może pochwalić
się prędkością do 433 mbit/s. Zobaczmy zatem jak on spisze się w przypadku linux&#39;ów.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Sterowniki dla karty WiFi Archer T1U (mt7610u_sta)</title>
      <link>https://morfikov.github.io/post/sterowniki-karta-wifi-archer-t1u-mt7610u_sta/</link>
      <pubDate>Thu, 18 Aug 2016 14:35:52 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/sterowniki-karta-wifi-archer-t1u-mt7610u_sta/</guid>
      <description>&lt;p&gt;Dziś postanowiłem się wziąć za ostatnią kartę WiFi, którą podesłał mi TP-LINK. Jest to nano adapter
Archer T1U V1 na &lt;a href=&#34;https://wikidevi.com/wiki/TP-LINK_TL-WDN5200&#34;&gt;czipie MediaTek MT7610U&lt;/a&gt;
identyfikowany w systemie jako &lt;code&gt;idVendor=2357&lt;/code&gt; , &lt;code&gt;idProduct=0105&lt;/code&gt; . Na opakowaniu pisało, że ta
karta działa na linux&#39;ach ale oczywiście w przypadku mojego Debiana, ten adapter nie został w ogóle
wykryty. Winą są zbyt stare sterowniki, które nie zostały zaktualizowane przez MediaTek od 2013
roku. TP-Link może i ma u siebie na stronie &lt;a href=&#34;http://www.tp-link.com/en/download/Archer-T1U.html#Driver&#34;&gt;nieco nowszą wersję
sterowników&lt;/a&gt;, bo z 2015 roku ale nie
udało mi się za ich sprawą zbudować poprawnie modułu &lt;code&gt;mt7610u_sta&lt;/code&gt; na kernelu 4.6 . Na szczęście
mamy jedną alternatywę, która pomoże nam jako tako wybrnąć z tej sytuacji.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Karta WiFi TP-LINK TL-WN823N</title>
      <link>https://morfikov.github.io/post/recenzja-karta-wifi-tp-link-tl-wn823n/</link>
      <pubDate>Wed, 17 Aug 2016 19:16:51 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-karta-wifi-tp-link-tl-wn823n/</guid>
      <description>&lt;p&gt;Jako mobilny osobnik wiem jak ważne są niewielkie rozmiary sprzętu, na którym przyjdzie mi operować
gdzieś poza miejscem mojego zamieszkania. Wielkość urządzeń ma zatem dla mnie ogromne znaczenie.
Nikogo raczej nie trzeba przekonywać, że wraz z miniaturyzacją sprzętu, maleje również jego
funkcjonalność. Idealne urządzenie to takie, które ma na tyle małe wymiary, by za ich sprawą nie
ucierpiały wszystkie te niezbędne nam dobrodziejstwa oferowane przez nowe technologie. Bez internetu
w obecnych czasach ani rusz, zatem potrzebne nam są różnego rodzaju adaptery i karty WiFi
umożliwiające naszym komputerom bezprzewodowe połączenie sieciowe. Jest cała masa urządzeń, które
moglibyśmy podłączyć do naszych laptopów ale nie wszystkie z nich mają na tyle małe wymiary, by ich
zastosowanie było dla nas iście komfortowe. TP-LINK dysponuje w swojej ofercie kilkoma
bezprzewodowymi kartami sieciowymi w standardzie micro/mini. W tym wpisie zobaczymy jak na linux&#39;ie
będzie sprawował się &lt;a href=&#34;http://www.tp-link.com.pl/products/details/TL-WN823N.html&#34;&gt;mini adapter TL-WN823N&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Sterowniki do karty TP-LINK TL-WN823N (8192eu)</title>
      <link>https://morfikov.github.io/post/sterowniki-tp-link-tl-wn823n-8192eu/</link>
      <pubDate>Fri, 12 Aug 2016 20:50:39 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/sterowniki-tp-link-tl-wn823n-8192eu/</guid>
      <description>&lt;p&gt;Systemy operacyjne nie są w stanie wejść w interakcję ze sprzętem, do którego nie posiadają
sterowników. Linux już od dość dawna żyje sobie wśród nas i coraz bardziej pcha się na desktopy.
Niemniej jednak producenci tych wszystkich urządzeń niechętnie wypuszczają sterowniki dla
alternatywnych systemów. Ostatnio próbowałem uruchomić &lt;a href=&#34;http://www.tp-link.com.pl/products/details/TL-WN823N.html&#34;&gt;adapter TL-WN823N
V2&lt;/a&gt; od firmy TP-LINK. Na opakowaniu
widnieje napis sugerujący, że ta karta działa pod linux&#39;em. Rzeczywistość jednak okazała się
zupełnie inna. Mianowicie, mój Debian w ogóle nie rozpoznał tej karty. Jedyne informacje jakie mi
zwrócił to nazwę producenta czipu, którym okazał się być &lt;code&gt;Realtek&lt;/code&gt; , oraz &lt;code&gt;idVendor=2357&lt;/code&gt; i
&lt;code&gt;idProduct=0109&lt;/code&gt; . &lt;a href=&#34;http://www.tp-link.com/en/download/TL-WN823N.html#Driver&#34;&gt;Sterowników dostępnych na stronie
TP-LINK&#39;a&lt;/a&gt; nie szło zbudować na obecnym
kernelu 4.6 . Trzeba było zatem poszukać innej alternatywy. Na szczęście udało się znaleźć moduł
8192eu (rtl8192eu), który się skompilował i zainstalował bez problemu. Karta TL-WN823N V2 została
wykryta i działa. W tym wpisie zostanie pokazany proces kompilacji tego modułu.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Karta WiFi TP-LINK TL-WN725N (r8188eu)</title>
      <link>https://morfikov.github.io/post/recenzja-karta-wifi-tp-link-tl-wn725n/</link>
      <pubDate>Thu, 11 Aug 2016 21:00:33 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-karta-wifi-tp-link-tl-wn725n/</guid>
      <description>&lt;p&gt;Świat ciągle idzie do przodu i oferuje nam coraz to nowsze rozwiązania, które są w większym stopniu
dostosowane do naszych potrzeb. Mobilność w obecnych czasach to podstawa. Niekoniecznie jednak
musimy upychać naszą wirtualną rzeczywistość w urządzeniu wielkości smartfona. Może takie
rozwiązanie idealnie nadaje się dla osób podróżujących ale też nic nie stoi na przeszkodzie, by
zabrać ze sobą nieco większy komputer w postaci laptopa. Niemniej jednak, w terenie ciężko o
przewód, którym moglibyśmy się podpiąć do sieci. Dlatego też technologia WiFi jest nam zwykle
niezbędna. Na rynku jest wiele kart i adapterów, które mogą nam umożliwić połączenie bezprzewodowe,
choć nie wszystkie z nich są na tyle poręczne, abyśmy rozważali ich zakup i użytkowanie. Potrzebne
jest nam raczej urządzenie na tyle minimalistyczne, że na pierwszy rzut oka nie zauważymy żadnej
różnicy po jego podłączeniu do komputera. Firma TP-LINK oferuje kilka rozwiązań tego typu i w tym
wpisie przyjrzymy się nieco bliżej &lt;a href=&#34;http://www.tp-link.com.pl/products/details/TL-WN725N.html&#34;&gt;nano adapterowi WiFi TL-WN725N&lt;/a&gt; i przetestujemy jego
kompatybilność z linux&#39;ami.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Różne adresy LAN i WLAN w OpenWRT (Routed AP)</title>
      <link>https://morfikov.github.io/post/rozne-adresy-lan-wlan-openwrt-routed-ap/</link>
      <pubDate>Thu, 07 Jul 2016 16:20:17 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/rozne-adresy-lan-wlan-openwrt-routed-ap/</guid>
      <description>&lt;p&gt;W standardowej konfiguracji OpenWRT, hosty łączące się za pomocą sieci bezprzewodowej jak i tej
przewodowej są spięte razem za pomocą mostka (bridge) i tworzą jedną sieć lokalną. Nie ma w tym nic
dziwnego, bo przecie chcemy, aby komunikacja między wszystkimi hostami w sieci LAN odbywała się bez
większych przeszkód. Przynajmniej takie jest standardowe podejście przy konfiguracji sieci domowej.
Niemniej jednak, w pewnych przypadkach istnieje potrzeba oddzielenia maszyn, które nawiązują
połączenie za pomocą sieci WiFi od tych, które łączą się przewodowo. Generalnie chodzi o różne
adresy, które zostaną przypisane sieciom LAN i WLAN. Rozwiązanie, które zostanie opisane w tym
artykule jest podobne do tworzenia &lt;a href=&#34;https://morfikov.github.io/post/bezprzewodowa-siec-goscinna-guest-wlan/&#34;&gt;bezprzewodowej sieci
gościnnej&lt;/a&gt; (guest WLAN), z tą
różnicą, że w tym przypadku będziemy mieli do czynienia tylko z jedną siecią WiFi (tzw. &lt;a href=&#34;https://wiki.openwrt.org/doc/recipes/routedap&#34;&gt;Routed
AP&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Bezprzewodowa sieć gościnna (guest WLAN)</title>
      <link>https://morfikov.github.io/post/bezprzewodowa-siec-goscinna-guest-wlan/</link>
      <pubDate>Wed, 06 Jul 2016 21:00:34 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/bezprzewodowa-siec-goscinna-guest-wlan/</guid>
      <description>&lt;p&gt;Routery WiFi zwykle oferują jedną sieć bezprzewodową, do której użytkownicy mogą się łączyć po
podaniu nazwy ESSID oraz hasła. W przypadku znanych nam osób chcących korzystać z udostępnianego
przez nas AP, taka sieć powinna nam w pełni wystarczyć. Problem jednak zaczyna się w przypadku tych
użytkowników, którym chcemy zezwolić na dostęp do naszej sieci WiFi ale nie darzymy ich zbytnio
wysokim kredytem zaufania. By ten problem rozwiązać, w OpenWRT możemy skonfigurować &lt;a href=&#34;https://wiki.openwrt.org/doc/recipes/guest-wlan&#34;&gt;mechanizm zwany
&amp;quot;guest WLAN&amp;quot;&lt;/a&gt;, czyli bezprzewodowa sieć gościnna. W
tym artykule zobaczymy jak odseparować od siebie hosty w sieci LAN od tych w sieci gościnnej.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
