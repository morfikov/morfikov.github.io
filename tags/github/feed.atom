<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on Morfitronik</title>
    <link>https://morfikov.github.io/tags/github/</link>
    <description>Recent content in github on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Tue, 12 Oct 2021 00:15:00 +0200</lastBuildDate><atom:link href="https://morfikov.github.io/tags/github/feed.atom" rel="self" type="application/atom+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Komentarze GitHub Issues na blogu Hugo korzystającym z GitHub Pages</title>
      <link>https://morfikov.github.io/post/komentarze-github-issues-na-blogu-hugo-korzystajacym-z-github-pages/</link>
      <pubDate>Tue, 12 Oct 2021 00:15:00 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/komentarze-github-issues-na-blogu-hugo-korzystajacym-z-github-pages/</guid>
      <description>&lt;p&gt;Jakiś czas temu &lt;a href=&#34;/post/disqus-wprowadza-reklamy-disqus-musi-odejsc/&#34;&gt;Disqus wprowadził reklamy&lt;/a&gt; w swoim systemie komentarzy i bez mojej świadomej
oraz dobrowolnej zgody serwował je użytkownikom odwiedzającym mojego bloga. W tamtym czasie nie
miałem za bardzo informacji jak te komentarze zastąpić na statycznej stronie renderowanej przy
pomocy Hugo. Jako, że sporo osób narzekało na to, że tutaj nie ma komentarzy, przez co liczba
maili, które do mnie docierały, była trochę ponad moje moce przerobowe. Postanowiłem zatem
zaimplementować system komentarzy oparty o GitHub Issues, czyli ten mechanizm, z którym
prawdopodobnie każdy z nas miał już styczność zgłaszając bug&#39;a (czy też inne zapytanie) twórcom
swoich ulubionych linux&#39;owych projektów OpenSource. Okazało się, że przy &lt;a href=&#34;https://decovar.dev/blog/2019/04/19/github-comments-hugo/&#34;&gt;pomocy API GitHub&#39;a można
w dość prosty sposób te komentarze pokazać na blogu&lt;/a&gt; ale problem pojawił się w przypadku stron
mających setki czy nawet tysiące wpisów już opublikowanych. Jak zatem na takich blogach wdrożyć
komentarze GitHub&#39;a, tak by przy okazji nie wyskoczyć z okna o 5 nad ranem?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Implementacja kluczy GPG na github&#39;ie</title>
      <link>https://morfikov.github.io/post/implementacja-kluczy-gpg-githubie/</link>
      <pubDate>Sun, 03 Jul 2016 15:30:22 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/implementacja-kluczy-gpg-githubie/</guid>
      <description>&lt;p&gt;Github to serwis, w którym użytkownicy mogą pracować wspólnie nad różnymi projektami utrzymywanymi w
systemie kontroli wersji GIT. Konto w w/w serwisie może być łakomym kąskiem dla przestępców,
zwłaszcza gdy uczestniczymy w dość rozbudowanych projektach i przyczyniamy się do ich tworzenia w
dużym stopniu. Z tego powodu github implementuje rozwiązania, które mają na celu poprawić
bezpieczeństwo naszej pracy. Mamy już uwierzytelnianie dwuetapowe, &lt;a href=&#34;/post/github-z-obsluga-kluczy-ssh/&#34;&gt;obsługę kluczy
SSH&lt;/a&gt; ale nadal brakowało odpornego systemu,
który by uwierzytelnił osoby współdziałające z nami. Chodzi o to, że wszelkie zmiany w repozytorium
GIT muszą być przez kogoś poczynione. Każdy commit ma zatem swojego właściciela ale my nigdy nie
mamy pewności co do tego, kto tak naprawdę tej zmiany dokonał. Dlatego też &lt;a href=&#34;https://github.com/blog/2144-gpg-signature-verification&#34;&gt;github umożliwił
ostatnio podpisywanie tagów i commit&#39;ów przy pomocy kluczy
GPG&lt;/a&gt;. To właśnie temu tematowi będzie
poświęcony niniejszy wpis.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
