<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>live on Morfitronik</title>
    <link>https://morfikov.github.io/tags/live/</link>
    <description>Recent content in live on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Fri, 12 Jun 2015 15:48:19 +0000</lastBuildDate>
    
	<atom:link href="https://morfikov.github.io/tags/live/feed.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Własny system live i tworzenie go od podstaw</title>
      <link>https://morfikov.github.io/post/wlasny-system-live-i-tworzenie-go-od-podstaw/</link>
      <pubDate>Fri, 12 Jun 2015 15:48:19 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wlasny-system-live-i-tworzenie-go-od-podstaw/</guid>
      <description>&lt;p&gt;Jeśli mamy nieco odbiegające od standardowych oczekiwania dotyczące systemów live, np. wynikają one
z braku obecności pewnych pakietów w obrazie wygenerowanym przez developerów jakiejś konkretnej
dystrybucji, to możemy sobie stworzyć własny obraz live, gdzie mamy możliwość dostosowania całej
konfiguracji takiego systemu wliczając w to również i instalację brakujących pakietów. Obrazy, które
są &lt;a href=&#34;https://www.debian.org/CD/live/&#34;&gt;dostępne na stronie debiana&lt;/a&gt;, zawierają wydanie stabilne i jak
wiadomo, nie jest ono zbyt aktualne pod względem oprogramowania. Natomiast jeśli chodzi o tworzenie
własnych obrazów live, to możemy zdefiniować sobie gałąź, z której mają być pobierane pakiety użyte
w procesie budowania, jak i również dograć te pakiety, które nie są w żaden sposób powiązane z daną
dystrybucją.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Persistence czyli zachowanie zmian w systemie live</title>
      <link>https://morfikov.github.io/post/persistence-czyli-zachowanie-zmian-w-systemie-live/</link>
      <pubDate>Thu, 11 Jun 2015 19:12:27 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/persistence-czyli-zachowanie-zmian-w-systemie-live/</guid>
      <description>&lt;p&gt;Systemy live mają jedną ale za to dość dającą się odczuć wadę, mianowicie chodzi o to, że po
wypaleniu takiego obrazu, nie mamy możliwości zachowania zmian. Nawet jeśli doinstalujemy nowy
pakiet czy wyedytujemy jakiś plik, to zmiany wprowadzone przez nas są jedynie tymczasowe, bo
dokonywane w pamięci operacyjnej RAM. W efekcie jeśli uruchomimy taki system ponownie, będziemy
zmuszeni przeprowadzać raz jeszcze wszystkie poprzednie czynności pod kątem jego dostosowania. W
przypadku cd/dvd nie mamy praktycznie żadnego pola manewru. Inaczej jednak ma się sprawa jeśli
chodzi o pendrive, bo tutaj możemy utworzyć osobną partycję, gdzie będą przechowywane wszystkie
zmiany jakich dokonamy.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Squashfs jako system plików obrazów live</title>
      <link>https://morfikov.github.io/post/squashfs-jako-system-plikow-obrazow-live/</link>
      <pubDate>Thu, 11 Jun 2015 17:06:16 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/squashfs-jako-system-plikow-obrazow-live/</guid>
      <description>&lt;p&gt;System live to nic innego jak spakowany system plików jakieś zainstalowanej dystrybucji, który
podczas startu maszyny jest montowany w trybie tylko do odczytu, a potrzebne pliki są wypakowywane w
czasie rzeczywistym w pamięci operacyjnej RAM. Do implementacji takiego rozwiązania stosuje się
&lt;a href=&#34;https://pl.wikipedia.org/wiki/SquashFS&#34;&gt;squashfs&lt;/a&gt; i jako, że jest to system plików tylko do
odczytu, nie można go jako tako edytować. Nie jesteśmy też zupełnie na straconej pozycji, bo możemy
skorzystać z dwóch rozwiązań:
&lt;a href=&#34;https://morfikov.github.io
/post/persistence-czyli-zachowanie-zmian-w-systemie-live/&#34;&gt;persistence&lt;/a&gt; lub możemy
pokusić się o przepakowanie systemu plików.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jak wgrać system live na uszkodzony pendrive</title>
      <link>https://morfikov.github.io/post/jak-wgrac-system-live-na-uszkodzony-pendrive/</link>
      <pubDate>Thu, 11 Jun 2015 14:43:35 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-wgrac-system-live-na-uszkodzony-pendrive/</guid>
      <description>&lt;p&gt;Każdy z nas spotkał się już chyba w swoim życiu z systemami live. To taki wynalazek zawierający
domyślne oprogramowanie, tak skonfigurowane, by system zdołał się odpalić na większość maszyn w ich
pamięci operacyjnej, oczywiście zakładając, że wymagania sprzętowe zostaną zaspokojone, głównie
chodzi o pamięć RAM. Takie systemy live są dostarczane w postaci kilku rodzajów obrazów: iso, hdd
oraz hybryda. Pierwszy z nich zwykle wypala się na płytkach, drugi na pendrive, z kolei hybrydowy
obraz można wgrać na każdy rodzaj urządzenia i nawet wykorzystać w przypadku maszyn wirtualnych i
zwykle spotkamy się z tym ostatnim typem, nawet jeśli plik ma rozszerzenie &lt;code&gt;.iso&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>