<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tp-link on Morfitronik</title>
    <link>https://morfikov.github.io/tags/tp-link/</link>
    <description>Recent content in tp-link on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Tue, 12 May 2020 21:03:00 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/tp-link/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Instalacja i konfiguracja AdGuard na routerze z OpenWRT</title>
      <link>https://morfikov.github.io/post/instalacja-konfiguracja-adguard-na-routerze-z-openwrt/</link>
      <pubDate>Tue, 12 May 2020 21:03:00 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/instalacja-konfiguracja-adguard-na-routerze-z-openwrt/</guid>
      <description>&lt;p&gt;Jakiś już czas temu opisywałem w jaki sposób &lt;a href=&#34;https://morfikov.github.io/post/blokowanie-reklam-adblock-na-domowym-routerze-wifi/&#34;&gt;skonfigurować AdBlock&#39;a na routerze WiFi z wgranym
firmware OpenWRT&lt;/a&gt; oraz jak wdrożyć &lt;a href=&#34;https://morfikov.github.io/post/konfiguracja-dnscrypt-proxy-w-openwrt/&#34;&gt;szyfrowanie zapytań DNS w oparciu o dnscrypt-proxy dla
wszystkich klientów naszej sieci domowej&lt;/a&gt;. Zarówno AdBlock jak i dnscrypt-proxy można w dalszym
ciągu wykorzystywać, zwłaszcza na routerach wyposażonych w niewielkich rozmiarów flash i mało
pamięci RAM. Niemniej jednak, nie każdy lubi konfigurować swój bezprzewodowy router za
pośrednictwem terminala. Dla takich osób powstał właśnie &lt;a href=&#34;https://github.com/AdguardTeam/AdGuardHome#comparison&#34;&gt;AdGuard Home&lt;/a&gt;, który ma na celu
możliwie uprościć konfigurację routera, przynajmniej jeśli chodzi o rzeczy związane z protokołem
DNS. W tym artykule przyjrzymy się nieco bliżej AdGuard&#39;owi i zobaczymy czy można z niego zrobić
jakiś większy użytek.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak zbudować/uaktualnić firmware OpenWRT dla routera WiFi</title>
      <link>https://morfikov.github.io/post/jak-zbudowac-uaktualnic-firmware-openwrt-dla-routera-wifi/</link>
      <pubDate>Mon, 13 Apr 2020 21:03:00 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-zbudowac-uaktualnic-firmware-openwrt-dla-routera-wifi/</guid>
      <description>&lt;p&gt;Od dłuższego już czasu na swoich routerach WiFi wykorzystuję firmware OpenWRT. W przypadku mojego
domowego routera TP-Link Archer C7 v2 zarządzanie jego oprogramowaniem sprowadza się w zasadzie do
przeprowadzania aktualizacji raz na kilka tygodni czy miesięcy. Z reguły nie jest to jakoś
czasochłonne zadanie, bo wystarczy pobrać stosowny obraz z &lt;a href=&#34;http://dl.eko.one.pl/openwrt-19.07/targets/ath79/generic/&#34;&gt;serwera eko.one.pl&lt;/a&gt; i wrzucić go na
router czy to przez interfejs LuCI, czy też przez &lt;code&gt;sysupgrade&lt;/code&gt; . No tak tylko, że po wgraniu
OpenWRT na flash routera trzeba zwykle też dograć szereg pakietów, których nie ma w standardzie,
przynajmniej jeśli chodzi akurat o ten mój router bezprzewodowy. Podobnie sprawa ma się z
odtwarzaniem konfiguracji, której pewne elementy pozostają niezmienne nawet po aktualizacji ze
starszego wydania OpenWRT do nowszego. Postanowiłem zatem zgłębić nieco proces kompilacji źródeł i
budowy obrazu z firmware OpenWRT, tak by nieco zautomatyzować sobie (czy też wręcz wyeliminować)
chociaż część z kroków, które zwykle przeprowadzam chwilę po wgraniu obrazu na router. Cały ten
proces budowy obrazu zostanie opisany przy wykorzystaniu dystrybucji Debian linux.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Zmiana domyślnego hasła szyfrującego klucz główny w Neffos X1 i X1 Max</title>
      <link>https://morfikov.github.io/post/zmiana-domyslnego-hasla-szyfrujacego-klucz-glowny-w-neffos-x1-i-x1-max/</link>
      <pubDate>Wed, 16 May 2018 17:17:30 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/zmiana-domyslnego-hasla-szyfrujacego-klucz-glowny-w-neffos-x1-i-x1-max/</guid>
      <description>&lt;p&gt;Nie bawiłem się ostatnio Neffos&#39;ami ale w końcu udało mi się doprowadzić szyfrowanie w X1 Max (i
pewnie X1 też) do ładu. Dla przypomnienia, to w tych modelach najwyraźniej system zapomniał by
pytać użytkownika o hasło podczas konfiguracji, a że partycja z danymi użytkownikami jest
zaszyfrowana w standardzie (bez możliwości zmiany), to ustawiane jest domyślne hasło tj.
&lt;code&gt;default_password&lt;/code&gt; . W ten sposób z technicznego punktu widzenia wilk jest syty i owca cała,
no bo użytkownik nie jest dręczony dodatkowym hasłem przy uruchamianiu systemu (obok hasła blokady
ekranu), no i dane są zaszyfrowane, no chyba, że ktoś wpisze ten nieszczęsny
&lt;code&gt;default_password&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak ustalić IP i nazwę pliku trybu recovery w routerach TP-Link</title>
      <link>https://morfikov.github.io/post/jak-ustalic-ip-i-nazwe-pliku-trybu-recovery-w-routerach-tp-link/</link>
      <pubDate>Thu, 17 Aug 2017 21:22:08 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-ustalic-ip-i-nazwe-pliku-trybu-recovery-w-routerach-tp-link/</guid>
      <description>&lt;p&gt;Jeden z moich routerów, a konkretnie był
to &lt;a href=&#34;http://www.tp-link.com/us/download/Archer-C7.html&#34;&gt;Archer C7&lt;/a&gt; v2 wymagał, by powrócić jego
firmware z LEDE/OpenWRT do tego, który widnieje na oficjalnej stronie TP-Link. Niby ta czynność nie
jest zbyt skomplikowana ale jak zwykle coś poszło nie tak. Konkretnie to odłączyłem zasilanie nie w
tej listwie co trzeba i w efekcie podczas flash&#39;owania routera nowym firmware, to urządzenie się
zwyczajnie wyłączyło. Zawału oczywiście nie dostałem, bo przecież obraz, który był wgrywany na
router nie zawierał uboot&#39;a, czyli części z bootloader&#39;em, więc wiedziałem, że wystarczy przez tryb
recovery wgrać obraz jeszcze raz i po sprawie. Problem w tylko w tym, że nie znałem w zasadzie ani
nazwy pliku obrazu, ani też adresu IP, który jest wymagany dla połączenia w przypadku routera
Archer C7 v2. Te dane można naturalnie znaleźć w sieci ale co w przypadku, gdy ubijemy sobie w taki
sposób nasz jedyny router, przez co pozbawimy się jednocześnie dostępu do internetu? Czy istnieje
jakiś sposób na ustalenie tych danych, inny niż przez konsolę szeregową?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Smartfon Neffos X1 od TP-LINK</title>
      <link>https://morfikov.github.io/post/recenzja-smartfon-neffos-x1-od-tp-link/</link>
      <pubDate>Sat, 22 Apr 2017 18:51:37 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-smartfon-neffos-x1-od-tp-link/</guid>
      <description>&lt;p&gt;Stosunkowo niedawno do polskiej oferty TP-LINK trafił &lt;a href=&#34;http://www.neffos.com/en/product/details/X1&#34;&gt;smartfon Neffos X1&lt;/a&gt;. To urządzenie było
dostępne już dłuższy czas na rynku (zaprezentowane w Berlinie na targach IFA we wrześniu 2016) ale
do Polski trafiło ono z dość mocnym opóźnieniem. Tak czy inaczej, ten telefon można już nabyć w
sklepach, przez co wypadałoby rzucić na niego okiem i przyjrzeć się mu nieco bliżej. Dzięki
uprzejmości TP-LINK Polska, Neffos X1 trafił do mnie na testy i postanowiłem napisać krótką
recenzję tego sprzętu w kontekście pozostałych smartfonów Neffos, którymi miałem okazję się bawić w
przeszłości, tj. modelami &lt;a href=&#34;https://morfikov.github.io/post/recenzja-smartfon-neffos-c5-od-tp-link/&#34;&gt;C5&lt;/a&gt;, &lt;a href=&#34;https://morfikov.github.io/post/recenzja-smartfon-neffos-c5-max-od-tp-link/&#34;&gt;C5 MAX&lt;/a&gt;, &lt;a href=&#34;https://morfikov.github.io/post/recenzja-smartfon-neffos-y5-od-tp-link/&#34;&gt;Y5&lt;/a&gt; i &lt;a href=&#34;https://morfikov.github.io/post/recenzja-smartfon-neffos-y5l-od-tp-link/&#34;&gt;Y5L&lt;/a&gt;. Czy Neffos X1 jest nas w stanie
czymś zaskoczyć w stosunku do wcześniejszych modelów tych TP-LINK&#39;owych smartfonów?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Test wydajności smartfona Neffos X1 od TP-LINK</title>
      <link>https://morfikov.github.io/post/test-wydajnosci-smartfona-neffos-x1-od-tp-link/</link>
      <pubDate>Sat, 22 Apr 2017 17:49:35 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/test-wydajnosci-smartfona-neffos-x1-od-tp-link/</guid>
      <description>&lt;p&gt;Dzięki uprzejmości TP-LINK Polska od paru dni mam możliwość bawić się smartfonem Neffos X1.
Postanowiłem więc przetestować możliwości tego telefonu dostępnymi benchmarkami na Androida, które
można pobrać ze sklepu Google Play. Mnie generalnie tego typu benchmarki średnio interesują, bo
zwykle nijak się mają do standardowego użytkowania telefonu ale wiem, że sporo użytkowników
mobilnych technologi chciałaby tego typu test zobaczyć. Dlatego w oparciu o AnTuTu, 3DMark, PCMark
oraz GFXBench zrobiłem kilka testów i sprawdziłem jak Neffos X1 sobie w nich poradził.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Podzespoły w smartfonie Neffos C5 od TP-LINK</title>
      <link>https://morfikov.github.io/post/podzespoly-w-smartfonie-neffos-c5-od-tp-link/</link>
      <pubDate>Sun, 09 Apr 2017 20:09:24 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/podzespoly-w-smartfonie-neffos-c5-od-tp-link/</guid>
      <description>&lt;p&gt;Jak można było wywnioskować z &lt;a href=&#34;https://morfikov.github.io/post/recenzja-smartfon-neffos-c5-od-tp-link/&#34;&gt;recenzji Neffos C5 od
TP-LINK&lt;/a&gt;, ten smartfon to w zasadzie
niedrogie i dość przyzwoite urządzenie. Korzystając z okazji postanowiłem zrobić kilka dodatkowych
zdjęć tego telefonu, z tym, że tym razem fotki obrazują to, co było wewnątrz obudowy. Jeśli
posiadacie Neffos&#39;a C5 i jesteście ciekawi co to urządzenie skrywa pod maską, to w tym wpisie
znajdziecie odpowiedzi na dręczące was pytania.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Podzespoły w smartfonie Neffos C5 MAX od TP-LINK</title>
      <link>https://morfikov.github.io/post/podzespoly-w-smartfonie-neffos-c5-max-od-tp-link/</link>
      <pubDate>Fri, 07 Apr 2017 20:44:35 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/podzespoly-w-smartfonie-neffos-c5-max-od-tp-link/</guid>
      <description>&lt;p&gt;Jakiś czas temu &lt;a href=&#34;https://morfikov.github.io/post/recenzja-smartfon-neffos-c5-max-od-tp-link/&#34;&gt;recenzowałem smartfon Neffos C5 MAX od
TP-LINK&lt;/a&gt;. W tamtym wpisie
praktycznie wszystko już zostało powiedziane na temat tego telefonu ale jednej rzeczy nie mogłem w
czasie pisania tamtego artykułu zamieścić. Chodzi o fotki podzespołów tego urządzenia. Na dobrą
sprawę producent podaje jedynie model SoC i nie wiadomo praktycznie nic w przypadku pozostałych
układów, no może poza pobieżnymi informacjami na temat WiFi, bluetooth czy GPS. Postanowiłem zatem
rozkręcić swojego Neffos&#39;a C5 MAX i przekonać się co wewnątrz skrywa jego obudowa.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Repartycjonowanie flash&#39;a w Neffos C5 i C5 MAX od TP-LINK</title>
      <link>https://morfikov.github.io/post/repartycjonowanie-flash-w-neffos-c5-i-c5-max-od-tp-link/</link>
      <pubDate>Mon, 03 Apr 2017 19:51:32 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/repartycjonowanie-flash-w-neffos-c5-i-c5-max-od-tp-link/</guid>
      <description>&lt;p&gt;Analizując sobie fabryczny podział przestrzeni flash w TP-LINK&#39;owych smartfonach, a konkretnie w
modelach Neffos C5 i C5 MAX, doszedłem do wniosku, że producent tych urządzeń nieco zaszalał
przeznaczając aż 4 GiB przestrzeni na partycję &lt;code&gt;/system/&lt;/code&gt; . W zasadzie ROM w tych telefonach zajmuje
około 2 GiB. Zatem pozostałe 2 GiB zwyczajnie się marnuje i przeciętny użytkownik smartfona nie
będzie w stanie tego obszaru w żaden sposób wykorzystać. Można by zatem inaczej przepartycjonować
ten flash, tak by nieco skurczyć samą partycję &lt;code&gt;/system/&lt;/code&gt; , przeznaczając jednocześnie odzyskane
miejsce na powiększenie partycji &lt;code&gt;/data/&lt;/code&gt; . W tym wpisie postaramy się właśnie taki zabieg zmiany
rozmiaru partycji &lt;code&gt;/system/&lt;/code&gt; przeprowadzić dla tych dwóch wyżej wymienionych modeli smartfonów.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Root w smartfonach Neffos od TP-LINK (X1, C5, C5 MAX, Y5, Y5L)</title>
      <link>https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/</link>
      <pubDate>Sun, 02 Apr 2017 19:27:56 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/</guid>
      <description>&lt;p&gt;Jakiś czas temu opisywałem proces ukorzeniania (root) smartfonów Neffos, a konkretnie były to modele
&lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;C5&lt;/a&gt;, &lt;a href=&#34;http://www.neffos.pl/product/details/C5-Max&#34;&gt;C5
MAX&lt;/a&gt;, &lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;Y5&lt;/a&gt; i
&lt;a href=&#34;http://www.neffos.pl/product/details/Y5L&#34;&gt;Y5L&lt;/a&gt;. Od tamtego czasu zdążyłem się nieco bardziej
zagłębić w struktury Androida i udało mi się ze źródeł &lt;a href=&#34;https://omnirom.org/&#34;&gt;OMNI ROM&lt;/a&gt; zbudować
natwyne obrazy TWRP dla każdego z tych ww. telefonów. Oczywiście TP-LINK ma w swojej ofercie jeszcze
modele &lt;a href=&#34;http://www.neffos.pl/product/details/C5L&#34;&gt;C5L&lt;/a&gt;,
&lt;a href=&#34;http://www.neffos.com/en/product/details/Y50&#34;&gt;Y50&lt;/a&gt;,
&lt;a href=&#34;http://www.neffos.com/en/product/details/X1&#34;&gt;X1&lt;/a&gt; oraz &lt;a href=&#34;http://www.neffos.com/en/product/details/X1Max&#34;&gt;X1
MAX&lt;/a&gt; ale póki co nie będę w stanie przygotować
obrazu TWRP i opisu jak ukorzenić Androidy w trzech z tych czterech smartfonów. Chodzi o to, że C5L
został wycofany z produkcji i raczej nie wpadnie on w moje łapki. Natomiast modele Y50 oraz X1 MAX
nie są jeszcze dostępne w polskiej ofercie TP-LINK&#39;a, przez co minie trochę czasu zanim uda mi się
do nich dobrać. Postanowiłem napisać świeży artykuł dotyczący procesu root w smartfonach Neffos C5,
C5 MAX, Y5, Y5L oraz X1. Po co pisać kolejny artykuł o ukorzenianiu Androida w Neffos&#39;ach?
Generalnie rzecz biorąc, w tych poprzednich wpisach było bardzo dużo informacji zbędnych z punktu
widzenia przeciętnego użytkownika, który chce zrootować system w swoim telefonie. Teraz, gdy
dysponuję natywnymi obrazami TWRP własnej roboty i zdobyłem nieco wiedzy z zakresu operowania na
Androidzie, to proces root jest o wiele prostszy i właśnie dlatego przydałoby się to wszystko opisać
na nowo.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Kamera IP NC450 od TP-LINK</title>
      <link>https://morfikov.github.io/post/recenzja-kamera-ip-nc450-od-tp-link/</link>
      <pubDate>Thu, 02 Feb 2017 19:27:54 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-kamera-ip-nc450-od-tp-link/</guid>
      <description>&lt;p&gt;Kamery do monitoringu ostatnimi czasy stają się coraz bardziej popularne. Na dobrą sprawę możemy je
spotkać praktycznie wszędzie, zwłaszcza w miejscach, w których dochodzi do kradzieży czy innych
przestępstw, które cechują się podwyższonym odsetkiem niewykrywalności sprawców przez służby
mundurowe. Oczywiście taki profesjonalny sprzęt, którym można zabezpieczyć duże obiekty, trochę
kosztuje. Niemniej jednak, kamery przemysłowe nadają się głównie do zastosowań firmowych i
przeciętnego Kowalskiego te rozwiązania zwykle nie interesują ze względu na ich wysoką cenę. Może
niekoniecznie każdy z nas posiada dużą firmę ale są sytuacje, w których taka kamera bardzo by nam
się przydała. Garaż czy piwnica często są obiektami zainteresowań podejrzanych typów i narażone na
włamania. Dlatego też od czasu do czasu warto zajrzeć w te miejsca, by się upewnić czy aby na pewno
wszystko jest w porządku. Zwykle jednak nikt nie ma na to czasu, a gdy już ktoś nam się włamie, to
nie dość, że orientujemy się parę dni/tygodni po fakcie, to jeszcze nawet nie mamy pojęcia kto, jak
i kiedy się tego czynu zabronionego dopuścił. Dlatego monitoring warto sobie zainstalować i
niekoniecznie musimy przy tym wydawać dziesiątki tysięcy złotych. TP-LINK ma w swojej ofercie kilka
niedrogich kamer IP, które można wykorzystać do zastosować domowych. W tym artykule rzucimy sobie
okiem na &lt;a href=&#34;http://www.tp-link.com.pl/products/details/cat-19_NC450.html&#34;&gt;obrotową kamerę NC450&lt;/a&gt;,
która jest w stanie zapisywać obraz i dźwięk na kartę SD.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Gigabitowy adapter Ethernet na USB UE300 od TP-LINK</title>
      <link>https://morfikov.github.io/post/recenzja-gigabitowy-adapter-ethernet-na-usb-ue300-od-tp-link/</link>
      <pubDate>Sat, 28 Jan 2017 19:12:22 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-gigabitowy-adapter-ethernet-na-usb-ue300-od-tp-link/</guid>
      <description>&lt;p&gt;Jakiś czas temu opisywałem &lt;a href=&#34;https://morfikov.github.io/post/recenzja-karta-sieciowa-ethernet-usb-ue200-tp-link/&#34;&gt;kartę sieciową na USB
UE200&lt;/a&gt; od TP-LINK. Taki
adapter jest bardzo przydatny w momencie, gdy nie posiadamy z jakiegoś powodu standardowej karty
sieciowej, tak by za jej sprawą przewodowo połączyć komputer do domowej sieci. Jeden z moich
komputerów cierpi właśnie na tego typu przypadłość z powodu jakiegoś bliżej nieznanego mi
uszkodzenia jego wbudowanej karty sieciowej. Generalnie rzecz biorąc w ofercie TP-LINK poza tym
wspomnianym UE200 jest także dostępny &lt;a href=&#34;http://www.tp-link.com.pl/products/details/cat-5688_UE300.html&#34;&gt;adapter
UE300&lt;/a&gt;, który różni się głównie tym,
że ma gigabitowy port Ethernet oraz karta jest na USB 3.0. Jako, że jestem w posiadaniu adaptera
UE300, to postanowiłem sprawdzić jak (i czy w ogóle) jest rozpoznawany przez system z rodziny linux,
a konkretnie na dystrybucji Debian, której używam na co dzień.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak wymusić pasmo/częstotliwość LTE pod LEDE/OpenWRT</title>
      <link>https://morfikov.github.io/post/jak-wymusic-pasmo-czestotliwosc-lte-pod-lede-openwrt/</link>
      <pubDate>Fri, 13 Jan 2017 18:43:37 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-wymusic-pasmo-czestotliwosc-lte-pod-lede-openwrt/</guid>
      <description>&lt;p&gt;Zainspirowany &lt;a href=&#34;http://forum.jdtech.pl/Watek-wybor-czestotliwosci-lte-na-przykladzie-huawei-e3372&#34;&gt;wątkiem na forum
JDtech&lt;/a&gt; na temat
testów transferów w konkretnych pasmach/częstotliwościach LTE, postanowiłem sprawdzić jak ta sprawa
wygląda w mojej okolicy. Generalnie ja obecnie u siebie mam modem Huawei E3372s-153 w wersji
NON-HiLink podpięty do &lt;a href=&#34;http://www.tp-link.com.pl/products/details/Archer-C2600.html&#34;&gt;routera TP-LINK Archer
C2600&lt;/a&gt;. Oczywiście na tym routerze
jest wgrany alternatywny firmware LEDE/OpenWRT, bo inaczej nie miałbym możliwości skorzystać z tego
modemu. Standardowa konfiguracja LTE w LEDE/OpenWRT daje nam jedynie możliwość wyboru między
ustawieniami &lt;code&gt;auto&lt;/code&gt; , &lt;code&gt;gsm&lt;/code&gt; , &lt;code&gt;umts&lt;/code&gt; , &lt;code&gt;lte&lt;/code&gt; , &lt;code&gt;preferumts&lt;/code&gt; oraz &lt;code&gt;preferlte&lt;/code&gt; . W przypadku internetu
LTE, zwykle wybieramy tutaj tryb &lt;code&gt;auto&lt;/code&gt; , ewentualnie też &lt;code&gt;lte&lt;/code&gt; , by wymusić konkretny tryb pracy
modemu, co może mieć kolosalne znaczenie przy darmowym internecie od RBM/Play. Niemniej jednak,
nawet w przypadku wyboru &lt;code&gt;lte&lt;/code&gt; , częstotliwość na jakiej będzie pracował modem w dalszym ciągu jest
dobierana automatycznie w oparciu o parametry sygnału docierającego z dostępnych w okolicy BTS&#39;ów. W
przypadku modemu E3372 można jednak wymusić, by połączenie LTE było realizowane na konkretnej
częstotliwości, np. 2100/1800/2600/900/800 MHz i by taki stan rzeczy osiągnąć, trzeba nieco
przerobić konfigurację tego alternatywnego oprogramowania znajdującego się w naszym routerze WiFi.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak przeprowadzić unroot na smartfonie Neffos Y5L od TP-LINK</title>
      <link>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-y5l-tp-link/</link>
      <pubDate>Thu, 12 Jan 2017 20:07:33 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-y5l-tp-link/</guid>
      <description>&lt;p&gt;Przeprowadzenie &lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-y5l-tp-link/&#34;&gt;procesu root na smartfonie Neffos Y5L&lt;/a&gt; od TP-LINK nie było tak łatwe jak w
przypadku innych modeli telefonów tego producenta. Niemniej jednak, trzeba zdawać sobie sprawę, że
ukorzenianie Androida niesie za sobą pewne zagrożenia. Nie chodzi tutaj tylko o niezaufane
aplikacje ale też trzeba brać pod uwagę możliwość przypadkowego (przypadki nie istnieją) skasowania
czy zmienienia plików systemowych, przez co nasz telefon może przestać nam działać poprawnie lub
też przestanie się w ogóle uruchamiać. Jeśli natomiast wgraliśmy SuperSU i praktycznie w ogóle z
niego nie korzystamy, to moim zdaniem lepiej jest przeprowadzić proces unroot i korzystać z
Neffos&#39;a Y5L, tak jak ze zwykłego urządzenia z Androidem na pokładzie. Proces cofania zmian w
systemie nie jest jakoś specjalnie trudny ale trzeba uważać, by w jego trakcie nie uszkodzić
smartfona. Ten artykuł ma na celu pokazanie jak cofnąć wszelkie zmiany wprowadzone w telefonie za
sprawą dostępu do praw administracyjnych w Neffos Y5L.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Root smartfona Neffos Y5L od TP-LINK</title>
      <link>https://morfikov.github.io/post/android-root-smartfona-neffos-y5l-tp-link/</link>
      <pubDate>Wed, 11 Jan 2017 19:30:26 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-root-smartfona-neffos-y5l-tp-link/</guid>
      <description>&lt;p&gt;Może i ten najtańszy smartfon w ofercie TP-LINK nie może popisać się najmocniejszymi podzespołami
ale w zasadzie ten fakt nie przeszkadza nam, by przeprowadzić na Neffos Y5L (TP801A) proces root.
Ten smartfon ma zbliżony SoC do Neffos Y5, a konkretnie mamy tutaj do czynienia z Snapdragon 210
(MSM8209) od Qualcomm&#39;a. Ten fakt sprawia, że w przypadku Neffos Y5L cały proces uzyskiwania
uprawnień administratora systemu przebiega bardzo podobnie do tego &lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-y5-od-tp-link/&#34;&gt;opisywanego wcześniej dla Neffos
Y5&lt;/a&gt;. Dlatego też poniższy artykuł za bardzo się nie różni i w zasadzie został jedynie lekko
przerobiony pod kątem zgodności ze smartfonem Neffos Y5L.&lt;/p&gt;
&lt;p&gt;Prostszy sposób na przeprowadzanie procesu root w smartfonach Neffos od TP-LINK z wykorzystaniem
natywnych obrazów TWRP &lt;a href=&#34;https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/&#34;&gt;został opisany w nowym wątku&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak przeprowadzić unroot na smartfonie Neffos Y5 od TP-LINK</title>
      <link>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-y5-od-tp-link/</link>
      <pubDate>Sat, 07 Jan 2017 18:56:00 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-y5-od-tp-link/</guid>
      <description>&lt;p&gt;[Przeprowadzenie procesu root na smartfonie Neffos Y5] od TP-LINK nie było tak łatwe jak w
przypadku innych modeli telefonów tego producenta. Niemniej jednak, trzeba zdawać sobie sprawę, że
ukorzenianie Androida niesie za sobą pewne zagrożenia. Nie chodzi tutaj tylko o niezaufane
aplikacje ale też trzeba brać pod uwagę możliwość przypadkowego (przypadki nie istnieją) skasowania
czy zmienienia plików systemowych, przez co nasz telefon może przestać nam działać poprawnie lub
też przestanie się w ogóle uruchamiać. Jeśli natomiast wgraliśmy SuperSU i praktycznie w ogóle z
niego nie korzystamy, to moim zdaniem lepiej jest przeprowadzić proces unroot i korzystać z
Neffos&#39;a Y5, tak jak ze zwykłego urządzenia z Androidem na pokładzie. Proces cofania zmian w
systemie nie jest jakoś specjalnie trudny ale trzeba uważać, by w jego trakcie nie uszkodzić
smartfona. Ten artykuł ma na celu pokazanie jak cofnąć wszelkie zmiany wprowadzone w telefonie za
sprawą dostępu do praw administracyjnych w Neffos Y5.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Root smartfona Neffos Y5 od TP-LINK</title>
      <link>https://morfikov.github.io/post/android-root-smartfona-neffos-y5-od-tp-link/</link>
      <pubDate>Fri, 06 Jan 2017 18:16:17 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-root-smartfona-neffos-y5-od-tp-link/</guid>
      <description>&lt;p&gt;Nie we wszystkich smartfonach Neffos da radę przeprowadzić proces root tak łatwo jak to miało
miejsce w przypadku modeli &lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-c5-od-tp-link/&#34;&gt;Neffos C5&lt;/a&gt; i &lt;a href=&#34;https://morfikov.github.io/post/android-root-smartfona-neffos-c5-max-od-tp-link/&#34;&gt;Neffos C5 MAX&lt;/a&gt;. TP-LINK ma w swojej ofercie również
&lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;model Neffos Y5&lt;/a&gt; (TP802A) i on w odróżnieniu do tych dwóch poprzednich ma inne podzespoły, a
konkretnie SoC, którzy pochodzi od producenta Qualcomm (Snapdragon 210, model MSM8909). Root
smartfonów opartych o tego typu SoC przebiega nieco inaczej ale jest generalnie do zrobienia, choć
trzeba trochę się przyłożyć do procesu backup&#39;u flash&#39;a telefonu. Pozostała część jest w miarę
standardowa. W tym wpisie zostanie przeprowadzony proces root smartfona Neffos Y5.&lt;/p&gt;
&lt;p&gt;Prostszy sposób na przeprowadzanie procesu root w smartfonach Neffos od TP-LINK z wykorzystaniem
natywnych obrazów TWRP &lt;a href=&#34;https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/&#34;&gt;został opisany w nowym wątku&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Power Bank TL-PBG6700 od TP-LINK</title>
      <link>https://morfikov.github.io/post/recenzja-power-bank-tl-pbg6700-od-tp-link/</link>
      <pubDate>Fri, 30 Dec 2016 19:40:09 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-power-bank-tl-pbg6700-od-tp-link/</guid>
      <description>&lt;p&gt;Energii nigdy nie jest za dużo. Problem w tym, że w przypadku jej nadmiaru, część zasobów zwyczajnie
się marnuje. Można naturalnie takiemu stanu rzeczy przeciwdziałać próbując zmagazynować energię w
jakimś obiekcie tak, by można ją było wykorzystać w późniejszym czasie, gdy zajdzie taka potrzeba.
Większość sprzętów elektronicznych, takich jak smartfony, tablety czy nawet przenośne routery WiFi,
posiada wbudowane baterie, które mają na celu umożliwić im działanie, gdy zostaną one odcięte od
stałego źródła zasilania. Niemniej jednak, akumulator w takich urządzeniach zwykle nie wystarcza na
długo, choć generalnie jego zużycie zależy od sposobu użytkowania. Dlatego też można pokusić się o
zakupienie dodatkowych baterii zdolnych zmagazynować energię w większym stopniu niż samo urządzenie,
które wymaga zasilania. Mowa oczywiście o power bankach, które cenowo nie są zbyt wygórowane, a w
krytycznych sytuacjach są wręcz niezastąpione. W tym artykule rzucimy sobie okiem na &lt;a href=&#34;http://www.tp-link.com.pl/products/details/cat-5689_TL-PBG6700.html&#34;&gt;power bank
TL-PBG6700&lt;/a&gt; od TP-LINK.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Router LTE Archer MR200 od TP-LINK</title>
      <link>https://morfikov.github.io/post/recenzja-router-lte-archer-mr200-tp-link/</link>
      <pubDate>Thu, 29 Dec 2016 18:53:07 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-router-lte-archer-mr200-tp-link/</guid>
      <description>&lt;p&gt;Do momentu upowszechnienia się technologii LTE, ludzkość była zdana na przewodowe łącza internetowe
oferowane przez lokalnych ISP. Jeśli chodzi o tych lokalnych providerów, to zwykle nie mają oni
praktycznie żadnej konkurencji w danej części miasta/wsi. Czy taki stan rzeczy jest wynikiem
dostarczania najlepszych jakościowo usług za najniższą cenę? W moim przypadku nie były to ani
najlepsze usługi, ani też najniższa cena, tylko tak dobrane przepisy prawne, by zewnętrznemu ISP nie
opłacało się świadczyć usług w mojej okolicy, bo za ten fakt dostawał on z miejsca szereg opłat/kar.
Teraz, gdy już praktycznie każdy z nas jest w zasięgu LTE, możemy porzucić tych lokalnych ISP i
obserwować ich nieuchronny upadek, no chyba, że w końcu zaczną dbać o swoich klientów. Niemniej
jednak, w dalszym ciągu, by korzystać z technologi LTE potrzebny nam jest odpowiedni sprzęt, zwykle
jest to jakiś modem, np. Huawei E3372s-153. Problem z modemem jest taki, że standardowo można go
podłączyć tylko do jednego komputera w danej chwili, no chyba, że mamy router WiFi z wgranym
alternatywnym oprogramowaniem pokroju OpenWRT/LEDE. Niemniej jednak, w dalszym ciągu trzeba nieco
wprawy, by ten modem ogarnąć i udostępnić połączenie internetowe hostom w lokalnej sieci. Dlatego
też od jakiegoś czasu na rynku zaczęły pojawiać się routery WiFi, które mają wbudowany modemem LTE.
Jedno z takich urządzeń dotarło do mnie kilka dni temu, a konkretnie jest &lt;a href=&#34;http://www.tp-link.com.pl/products/details/cat-4691_Archer-MR200.html&#34;&gt;model Archer
MR200&lt;/a&gt; od TP-LINK.
Postanowiłem zatem zobaczyć co oferuje ten sprzęt w standardzie, oraz czy jest dla niego jakieś
alternatywne oprogramowanie.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Recenzja: Power Bank TL-PB2600 TP-LINK</title>
      <link>https://morfikov.github.io/post/recenzja-power-bank-tl-pb2600-tp-link/</link>
      <pubDate>Wed, 28 Dec 2016 17:59:13 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/recenzja-power-bank-tl-pb2600-tp-link/</guid>
      <description>&lt;p&gt;Nowsze technologie wymagają do działania energii elektrycznej. Ta z kolei musi być dostarczana
danemu urządzeniu na bieżąco, by było ono w stanie w ogóle funkcjonować i realizować swoje zadanie.
Niemniej jednak, od już dłuższego czasu specyfikacja otaczającej nas rzeczywistości wymaga od
naszych urządzeń, by potrafiły one gromadzić w sobie jakiś zapas energii i pracować nawet nie będąc
podłączone do stałego źródła zasilania. Dlatego też nasze smartfony, tablety, mp3player&#39;y i innego
tego typu sprzęty elektroniczne mają wbudowany mniej lub bardziej pojemny akumulator. Tak czy
inaczej, ta pojemność jest skończona i zwykle wystarcza na kilka dni, najwyżej tydzień pracy, np.
naszego telefonu. Dlatego też w pewnych okolicznościach dobrze jest mieć zapas energii zgromadzony w
jakimś power banku. Na rynku jest cała masa takich banków energetycznych i różnią się one pod
względem parametrów. W tym artykule rzucimy sobie okiem na &lt;a href=&#34;http://www.tp-link.com.pl/products/details/cat-5689_TL-PB2600.html&#34;&gt;bank energii
TL-PB2600&lt;/a&gt; od TP-LINK.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
