<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>img on Morfitronik</title>
    <link>https://morfikov.github.io/tags/img/</link>
    <description>Recent content in img on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Fri, 08 Nov 2019 18:02:33 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/img/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Pendrive multiboot z GRUB2 i obrazami ISO różnych dystrybucji Linux</title>
      <link>https://morfikov.github.io/post/pendrive-multiboot-z-grub2-i-obrazami-iso-roznych-dystrybucji-linux/</link>
      <pubDate>Fri, 08 Nov 2019 18:02:33 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/pendrive-multiboot-z-grub2-i-obrazami-iso-roznych-dystrybucji-linux/</guid>
      <description>&lt;p&gt;Obrazy ISO różnych dystrybucji Linux, szczególnie te live, bywają niezastąpione w sytuacjach
kryzysowych. Dzięki takiej płytce CD/DVD czy pendrive (może być też i karta SD) można wybrnąć nawet
z najgorszych opresji bez potrzeby rezygnowania przy tym z graficznego środowiska pracy
podłączonego do internetu. Zwykle jednak użytkownicy są stawiani przed wyborem systemu, który mogą
sobie wgrać na zewnętrzny nośnik, by w późniejszym czasie przeprowadzać ewentualne prace naprawcze.
Chodzi generalnie o fakt, że taki obraz ISO czy IMG przy wgrywaniu konsumuje całe urządzenie bez
względu na jego rozmiar, i tak mając 32G pamięci na flash możemy wgrać w zasadzie tylko jeden
obraz, np. Debiana, a by wgrać obraz Ubuntu, to już trzeba albo osobnego pendrive albo nadpisać ten
poprzednio wgrany obraz. Takie rozwiązanie jest mało praktyczne i też generuje koszty. Na szczęście
można stworzyć boot&#39;owalny pendrive (w oparciu o GRUB/GRUB2), na którym można umieścić dowolną
ilość obrazów ISO i w fazie rozruchu wybrać sobie ten system, który nas interesuje, a wszystko
dzięki &lt;a href=&#34;https://github.com/thias/glim&#34;&gt;projektowi GLIM&lt;/a&gt; (GRUB Live ISO Multiboot).&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Zmiana rozmiaru obrazu .img</title>
      <link>https://morfikov.github.io/post/zmiana-rozmiaru-obrazu-img/</link>
      <pubDate>Sun, 14 Jun 2015 13:05:13 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/zmiana-rozmiaru-obrazu-img/</guid>
      <description>&lt;p&gt;Struktura pliku &lt;code&gt;.img&lt;/code&gt; czy &lt;code&gt;.iso&lt;/code&gt; niczym nie odbiega od struktury przeciętnego dysku twardego. W obu
przypadkach mamy dokładnie taki sam schemat budowy, tj. mamy obecny
&lt;a href=&#34;https://morfikov.github.io/post/mbr-ebr-i-tablica-partycji-dysku-twardego/&#34;&gt;MBR&lt;/a&gt; i partycje, z których
pierwsza zwykle jest wyrównana do 1MiB, zostawiając tym samym 2047 sektorów wolnego miejsca z
początku pliku, tuż za MBR, tzw. MBR-GAP. Obraz &lt;code&gt;.img&lt;/code&gt; można poddać edycji, np. utworzyć wewnątrz
niego inne partycje, zmienić rozmiar ich systemu plików, a nawet można manipulować rozmiarem samego
obrazu &lt;code&gt;.img&lt;/code&gt; . Taki plik możemy również zamontować w systemie przy pomocy narzędzia &lt;code&gt;mount&lt;/code&gt; ale też
trzeba odpowiednio podejść do tego zadania, bo przez fakt, że mamy z początku MBR i trochę wolnego
miejsca, to linux zwyczajnie nie potrafi rozpoznać systemu plików, który znajduje się w obrazie
&lt;code&gt;.img&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
