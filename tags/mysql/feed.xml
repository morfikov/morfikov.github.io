<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on Morfitronik</title>
    <link>https://morfikov.github.io/tags/mysql/</link>
    <description>Recent content in mysql on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Mon, 22 Aug 2016 22:03:02 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/mysql/feed.xml" rel="self" type="application/rss" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Chroot Apache2 vs dyrektywa open_basedir w PHP</title>
      <link>https://morfikov.github.io/post/chroot-apache2-vs-dyrektywa-open_basedir-w-php/</link>
      <pubDate>Mon, 22 Aug 2016 22:03:02 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/chroot-apache2-vs-dyrektywa-open_basedir-w-php/</guid>
      <description>&lt;p&gt;Kilka dni temu wpadł mi w oko artykuł na temat wykonania &lt;a href=&#34;https://nfsec.pl/root/5874&#34;&gt;chroot serwera
Apache2&lt;/a&gt;. Problem z tamtym tekstem jest taki, że nie uwzględnia on
serwera bazy danych MySQL. W efekcie, taki chroot&#39;owany Apache2 będzie miał problemy z połączeniem
się do bazy, a nasz serwis bez niej raczej nie będzie działał prawidłowo. Przydałoby się zatem
dopracować nieco ten artykuł i wypracować takie rozwiązanie, które nie popsuje przy okazji naszego
serwisu www. Dlatego też w tym wpisie wykonamy sobie chroot zarówno serwera Apache2 z obsługą PHP i
bazy danych MySQL za sprawą modułu &lt;code&gt;unixd&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak zresetować hasło root do bazy danych MySQL</title>
      <link>https://morfikov.github.io/post/reset-hasla-bazy-danych-mysql/</link>
      <pubDate>Tue, 16 Aug 2016 18:36:20 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/reset-hasla-bazy-danych-mysql/</guid>
      <description>&lt;p&gt;Dziś podczas przenoszenia jednej z baz danych przytrafiła mi się bardzo dziwna sytuacja. Niby
wszystkie kroki zostały przeprowadzone poprawnie i nic bazie nie dolega ale jest jeden problem.
Okazuje się, że po wszystkim nie sposób do tej bazy uzyskać dostęp. Tak to się już czasem zdarza, że
człowiek ustawi hasło administratora bazy i po chwili je zapomni. Generalnie rzecz biorąc, to
komputery za mnie mają pamiętać hasła do różnych aplikacji, w tym też i do baz danych. Ja tylko
ograniczam się zawsze do kilku fraz, które odblokowują keyring. Niemniej jednak, jakimś dziwnym
trafem, w tym keyring&#39;u zabrakło hasła do tej nieszczęsnej bazy danych. Jak zatem odzyskać to
zagubione hasło do bazy MySQL? Odpowiedź jest nawet bardzo prosta, o ile się posiada dostęp do
użytkownika root na serwerze i na szczęście takowy posiadałem, więc w sumie nikt nic nie zauważył.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>WordPress: Kilku użytkowników bazy danych</title>
      <link>https://morfikov.github.io/post/wordpress-kilku-uzytkownikow-bazy-danych/</link>
      <pubDate>Wed, 20 Jul 2016 20:15:44 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wordpress-kilku-uzytkownikow-bazy-danych/</guid>
      <description>&lt;p&gt;Za wysokie uprawnienia zawsze prowadzą do problemów, zwłaszcza, gdy w grę wchodzą komputery i
serwisy www. Wszyscy wiemy, że WordPress nie należy do bezpiecznych rozwiązań, mimo, że cała masa
stron na necie opiera się właśnie o tego CMS&#39;a. Można jednak wypracować sobie bezpieczny setup, pod
warunkiem, że będziemy się zawsze kierować jedna prostą zasadą. Mianowicie chodzi o ograniczenie
uprawnień. Standardowo WordPress ma zdefiniowanego jednego użytkownika w pliku &lt;code&gt;wp-config.php&lt;/code&gt; ,
którym skrypt się posługuje. Zwykle też ten użytkownik ma wszystkie możliwe prawa do wszystkich
tabel w bazie danych naszego bloga czy serwisu. Nie musi tak być, a my możemy wykorzystać kilku
użytkowników i nadać im inne uprawnienia w zależności od tego jakie operacje na bazie danych będą
oni przeprowadzać. W tym wpisie zobaczymy jak zaprzęgnąć wielu użytkowników do pracy z bazą danych
Wordpress&#39;a.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Użytkownik debian-sys-maint w MariaDB</title>
      <link>https://morfikov.github.io/post/uzytkownik-debian-sys-maint-w-mariadb/</link>
      <pubDate>Sun, 27 Sep 2015 15:10:04 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/uzytkownik-debian-sys-maint-w-mariadb/</guid>
      <description>&lt;p&gt;Właśnie robiłem migrację z MySQL ma MariaDB na swoim debianie. Nie obyło się jednak bez problemów,
choć na dobrą sprawę serwer baz danych działał i na pierwszy rzut oka nic złego nie szło
zaobserwować. Dopiero po zajrzeniu w log okazało się, że są jakieś problemy z uprawnieniami, w
efekcie czego nie mogła być przeprowadzona akcja aktualizacji tabel.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
