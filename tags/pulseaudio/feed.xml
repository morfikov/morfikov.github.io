<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pulseaudio on Morfitronik</title>
    <link>https://morfikov.github.io/tags/pulseaudio/</link>
    <description>Recent content in pulseaudio on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Sat, 16 Feb 2019 13:22:40 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/pulseaudio/feed.xml" rel="self" type="application/rss" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak włączyć dźwięk w kontenerze Docker&#39;a za sprawą PulseAudio</title>
      <link>https://morfikov.github.io/post/jak-wlaczyc-dzwiek-w-kontenerze-dockera-za-sprawa-pulseaudio/</link>
      <pubDate>Sat, 16 Feb 2019 13:22:40 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-wlaczyc-dzwiek-w-kontenerze-dockera-za-sprawa-pulseaudio/</guid>
      <description>&lt;p&gt;Jakiś czas temu postanowiłem przetestować sposób zamknięcia graficznych aplikacji w kontenerze
Docker&#39;a. Całe rozwiązanie zostało opisane na
przykładzie &lt;a href=&#34;https://morfikov.github.io
/post/uruchamianie-graficznych-aplikacji-w-kontenerach-dockera/&#34;&gt;skonteneryzowania przeglądarki Firefox&lt;/a&gt;.
Ten opisany w podlinkowanym artykule pomysł był nawet całkiem przyzwoity ale nie nadaje się on, gdy
w grę wchodzą programy odtwarzające dźwięk. No może to za dużo powiedziane, że się nie nadaje, ale
z pewnością brakuje mu jednego istotnego elementu. Nawet ta przykładowa przeglądarka internetowa
jest w stanie odtwarzać dźwięki jeśli się odwiedzi stosowną stronę WWW. Standardowo jednak nic nie
usłyszymy w głośnikach, gdy odpalimy dajmy na to stronę YouTube i puścimy jakiś materiał video.
Dlatego też wypadałoby skonfigurować dźwięk i przesłać go do serwera PulseAudio, który będzie
odpalony na naszym linux&#39;owym hoście. Kiedyś już tego typu rozwiązanie nawet opisywałem na
przykładzie &lt;a href=&#34;https://morfikov.github.io
/post/pulseaudio-i-przesylanie-dzwieku-przez-siec/&#34;&gt;zintegrowania PulseAudio z kontenerami LXC&lt;/a&gt;.
Okazuje się, że tamto rozwiązanie znajduje również zastosowanie w przypadku Docker&#39;a. Trzeba tylko
nieco inaczej skonfigurować kontener i właśnie tej kwestii będzie dotyczył niniejszy wpis.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Przesyłanie dźwięku i plików ze smartfona przez bluetooth</title>
      <link>https://morfikov.github.io/post/przesylanie-dzwieku-plikow-ze-smartfona-bluetooth/</link>
      <pubDate>Sat, 19 Nov 2016 19:40:24 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/przesylanie-dzwieku-plikow-ze-smartfona-bluetooth/</guid>
      <description>&lt;p&gt;Praktycznie każdy telefon czy komputer/laptop jest wyposażony już w adapter bluetooth. Obecnie coraz
rzadziej ten protokół jest wykorzystywany do przesyłania plików jako takich, bo przecie mamy WiFi.
Niemniej jednak, w starszych modelach urządzeń bluetooth może być dla nas jedyną opcją, by przesłać
pliki bezprzewodowo. Nawet jeśli dysponujemy smartfonem z jednym z nowszych Androidów, to i tak są
pewne sytuacje, w których bluetooth może znaleźć ciekawe zastosowanie, np. streaming dźwięku.
Urządzenia bluetooth bardzo często sprawiają problemy pod linux i przydałoby się zebrać trochę
informacji na temat ich konfiguracji, by przesyłanie dźwięku i plików nie stanowiło dla nas
większego wyzwania w sytuacjach podbramkowych, gdzie wszelkie inne alternatywy komunikacji zawodzą.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Szyfrowanie dźwięku przesyłanego przez sieć</title>
      <link>https://morfikov.github.io/post/szyfrowanie-dzwieku-przesylanego-przez-siec/</link>
      <pubDate>Sun, 01 Nov 2015 00:31:48 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/szyfrowanie-dzwieku-przesylanego-przez-siec/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.freedesktop.org/wiki/Software/PulseAudio/&#34;&gt;PulseAudio to serwer dźwięku&lt;/a&gt;, który jest w
stanie otrzymywać zapytania ze zdalnych lokalizacji. Wobec czego, możemy realizować &lt;a href=&#34;https://morfikov.github.io
/post/pulseaudio-i-przesylanie-dzwieku-przez-siec/&#34;&gt;przesyłanie
dźwięku przez sieć&lt;/a&gt; i usłyszeć
go tam, gdzie go sobie życzymy. Problem w tym, że taki dźwięk jest przesyłany przez sieć w formie
niezaszyfrowanej. Dlatego też jesteśmy narażeni na podsłuchanie wszystkiego co mówimy do mikrofonu
lub też tego co pojawia się w naszych głośnikach. Możemy jednak zabezpieczyć komunikację między
klientem i serwerem dźwięku wykorzystując do tego połączenie SSH. W ten sposób cały sygnał
dźwiękowy, jaki jest generowany przez danego hosta w sieci, zostanie wrzucony w szyfrowany kanał
TLS i nikt nie będzie w stanie go zinterpretować. Ten wpis ma na celu przedstawienie sposobu na
zaszyfrowanie dźwięku, bez którego większość z nas nie wyobraża sobie pacy przy komputerze.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>PulseAudio i przesyłanie dźwięku przez sieć</title>
      <link>https://morfikov.github.io/post/pulseaudio-i-przesylanie-dzwieku-przez-siec/</link>
      <pubDate>Sat, 31 Oct 2015 22:53:43 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/pulseaudio-i-przesylanie-dzwieku-przez-siec/</guid>
      <description>&lt;p&gt;Bardzo wielu ludzi nie uświadamia sobie faktu, że w przypadku komputerów praktycznie wszystkie dane,
z którymi mamy styczność, są zapisane za pomocą dwóch znaków, tj. 0 i 1. Mając to na względzie, nie
ma chyba informacji, której by nie można było przesłać przez sieć. Serwer dźwięku, jak sama nazwa
wskazuje, jest w stanie odbierać dane zawierają informacje dźwiękowe. Dlatego też jeśli jakiś
komputer nie posiada karty muzycznej lub/i nie jest fizycznie podłączony do głośników, to nie
stanowi to większego problemu by był on w stanie odtwarzać dźwięk, przynajmniej w tym sensie jakim
my to rozumiemy. W tym wpisie sþróbujemy zrealizować przesyłanie dźwięku przez sieć wykorzystując do
tego &lt;a href=&#34;https://www.freedesktop.org/wiki/Software/PulseAudio/&#34;&gt;PulseAudio&lt;/a&gt; i zobaczymy czy sprawi nam
to jakieś problemy.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Wine w kontenerze LXC</title>
      <link>https://morfikov.github.io/post/wine-w-kontenerze-lxc/</link>
      <pubDate>Fri, 30 Oct 2015 17:13:58 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wine-w-kontenerze-lxc/</guid>
      <description>&lt;p&gt;Każdy kto zmienił architekturę systemu z i386 na amd64 raczej nie dostrzegł większej różnicy w
operowaniu na którejś z nich. Czasem jedynie pakiety w nazwie mają 64 zamiast 32. Jest natomiast
jedna rzecz, która drażni chyba każdego. Mowa tutaj o &lt;a href=&#34;https://www.winehq.org/&#34;&gt;projekcie Wine&lt;/a&gt;.
Wine nie umie obsługiwać natywnie serwera dźwięku PulseAudio. Do tego dochodzi jeszcze problem,
który związany jest z tymi wszystkimi pakietami 32 bitowymi, które trzeba zainstalować. I w ten
sposób nasz system staje się bardziej multiarch niż amd64. W tym wpisie postaramy się przy pomocy
kontenera LXC odizolować Wine od całej reszty systemu operacyjnego, tak by nie musieć wgrywać do
niego całej masy zbędnych bibliotek.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Brak dźwięku przy nieaktywnej sesji logowania</title>
      <link>https://morfikov.github.io/post/brak-dzwieku-przy-nieaktywnej-sesji-logowania/</link>
      <pubDate>Thu, 15 Oct 2015 20:52:50 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/brak-dzwieku-przy-nieaktywnej-sesji-logowania/</guid>
      <description>&lt;p&gt;Jeśli korzystamy z &lt;a href=&#34;https://www.freedesktop.org/wiki/Software/PulseAudio/&#34;&gt;serwera dźwięku
PulseAudio&lt;/a&gt; na swoim linux&#39;ie, prawdopodobnie
zdarzyła nam się już sytuacja, w której chcieliśmy zablokować lub wygasić ekran monitora mając
jednocześnie odpalony jakiś odtwarzacz muzyki. Gdy tylko ekran zostanie zablokowany, możemy
odnotować brak dźwięku, bo ten zwyczajnie natychmiast zamiera. Za to po odblokowaniu ekranu, dźwięk
wraca. Podobnie sprawa ma się przy przejściu z trybu graficznego (Xorg) na jedną z konsol TTY.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Normalizacja głośności w PulseAudio</title>
      <link>https://morfikov.github.io/post/normalizacja-glosnosci-w-pulseaudio/</link>
      <pubDate>Mon, 28 Sep 2015 16:13:16 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/normalizacja-glosnosci-w-pulseaudio/</guid>
      <description>&lt;p&gt;Każdy z nas spotkał się z sytuacją, gdzie dźwięki odtwarzane na naszych maszynach zmieniają swoje
natężenie w krótkich odstępach czasu, a my przy tym odczuwamy bardzo nieprzyjemne uczucie
dyskomfortu psychicznego. Tego typu efekt jest też bardzo często spotykany przy oglądaniu filmów,
gdzie zwykle muzyka jest sporo głośniejsza od samych dialogów, nie wspominając już o reklamach,
którymi filmy są przerywane. Innym przykładem mogą być mp3, gdzie jedna z nich jest grana zbyt
cicho, natomiast kolejna zbyt głośno. PulseAudio jest w stanie poradzić sobie z tego typu
problemami.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Automatyczne wyciszanie dźwięku w PulseAudio</title>
      <link>https://morfikov.github.io/post/automatyczne-wyciszanie-dzwieku-w-pulseaudio/</link>
      <pubDate>Thu, 28 May 2015 11:43:22 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/automatyczne-wyciszanie-dzwieku-w-pulseaudio/</guid>
      <description>&lt;p&gt;Wszystkie główne dystrybucje, a może raczej ich środowiska graficzne, wykorzystują do odtwarzania
dźwięku &lt;a href=&#34;https://www.freedesktop.org/wiki/Software/PulseAudio/&#34;&gt;serwer PulseAudio&lt;/a&gt; . Niektóre wręcz
są tak z nim zżyte, że nie idzie ich oddzielić od siebie. Ja generalnie uważam, że ten kawałek
oprogramowania jest jak najbardziej przydatny człowiekowi i potrafi realizować kilka kwestii, które
bez niego, albo by nie były możliwe do osiągnięcia, albo trzeba by się natrudzić przy ich
implementacji, np. przesyłanie dźwięku przez sieć. U siebie na debianie nigdy nie miałem większych
problemów z PulseAudio, z kolei zaś te, które się przytrafiały na drodze jego użytkowania, szło w
miarę prosty sposób wyeliminować. Jest jednak jeden problem, z którym prawdopodobnie spotkaliśmy się
wszyscy, przynajmniej jeśli wykorzystujemy mikrofon w stopniu większym niż przeciętny użytkownik
komputera. Chodzi o to, że po odpaleniu pewnych aplikacji (lub też i w trakcie ich działania),
takich jak np. Skype, Mumble, czy TeamSpeak3, dźwięk we wszystkich pozostałych programach potrafi
zwyczajnie zdechnąć.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
