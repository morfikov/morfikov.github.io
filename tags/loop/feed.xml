<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Loop on Morfitronik</title>
    <link>https://morfikov.github.io/tags/loop/</link>
    <description>Recent content in Loop on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Thu, 19 Nov 2015 14:17:20 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/loop/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Montowanie obrazów ISO (urządzenia loop)</title>
      <link>https://morfikov.github.io/post/montowanie-obrazow-iso-urzadzenia-loop/</link>
      <pubDate>Thu, 19 Nov 2015 14:17:20 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/montowanie-obrazow-iso-urzadzenia-loop/</guid>
      <description>&lt;p&gt;Użytkownicy Debiana (i innych dystrybucji linux&#39;a) mają czasem poważne problemy z zamontowaniem
&lt;a href=&#34;https://pl.wikipedia.org/wiki/ISO_%28obraz%29&#34;&gt;obrazu ISO&lt;/a&gt; pozyskanego czy to z internetu, czy też
od swoich znajomych. Na windowsach zwykliśmy korzystać z takich rozwiązań jak Daemon Tools, Alcohol
120%, czy też &lt;a href=&#34;http://wincdemu.sysprogs.org/&#34;&gt;WinCDEmu&lt;/a&gt;. Na linux&#39;ach z narzędzi, które mają GUI,
można chyba wyróżnić &lt;a href=&#34;https://launchpad.net/furiusisomount&#34;&gt;furiusisomount&lt;/a&gt; oraz
&lt;a href=&#34;http://sourceforge.net/projects/acetoneiso/&#34;&gt;acetoneiso&lt;/a&gt; ale nie będziemy się nimi zajmować w tym
wpisie. Na dobrą sprawę, to nie potrzebujemy żadnego zewnętrznego oprogramowania, by sprawnie i
szybko zamontować dowolny obraz ISO w swoim systemie. W tym wpisie zostanie przedstawiony sposób
montownia tychże obrazów, który zakłada wykorzystanie urządzeń &lt;code&gt;loop&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Obsługa wielu partycji w module loop</title>
      <link>https://morfikov.github.io/post/obsluga-wielu-partycji-w-module-loop/</link>
      <pubDate>Sun, 14 Jun 2015 16:37:34 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/obsluga-wielu-partycji-w-module-loop/</guid>
      <description>&lt;p&gt;Wszelkie obrazy &lt;code&gt;.iso&lt;/code&gt; płyt cd/dvd czy nawet pliki &lt;code&gt;.img&lt;/code&gt; zawierające strukturę obrazów live możemy
zamontować lokalnie na komputerze uzyskując tym samym dostęp do ich systemu plików. W większości
przypadków, każdy taki obraz zawiera tylko jedną partycję, czasem lekko przesuniętą względem
początku ale generalnie nie ma większych problemów z zamontowaniem tego typu plików. Najwyżej
trzeba podać jeden dodatkowy parametr, tj. &lt;code&gt;offset&lt;/code&gt; . A co w przypadku obrazów dysków, które zwykle
mają więcej niż jedną partycję? Gdybyśmy spróbowali zamontować taki plik w systemie, to zostanie nam
zwrócony błąd, no bo przecież kernel nie wie za bardzo jak taki plik ma odczytać. Możemy za to
skorzystać z urządzeń &lt;code&gt;loop&lt;/code&gt; , które po odpowiedniej konfiguracji, są w stanie nam takie obrazy z
powodzeniem zamontować na naszym linux&#39;ie.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Zmiana rozmiaru obrazu .img</title>
      <link>https://morfikov.github.io/post/zmiana-rozmiaru-obrazu-img/</link>
      <pubDate>Sun, 14 Jun 2015 13:05:13 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/zmiana-rozmiaru-obrazu-img/</guid>
      <description>&lt;p&gt;Struktura pliku &lt;code&gt;.img&lt;/code&gt; czy &lt;code&gt;.iso&lt;/code&gt; niczym nie odbiega od struktury przeciętnego dysku twardego. W obu
przypadkach mamy dokładnie taki sam schemat budowy, tj. mamy obecny
&lt;a href=&#34;https://morfikov.github.io/post/mbr-ebr-i-tablica-partycji-dysku-twardego/&#34;&gt;MBR&lt;/a&gt; i partycje, z których
pierwsza zwykle jest wyrównana do 1MiB, zostawiając tym samym 2047 sektorów wolnego miejsca z
początku pliku, tuż za MBR, tzw. MBR-GAP. Obraz &lt;code&gt;.img&lt;/code&gt; można poddać edycji, np. utworzyć wewnątrz
niego inne partycje, zmienić rozmiar ich systemu plików, a nawet można manipulować rozmiarem samego
obrazu &lt;code&gt;.img&lt;/code&gt; . Taki plik możemy również zamontować w systemie przy pomocy narzędzia &lt;code&gt;mount&lt;/code&gt; ale też
trzeba odpowiednio podejść do tego zadania, bo przez fakt, że mamy z początku MBR i trochę wolnego
miejsca, to linux zwyczajnie nie potrafi rozpoznać systemu plików, który znajduje się w obrazie
&lt;code&gt;.img&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
