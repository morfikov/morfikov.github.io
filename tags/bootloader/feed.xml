<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bootloader on Morfitronik</title>
    <link>https://morfikov.github.io/tags/bootloader/</link>
    <description>Recent content in bootloader on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Sun, 30 Apr 2017 19:17:15 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/bootloader/feed.xml" rel="self" type="application/rss" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak usunąć blokadę bootloader&#39;a (OEM lock) w smartfonie z Androidem</title>
      <link>https://morfikov.github.io/post/jak-usunac-blokade-bootloadera-oem-lock-w-smartfonie-z-androidem/</link>
      <pubDate>Sun, 30 Apr 2017 19:17:15 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-usunac-blokade-bootloadera-oem-lock-w-smartfonie-z-androidem/</guid>
      <description>&lt;p&gt;Eksperymentując ostatnimi czasy ze smartfonami mającymi na pokładzie system Android nie zdarzyło mi
się jeszcze, by jakoś poważniej taki telefon uszkodzić. Oczywiście wiele razy złapałem soft brick&#39;a
(bootloop i inne takie) ale w zasadzie bez większego problemu szło z takiej sytuacji wybrnąć. Dziś
jednak sprawa była nieco bardziej poważna, bo mój &lt;a href=&#34;http://www.neffos.com/en/product/details/X1&#34;&gt;Neffos
X1&lt;/a&gt; nie chciał się po prostu uruchomić, a konkretnie to
pojawiało się logo TP-LINK i Android i telefon na tym ekranie startowym się zwyczajnie zawieszał.
Pikanterii dodaje jeszcze fakt, że przed sprawdzeniem czy telefon działa poprawnie, zablokowałem
bootloader przez &lt;code&gt;fastboot oem lock&lt;/code&gt; . Naturalnie bootloader można odblokować też przy użyciu
&lt;code&gt;fastboot&lt;/code&gt; ale po zresetowaniu urządzenia, ta opcja, którą się przełącza w ustawieniach
deweloperskich automatycznie wraca do pozycji zablokowanej. W taki sposób, by odblokować bootloader
ponownie, trzeba wejść w te opcje jeszcze raz i tam ściągnąć pierw blokadę OEM, a dopiero później
można mówić o bawieniu się &lt;code&gt;fastboot&lt;/code&gt; . A jak niby mamy wejść w te ustawienia jeśli system nie chce
wystartować, a my mamy stock&#39;owy firmware producenta smartfona? Czy taki stan rzeczy oznacza trwałe
uszkodzenie telefonu?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Instalacja i konfiguracja bootloader&#39;a extlinux</title>
      <link>https://morfikov.github.io/post/instalacja-i-konfiguracja-bootloadera-extlinux/</link>
      <pubDate>Sat, 02 Jan 2016 01:47:30 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/instalacja-i-konfiguracja-bootloadera-extlinux/</guid>
      <description>&lt;p&gt;W debianie mamy do dyspozycji kilka
&lt;a href=&#34;https://pl.wikipedia.org/wiki/Program_rozruchowy&#34;&gt;bootloader&#39;ów&lt;/a&gt;. Z tych częściej używanych to
będą syslinux, extlinux oraz grub2. Jeśli potrzebujemy automatyzacji oraz szeregu zaawansowanych
ficzerów, to dobrym wyjściem jest grub2. Jeśli natomiast korzystamy ze standardowej konfiguracji,
którą można by określić mianem BIOS-MBR i do tego chcemy mieć pełną kontrolę na bootloader&#39;em, to
najlepiej wybrać extlinux&#39;a lub syslinux&#39;a. Syslinux jest wykorzystywany głównie w przypadku
partycji FAT, która znajduje zastosowanie w różnego rodzaju systemach live. Natomiast jeśli w grę
wchodzi system plików EXT4, który jest domyślny na sporej części linux&#39;ów, to pozostaje nam do
wyboru jedynie extlinux. W tym wpisie postaramy się przebrnąć przez proces instalacji i konfiguracji
tego bootloader&#39;a. Nie będziemy przy tym korzystać z żadnych automatów i wszystko postaramy się
dostosować ręcznie.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Reinstalacja kernela i bootloader&#39;a</title>
      <link>https://morfikov.github.io/post/reinstalacja-kernela-bootloadera/</link>
      <pubDate>Thu, 22 Oct 2015 18:41:06 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/reinstalacja-kernela-bootloadera/</guid>
      <description>&lt;p&gt;Wykorzystywanie pełnego szyfrowania dysku twardego ma jedną zasadniczą wadę. O ile nasze dane są
należycie zabezpieczone, o tyle trzeba zwracać uwagę na to komu zezwalamy na dostęp do naszego
komputera. Nie chodzi tutaj o to, kto będzie używał samego systemu operacyjnego, choć to też jest
ważne, ale przede wszystkim chodzi o te osoby, które mają dostęp fizyczny do naszej maszyny. Czasem
możemy nabrać podejrzenia, że ktoś mógł nam jakąś pluskwę podłożyć. Wykrycie takiego robala, np. w
postaci sprzętowego keylogger&#39;a, nie powinno sprawić problemów. Z kolei już manipulacja boot
sektorem dysku twardego, lub też zmiany w initramfs, który znajduje się na niezaszyfrowanej partycji
&lt;code&gt;/boot/&lt;/code&gt; mogą przejść niezauważone. Jak zatem odratować system, co do którego mamy jakieś
zastrzeżenia?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Błędy bootloader&#39;a GRUB/GRUB2</title>
      <link>https://morfikov.github.io/post/bledy-bootloadera-grub/</link>
      <pubDate>Sun, 21 Jun 2015 00:33:38 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/bledy-bootloadera-grub/</guid>
      <description>&lt;p&gt;GRUB to najpopularniejszy bootloader w systemach linuxowych. Dorobił się tego miejsca na podium
głównie ze względu na swoją pełną automatyzację. Potrafi obsłużyć pokaźną ilości systemów plików,
no i również nie zostaje w tyle w stosunku do aktualnych standardów partycjonowania dysków -- mowa
oczywiście o tablicy partycji GPT. Przeglądając internet w poszukiwaniu odpowiedzi na temat jednego
z błędów jaki GRUB/GRUB2 wyrzucił mi podczas startu systemu, znalazłem &lt;a href=&#34;http://www.uruk.org/orig-grub/errors.html&#34;&gt;ten oto
artykuł&lt;/a&gt;. Zawarte są tam dokładnie wszystkie możliwe
błędy jakie GRUB potrafi zwrócić wraz z krótkim wyjaśnieniem ich przyczyny. Postanowiłem sobie je
przejrzeć i dorobić do nich polskie tłumaczenie.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Reinstalacja bootloadera grub</title>
      <link>https://morfikov.github.io/post/reinstalacja-bootloadera-grub/</link>
      <pubDate>Tue, 16 Jun 2015 21:13:57 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/reinstalacja-bootloadera-grub/</guid>
      <description>&lt;p&gt;Domyślnym bootloaderem w systemie linux jest &lt;a href=&#34;https://www.gnu.org/software/grub/&#34;&gt;grub&lt;/a&gt; i jako, że
to oprogramowanie jest ładowane do pamięci jako pierwsze, ma ono kluczowe zadanie w procesie startu
systemu operacyjnego. Przy jego pomocy możemy także przekazać szereg parametrów dla modułów kernela,
tym samym odpowiednio go konfigurując. Czasem z pewnych przyczyn, najczęściej gdy inny system
nadpisze MBR, system operacyjny nie chce się podnieść i musimy przeinstalować bootloader,
zakładając, że problem tkwi w nim.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
