<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>moduły-pam on Morfitronik</title>
    <link>https://morfikov.github.io/tags/modu%C5%82y-pam/</link>
    <description>Recent content in moduły-pam on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Mon, 19 Oct 2015 23:11:22 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/modu%C5%82y-pam/feed.atom" rel="self" type="application/atom+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Implementacja encfs na dropbox&#39;ie</title>
      <link>https://morfikov.github.io/post/implementacja-encfs-na-dropboxie/</link>
      <pubDate>Mon, 19 Oct 2015 23:11:22 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/implementacja-encfs-na-dropboxie/</guid>
      <description>&lt;p&gt;Jako, że ostatnio &lt;a href=&#34;/post/szyfrowanie-katalogu-home-przy-pomocy-encfs/&#34;&gt;zaszyfrowaliśmy katalog domowy przy pomocy
encfs&lt;/a&gt; , to nie sposób sobie
nie zadać pytania czy tego typu mechanizm może działać w oparciu o serwisy online takie jak, np.
&lt;a href=&#34;https://www.dropbox.com/&#34;&gt;dropbox&lt;/a&gt;. Chodzi o to, że dropbox umożliwia synchronizację plików w
czasie rzeczywistym, co może być problematyczne, gdy w grę wchodzi szyfrowanie danych. Wszelkie inne
rozwiązania na bazie &lt;a href=&#34;https://pl.wikipedia.org/wiki/Linux_Unified_Key_Setup&#34;&gt;LUKS&lt;/a&gt; są mało
praktyczne w tym przypadku. Natomiast synchronizowanie pojedynczych plików zaszyfrowanych przy
pomocy &lt;code&gt;encfs&lt;/code&gt; zapowiada się obiecująco.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Szyfrowanie katalogu /home/ przy pomocy encfs</title>
      <link>https://morfikov.github.io/post/szyfrowanie-katalogu-home-przy-pomocy-encfs/</link>
      <pubDate>Mon, 19 Oct 2015 21:54:02 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/szyfrowanie-katalogu-home-przy-pomocy-encfs/</guid>
      <description>&lt;p&gt;Wielu ludzi uważa, że szyfrowanie całego dysku jest zbędne i pozbawione większego sensu, no bo
przecie &amp;quot;system nie zawiera żadnych wrażliwych danych, które by wymagały szyfrowania&amp;quot;. Nie będę się
tutaj spierał co do tego punktu widzenia, bo raczej wszyscy znają moje zdanie na temat &amp;quot;danych
wymagających szyfrowania&amp;quot; i skupię się tu raczej na tym jak troszeczkę podratować niepełne
szyfrowanie, które ludzie, nie wiedząc czemu, są bardziej skłonni stosować, niż cały ten full disk
encryption.&lt;/p&gt;
&lt;p&gt;Narzędzie &lt;code&gt;encfs&lt;/code&gt; nie przeszło pomyślnie &lt;a href=&#34;https://defuse.ca/audits/encfs.htm&#34;&gt;audytu bezpieczeństwa&lt;/a&gt;, a to z takiego powodu, że
projekt nie był rozwijany przez szereg lat. &lt;a href=&#34;https://github.com/vgough/encfs&#34;&gt;Obecnie jest on w rekach społeczności&lt;/a&gt; i to od niej
będzie zależeć czy te wykryte błędy zostaną poprawione.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Zabezpieczenie konta root przy pomocy pam-usb</title>
      <link>https://morfikov.github.io/post/zabezpieczenie-konta-root-przy-pomocy-pam-usb/</link>
      <pubDate>Mon, 19 Oct 2015 21:01:03 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/zabezpieczenie-konta-root-przy-pomocy-pam-usb/</guid>
      <description>&lt;p&gt;Jakiś czas temu natknąłem się na moduł &lt;code&gt;pam-usb&lt;/code&gt; , który to w dość ciekawy sposób zabezpiecza dostęp
do konta użytkownika root. &lt;a href=&#34;https://wiki.debian.org/pamusb&#34;&gt;Cały mechanizm opiera się o pendrive&lt;/a&gt;,
którego to unikalne cechy są brane pod uwagę przy uwierzytelnianiu podczas logowania się na konto
super użytkownika, czyli min. gdy wydajemy polecenie &lt;code&gt;su&lt;/code&gt; albo &lt;code&gt;sudo&lt;/code&gt; . Jest to o tyle ciekawa
rzecz, że konto użytkownika root możne stać się niewrażliwe na próby złamania hasła w przypadku
połączenia sieciowego. Jak by nie patrzeć, atakujący, który łączy się zdalnie, nie jest w stanie
podłączyć do naszego komputera żadnego fizycznego urządzenia, w wyniku czego nigdy nie uzyska
dostępu do konta administratora.&lt;/p&gt;
&lt;p&gt;Pakiet &lt;code&gt;libpam-usb&lt;/code&gt; wyleciał z debiana jakiś czas temu. &lt;a href=&#34;https://tracker.debian.org/news/686153&#34;&gt;Powodem
były&lt;/a&gt; zależności, które wskazywały na przestarzały już
pakiet &lt;code&gt;udisks&lt;/code&gt; . Poza tym, nikt nie zajmował się tym pakietem. Obecnie jest on dostępny jedynie w
starszych wydaniach debiana.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
