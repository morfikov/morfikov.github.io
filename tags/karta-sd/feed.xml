<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>karta-sd on Morfitronik</title>
    <link>https://morfikov.github.io/tags/karta-sd/</link>
    <description>Recent content in karta-sd on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Thu, 09 Feb 2017 18:01:56 +0100</lastBuildDate><atom:link href="https://morfikov.github.io/tags/karta-sd/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak odszyfrować zawartość karty SD w smartfonie z Androidem</title>
      <link>https://morfikov.github.io/post/jak-odszyfrowac-zawartosc-karty-sd-w-smartfonie-z-androidem/</link>
      <pubDate>Thu, 09 Feb 2017 18:01:56 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-odszyfrowac-zawartosc-karty-sd-w-smartfonie-z-androidem/</guid>
      <description>&lt;p&gt;W Androidzie 6.0 Marshmallow został wprowadzony ciekawy mechanizm zwany &lt;a href=&#34;https://source.android.com/devices/storage/adoptable&#34;&gt;Adoptable Storage&lt;/a&gt;,
który umożliwia &lt;a href=&#34;https://morfikov.github.io/post/android-formatowanie-karty-sd-jako-pamiec-wewnetrzna/&#34;&gt;zamontowanie karty SD w smartfonie jako pamięć wewnętrzna&lt;/a&gt;. W ten
sposób pamięć flash w telefonach, które mają jej niewiele, może zostać nieco rozbudowana. Jedyny
problem z tym całym Adoptable Storage jest taki, że Android szyfruje zawartość karty SD
automatycznie, przez co nie jesteśmy w stanie odczytać żadnych informacji z takiego nośnika na
innych urządzeniach. Istnieje jednak sposób, by rozszyfrować i tym samym uzyskać dostęp do danych
zgromadzonych na karcie SD z poziomu linux&#39;a, np. dystrybucji Debian. W tym artykule prześledzimy
sobie właśnie ten proces na przykładzie &lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;smartfona Neffos Y5&lt;/a&gt; od TP-LINK.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Formatowanie karty SD jako pamięć wewnętrzna</title>
      <link>https://morfikov.github.io/post/android-formatowanie-karty-sd-jako-pamiec-wewnetrzna/</link>
      <pubDate>Sun, 04 Dec 2016 19:18:40 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/android-formatowanie-karty-sd-jako-pamiec-wewnetrzna/</guid>
      <description>&lt;p&gt;Jakiś czas temu bawiąc się jednym z TP-LINK&#39;owch smartfonów, konkretnie to był &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;model Neffos C5&lt;/a&gt;,
nie byłem zbytnio zadowolony z faktu, że karta SD w takim telefonie może być sformatowana jedynie
systemem plików z rodziny FAT. Takie rozwiązanie niesie ze sobą pewne niedogodności, bo &lt;a href=&#34;https://pl.wikipedia.org/wiki/FAT32&#34;&gt;system
plików FAT ma dość spore ograniczenia&lt;/a&gt; jeśli chodzi o przechowywanie informacji. Niekoniecznie
wszyscy musimy wgrywać na smartfona bardzo duże pliki czy też trzymać ich tam setki GiB, bo to jest
raczej rzadkością, ale brak wsparcia uprawnień do plików i katalogów w systemie plików FAT powoduje,
że aplikacje w Androidzie nie chcą zapisywać swoich danych na karcie SD, która taki system plików
wykorzystuje. W efekcie trzeba kombinować, by &lt;a href=&#34;https://morfikov.github.io/post/android-brak-mozliwosci-zapisu-danych-na-karcie-sd-neffos-c5/&#34;&gt;aplikacja kamery/aparatu zapisywała zdjęcia czy
materiał video na karcie SD&lt;/a&gt;. Na smartfonach TP-LINK&#39;a, które mają zainstalowany Android 6.0
Marshmallow, np. &lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;Y5&lt;/a&gt; czy &lt;a href=&#34;http://www.neffos.pl/product/details/Y5L&#34;&gt;Y5L&lt;/a&gt;), jesteśmy w stanie sformatować karty SD jako pamięć
wewnętrzna za sprawą wprowadzonego w tej wersji Androida &lt;a href=&#34;https://source.android.com/devices/storage/adoptable&#34;&gt;mechanizmu Adoptable Storage&lt;/a&gt;.
Postanowiłem zatem sprawdzić jak taki proces formatowania karty SD przebiega i co dokładnie może
nam przynieść jego przeprowadzenie.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Brak możliwości zapisu danych na karcie SD w Neffos C5</title>
      <link>https://morfikov.github.io/post/android-brak-mozliwosci-zapisu-danych-na-karcie-sd-neffos-c5/</link>
      <pubDate>Fri, 14 Oct 2016 20:56:20 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/android-brak-mozliwosci-zapisu-danych-na-karcie-sd-neffos-c5/</guid>
      <description>&lt;p&gt;Może i obecne smartfony dają nam w standardzie sporo wolnego miejsca na swoim flash&#39;u ale dla
niektórych to ciągle za mało. Nie ważne ile tej pamięci będziemy mieć dostępnej, to i tak zawsze
będzie nam jej brakować. Mój &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;Neffos C5&lt;/a&gt; ma na pokładzie 16 GiB flash, z czego około 10 GiB jest
udostępnione użytkownikowi. Mi by się przydał flash 64 GiB. Jako, że ten telefon obsługuje karty
SDHC, max 32 GiB, to postanowiłem dokupić tego typu kartę i zamontować ją w smartfonie. Problem
pojawił się w momencie próby przeniesienia danych aplikacji z pamięci wewnętrznej na pamięć
zewnętrzną jaką jest karta SD. Chodzi na przykład o zapisywanie zdjęć czy filmów z kamery
bezpośrednio na karcie SD. Okazuje się jednak, że &lt;a href=&#34;https://developer.android.com/about/versions/android-4.4.html&#34;&gt;Android począwszy od wersji 4.4&lt;/a&gt; zablokował
możliwość umieszczania danych aplikacji na karatach SD. Czy słusznie i czy istnieje jakiś sposób
by wybrnąć z tej sytuacji?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Rzeczywista pojemność pendrive i kart SD</title>
      <link>https://morfikov.github.io/post/rzeczywista-pojemnosc-pendrive-i-kart-sd/</link>
      <pubDate>Sun, 14 Jun 2015 09:08:09 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/rzeczywista-pojemnosc-pendrive-i-kart-sd/</guid>
      <description>&lt;p&gt;Parę dni temu &lt;a href=&#34;https://forum.dug.net.pl/viewtopic.php?id=26668&#34;&gt;jednemu z użytkowników forum DUG&lt;/a&gt;
przytrafiła się niezbyt miła sytuacja. Rozchodzi się o to iż zakupił on kartę SD i, jak sprzedawca
zapewniał, miała mieć pojemność 128 GiB. Wszyscy wiemy, że sprzedawcy nieco zawyżają te numerki na
opakowaniach, bo operują na potęgach o podstawie 10, a nie 2, i tak ze 100 GB robi się zaraz 93 GiB.
Do tego oczywiście jeszcze dochodzi rezerwacja miejsca na potrzebę obsługi systemu plików. Niemniej
jednak, w tym przypadku, różnica była trochę większa i tutaj mamy do czynienia z czymś co się nazywa
&lt;a href=&#34;http://www.ebay.com/gds/All-About-Fake-Flash-Drives-2013-/10000000177553258/g.html&#34;&gt;fake flash&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Jest taka żelazna zasada, by po zakupie jakiegoś sprzętu, sprawdzić go czy aby działa jak należy i
czy jest z nim wszystko w porządku. Jest to wręcz obowiązek przy zakupie pamięci opartych o
technologię flash, bez znaczenia z jakiego to źródła by one nie pochodziły.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak wgrać system live na uszkodzony pendrive</title>
      <link>https://morfikov.github.io/post/jak-wgrac-system-live-na-uszkodzony-pendrive/</link>
      <pubDate>Thu, 11 Jun 2015 14:43:35 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-wgrac-system-live-na-uszkodzony-pendrive/</guid>
      <description>&lt;p&gt;Każdy z nas spotkał się już chyba w swoim życiu z systemami live. To taki wynalazek zawierający
domyślne oprogramowanie, tak skonfigurowane, by system zdołał się odpalić na większość maszyn w ich
pamięci operacyjnej, oczywiście zakładając, że wymagania sprzętowe zostaną zaspokojone, głównie
chodzi o pamięć RAM. Takie systemy live są dostarczane w postaci kilku rodzajów obrazów: iso, hdd
oraz hybryda. Pierwszy z nich zwykle wypala się na płytkach, drugi na pendrive, z kolei hybrydowy
obraz można wgrać na każdy rodzaj urządzenia i nawet wykorzystać w przypadku maszyn wirtualnych i
zwykle spotkamy się z tym ostatnim typem, nawet jeśli plik ma rozszerzenie &lt;code&gt;.iso&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Kiedy żywot pendrive dobiega końca...</title>
      <link>https://morfikov.github.io/post/kiedy-zywot-pendrive-dobiega-konca/</link>
      <pubDate>Tue, 09 Jun 2015 20:47:42 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/kiedy-zywot-pendrive-dobiega-konca/</guid>
      <description>&lt;p&gt;Pendrive to jedno z cenniejszych urządzeń w obecnych czasach. Jest mały, poręczny i potrafi
przechować parę set GiB danych oraz jako, że nie ma części ruchomych, można nie obchodzić się z nim
jak z jajkiem i to bez ryzyka utraty danych. Często wykorzystuje się go jako środek transportu na
krótkie odległości między kilkoma maszynami, gdzie z pewnych powodów nie można pociągnąć kabla
sieciowego, nie wspominając przy tym o wifi. Systemy live wręcz nie mogą się bez nich obejść.
Jesteśmy w sumie uzależnieni od tych małych urządzeń tak bardzo, że dostrzegamy to dopiero w chwili
gdy, któryś pendrive zaczyna odmawiać posłuszeństwa.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
