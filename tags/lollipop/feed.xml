<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lollipop on Morfitronik</title>
    <link>https://morfikov.github.io/tags/lollipop/</link>
    <description>Recent content in lollipop on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Mon, 03 Apr 2017 19:51:32 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/lollipop/feed.xml" rel="self" type="application/rss" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Repartycjonowanie flash&#39;a w Neffos C5 i C5 MAX od TP-LINK</title>
      <link>https://morfikov.github.io/post/repartycjonowanie-flash-w-neffos-c5-i-c5-max-od-tp-link/</link>
      <pubDate>Mon, 03 Apr 2017 19:51:32 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/repartycjonowanie-flash-w-neffos-c5-i-c5-max-od-tp-link/</guid>
      <description>&lt;p&gt;Analizując sobie fabryczny podział przestrzeni flash w TP-LINK&#39;owych smartfonach, a konkretnie w
modelach Neffos C5 i C5 MAX, doszedłem do wniosku, że producent tych urządzeń nieco zaszalał
przeznaczając aż 4 GiB przestrzeni na partycję &lt;code&gt;/system/&lt;/code&gt; . W zasadzie ROM w tych telefonach zajmuje
około 2 GiB. Zatem pozostałe 2 GiB zwyczajnie się marnuje i przeciętny użytkownik smartfona nie
będzie w stanie tego obszaru w żaden sposób wykorzystać. Można by zatem inaczej przepartycjonować
ten flash, tak by nieco skurczyć samą partycję &lt;code&gt;/system/&lt;/code&gt; , przeznaczając jednocześnie odzyskane
miejsce na powiększenie partycji &lt;code&gt;/data/&lt;/code&gt; . W tym wpisie postaramy się właśnie taki zabieg zmiany
rozmiaru partycji &lt;code&gt;/system/&lt;/code&gt; przeprowadzić dla tych dwóch wyżej wymienionych modeli smartfonów.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Framework Xposed i moduły do YouTube</title>
      <link>https://morfikov.github.io/post/android-framework-xposed-i-moduly-do-youtube/</link>
      <pubDate>Sat, 04 Mar 2017 21:56:54 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-framework-xposed-i-moduly-do-youtube/</guid>
      <description>&lt;p&gt;Stock&#39;owe Androidy w smartfonach mają ten problem, że zawierają całą masę preinstalowanych aplikacji
od Google. Nie to by jakoś mnie to bolało, no może za wyjątkiem braku możliwości ich wywalenia czy
wyłączenia. To co mnie trochę irytuje, to fakt obecności reklam w aplikacji YouTube. Nie da rady się
ich pozbyć praktycznie w żaden sposób. Zdaję sobie sprawę, że serwis YT można przeglądać w
Firefox&#39;ie i jeśli mamy &lt;a href=&#34;https://morfikov.github.io
/post/android-blokowanie-reklam-z-adaway-na-smartfonie/&#34;&gt;zainstalowanego w telefonie adblock&#39;a, np.
AdAway&lt;/a&gt;, czy też &lt;a href=&#34;https://morfikov.github.io
/post/blokowanie-reklam-adblock-na-domowym-routerze-wifi/&#34;&gt;wdrożony
podobny filtr na domowym routerze WiFi z
LEDE/OpenWRT&lt;/a&gt;, to te
reklamy mogą zostać z powodzeniem odfiltrowane, przynajmniej w Firefox&#39;ie. Jestem też świadom
istnienia &lt;a href=&#34;https://morfikov.github.io
/post/android-youtube-bez-reklam-na-smartfonie-newpipe/&#34;&gt;aplikacji
NewPipe&lt;/a&gt; , która jest
zubożonym klientem YouTube. Niemniej jednak, te opisane wyżej sposoby mają jedną podstawową wadę.
Mianowicie tracimy lwią część funkcjonalności serwisu YouTube. Przykładem mogą być powiadamiania w
przypadku, gdy na jeden z subskrybowanych kanałów zostanie wrzucony jaki materiał video. Taką opcję
ma ta aplikacja od Google ale klikając w powiadomienie jest niemal pewne, że włączy nam się jakaś
wredna reklama o wiele głośniejsza niż sam filmik, który zamierzamy obejrzeć. Innym problemem w
przypadku tej góglowskiej aplikacji jest brak możliwości odtwarzania video w tle czy też przy
zgaszonym wyświetlaczu. Postanowiłem w końcu wziąć się za ogarnięcie tej góglowskiej aplikacji
YouTube i wyeliminować te drażniące mnie problemy &lt;a href=&#34;http://repo.xposed.info/module/de.robv.android.xposed.installer&#34;&gt;instalując w smartfonie framework
Xposed&lt;/a&gt; wraz z odpowiednimi
modułami: &lt;a href=&#34;http://repo.xposed.info/module/com.pyler.youtubebackgroundplayback&#34;&gt;YouTube Background
Playback&lt;/a&gt; oraz &lt;a href=&#34;http://repo.xposed.info/module/ma.wanam.youtubeadaway&#34;&gt;YouTube
AdAway&lt;/a&gt;. Jako, że nie jest to proces łatwy,
to postanowiłem go opisać krok po kroku.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android Studio i Android SDK pod linux</title>
      <link>https://morfikov.github.io/post/android-studio-i-android-sdk-pod-linux/</link>
      <pubDate>Sun, 29 Jan 2017 18:29:36 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-studio-i-android-sdk-pod-linux/</guid>
      <description>&lt;p&gt;Rozpoczynając przygodę z Androidem (tylko taką nieco bardziej deweloperską) trzeba posiadać w
systemie szereg niezbędnych narzędzi. Chodzi tutaj oczywiście o Android SDK. Metod na instalację
tego pakietu na linux&#39;ie, a konkretnie w dystrybucji Debian, jest co najmniej kilka. Chodzi o to, że
Google udostępnia paczkę &lt;code&gt;.zip&lt;/code&gt; z Android SDK, którą można pobrać sobie z oficjalnej strony
Androida. Dodatkowo, na tej samej stronie mamy coś o nazwie Android Studio, które również jest w
stanie nam potrzebne narzędzia dostarczyć. Poza tym, te narzędzia można także skompilować sobie ze
źródeł Androida, jak i również zainstalować bezpośrednio z repozytorium samego Debiana. Niemniej
jednak, część z tych sposobów nie jest zbytnio wygodna, a pozostała część zakłada, że korzystamy z
najnowszej wersji Androida (obecnie Nougat). A co w przypadku, gdybyśmy chcieli operować na
Androidzie 5.1 (Lollipop) czy 6.0 (Marshmallow)? Jak zainstalować pasujące wersje narzędzi, by nic
nam się nie gryzło ze sobą?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak zlokalizować skradziony/zagubiony smartfon z Androidem</title>
      <link>https://morfikov.github.io/post/jak-zlokalizowac-skradziony-zagubiony-smartfon-z-androidem/</link>
      <pubDate>Fri, 27 Jan 2017 18:52:06 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-zlokalizowac-skradziony-zagubiony-smartfon-z-androidem/</guid>
      <description>&lt;p&gt;Smartfony towarzyszą nam w codziennym życiu praktycznie cały czas. Dlatego też zaczynamy
przechowywać w tych urządzeniach coraz to więcej informacji osobistych, które są w stanie dość
dokładnie opisać nasze życie prywatne. Co jednak w przypadku, gdy taki telefon zgubimy lub też
zostanie nam on skradziony przez kogoś? Gdy chodzi o urządzenia z Androidem, to Google oferuje
usługę, która jest w stanie połączyć się z naszym smartfonem i przy odrobinie szczęścia ujawnić
nam jego położenie geograficzne lub też pozwolić nam na zdalne zablokowanie systemu w telefonie.
Chodzi oczywiście o usługę &amp;quot;Znajdź telefon/smartfon&amp;quot; (find my phone), na którą rzucimy sobie okiem w
tym artykule.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Factory Reset Protection (FRP) w smartfonach z Androidem</title>
      <link>https://morfikov.github.io/post/factory-reset-protection-frp-w-smartfonach-z-androidem/</link>
      <pubDate>Fri, 20 Jan 2017 18:37:11 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/factory-reset-protection-frp-w-smartfonach-z-androidem/</guid>
      <description>&lt;p&gt;Kupowanie telefonów czy smartfonów z Androidem z innych źródeł niż oficjalne punkty sprzedaży nie
zawsze jest bezpieczną opcją. Gdy nabywamy takie urządzenie od znajomego, to raczej nie powinniśmy
się martwić o to, że ten telefon może być kradziony. Niemniej jednak, po zakupie takiego urządzenia,
poprzedni użytkownik zwykle resetuje jego ustawienia do fabrycznych, by klient miał świeży system i
nie był w stanie uzyskać dostępu do prywatnych danych poprzedniego właściciela smartfona. Nie byłoby
w tym nic nadzwyczajnego, gdyby nie fakt, że nabywca tak odsprzedanego telefonu może mieć pewne
problemy ze skonfigurowaniem Androida, bo ten system zwróci mu komunikat: &amp;quot;Urządzenie zostało
zresetowane. Aby kontynuować, zaloguj się na konto Google, które było wcześniej synchronizowane na
tym urządzeniu&amp;quot;, czyli telefon został zablokowany przez mechanizm Factory Reset Protection Lock (FRP
Lock). Jeśli znajomy mieszka blisko nas, to naturalnie możemy się przejść do niego w celu zdjęcia
tej blokady. A co w przypadku, gdy nabyliśmy urządzenie na odległość? Czy jest jakiś sposób na
obejście tej blokady w przypadku smartfonów Neffos od TP-LINK?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Root Integrity Check w smartfonach z Androidem</title>
      <link>https://morfikov.github.io/post/root-integrity-check-w-smartfonach-z-androidem/</link>
      <pubDate>Tue, 10 Jan 2017 18:24:47 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/root-integrity-check-w-smartfonach-z-androidem/</guid>
      <description>&lt;p&gt;W smartfonach Neffos od TP-LINK, którymi mam możliwość się bawić, standardowo jest dostępny tryb
recovery, a telefon można uruchomić w tym trybie przez przyciśnięcie przycisków VolumeUP + Power. W
zasadzie jest to jeden z podstawowych trybów pracy smartfona, który może nam pomóc, gdy mamy
problemy z uruchomieniem urządzenia. Zwykle w trybie recovery przeprowadza się takie czynności jak
czyszczenie partycji &lt;code&gt;/cache/&lt;/code&gt; i &lt;code&gt;/data/&lt;/code&gt; (Factory Reset). Z poziomu trybu recovery jesteśmy także w
stanie przeprowadzić aktualizację firmware (tego oprogramowania, które zarządza naszym telefonem). W
tym artykule jednak nie będziemy dokonywać żadnych z tych powyżej opisanych czynności. W menu trybu
recovery jest jeszcze jedna ciekawa opcja, tj. Root Integrity Check. Do czego ona służy i jak
interpretować wynik skanowania?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Przenoszenie danych ze ZRAM do RAM na smartfonie z Androidem</title>
      <link>https://morfikov.github.io/post/przenoszenie-danych-ze-zram-do-ram-na-smartfonie-z-androidem/</link>
      <pubDate>Mon, 02 Jan 2017 17:19:47 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/przenoszenie-danych-ze-zram-do-ram-na-smartfonie-z-androidem/</guid>
      <description>&lt;p&gt;Jak często zdarza się wam uruchamiać ponownie telefon czy smartfon? Raczej nikt z nas nie robi tego
zbyt często, tak jak ma to miejsce w przypadku desktopów, laptopów i innych tego typu standardowych
komputerów. System w smartfonie zwykle działa bez resetowania wiele tygodni czy nawet miesięcy, bo
niewiele rzeczy instalujemy, no i praktycznie nic nie aktualizujemy. Dlatego też nie ma potrzeby
uruchamiać ponownie Androida. Niemniej jednak są pewne przypadki, w których taki system jest w
stanie zachowywać się bardzo dziwnie i restart smartfona zwykle poprawia zaistniałe problemy. Chodzi
generalnie o utylizowanie baterii w większym stopniu, czy o ogólne uczucie spowolnienia pracy
systemu. Przyczyn takiego stanu rzeczy może być cała masa ale w tym konkretnym przypadku znaczenie
zdaje się mieć zbyt duże wykorzystanie pamięci RAM. W efekcie Android robi użytek z &lt;a href=&#34;https://www.kernel.org/doc/Documentation/blockdev/zram.txt&#34;&gt;urządzenia
ZRAM,&lt;/a&gt; które jest niczym innym jak tylko
skompresowanym wycinkiem pamięci operacyjnej, gdzie system stara się upchnąć dane w przypadku
kończenia się zasobów pamięci, a kompresja to przecież bardzo zasobożerny proces. Możemy taki
telefon wyłączać co jakiś czas ale istnieje prostsza metoda wyeliminowania problemu.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak przeprowadzić unroot na smartfonie Neffos C5 MAX od TP-LINK</title>
      <link>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-c5-max-od-tp-link/</link>
      <pubDate>Wed, 14 Dec 2016 19:08:01 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-c5-max-od-tp-link/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://morfikov.github.io
/post/android-root-smartfona-neffos-c5-max-od-tp-link/&#34;&gt;Proces root na smartfonie Neffos C5
MAX&lt;/a&gt; od TP-LINK można
przeprowadzić w miarę bez większych problemów, choć nie jest to rozwiązanie działające OOTB.
Niemniej jednak, taki root telefonu czyni go bardziej podatnym na zagrożenia ze strony wrogich
aplikacji. Ponadto, kasując czy też zmieniając pliki systemowe, możemy sprawić, że nasze urządzenie
zwyczajnie przestanie nam działać, tj. już się nie uruchomi. Niektórzy użytkownicy smartfonów nie
zdają sobie z tego sprawy i ukorzeniają Androida bez głębszego zastanowienia się. Mi jako
linux&#39;iarzowi, root jest niezbędny do pracy ale czy aby na pewno każdy musi go mieć? Ci z was,
którzy taki root systemu przeprowadzili i nie korzystają z niego praktycznie wcale, zastanawiają
się pewnie czy istnieje sposób, by cofnąć wprowadzone zmiany i przywrócić Androida do stanu
pierwotnego. Krótka odpowiedź brzmi: &amp;quot;oczywiście, że tak&amp;quot; i temu procesowi przyjrzymy się w
niniejszym artykule.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Root smartfona Neffos C5 MAX od TP-LINK</title>
      <link>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-max-od-tp-link/</link>
      <pubDate>Tue, 13 Dec 2016 17:27:37 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-max-od-tp-link/</guid>
      <description>&lt;p&gt;Bawiąc się ostatnio &lt;a href=&#34;https://morfikov.github.io
/post/recenzja-smartfon-neffos-c5-max-od-tp-link/&#34;&gt;smartfonem Neffos C5
MAX&lt;/a&gt; od TP-LINK, obiecałem
sobie, że jak tylko będę miał chwilę czasu, to postaram się ukorzenić Androida, który w tym
telefonie siedzi (Lollipop). Generalnie rzecz biorąc, sposób root&#39;owania tego urządzenia jest bardzo
podobny do tego, który miałem już możliwość &lt;a href=&#34;https://morfikov.github.io
/post/android-root-smartfona-neffos-c5-od-tp-link/&#34;&gt;przeprowadzić na innym modelu TP-LINK&#39;a, tj. Neffos
C5&lt;/a&gt;. Dlatego też poniższy
artykuł jest bardzo zbliżony treścią, choć lekko zaktualizowany pod kątem Neffos&#39;a C5 MAX. Grunt, że
nie było żadnych problemów z przeprowadzeniem backup&#39;u flash&#39;a telefonu jak i samego procesu root.&lt;/p&gt;
&lt;p&gt;Prostszy sposób na przeprowadzanie procesu root w smartfonach Neffos od TP-LINK z wykorzystaniem
natywnych obrazów TWRP &lt;a href=&#34;https://morfikov.github.io
/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/&#34;&gt;został opisany w nowym wątku&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak skonfigurować połączenie VPN na smartfonie z Androidem</title>
      <link>https://morfikov.github.io/post/jak-skonfigurowac-polaczenie-vpn-na-smartfonie-z-androidem/</link>
      <pubDate>Wed, 07 Dec 2016 18:54:37 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-skonfigurowac-polaczenie-vpn-na-smartfonie-z-androidem/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://morfikov.github.io
/post/jak-skonfigurowac-serwer-vpn-na-debianie-openvpn/&#34;&gt;W artykule o postawieniu serwera
VPN&lt;/a&gt; poruszyłem jedynie
kwestię konfiguracji klienta mającego system operacyjny z rodziny linux, a konkretnie była to
dystrybucja Debian. Niemniej jednak, mając działający serwer VPN gdzieś tam za granicą, możemy
również do niego podłączyć się za pomocą smartfona z Androidem i to praktycznie z dowolnego miejsca
na ziemi. W ten sposób możemy zabezpieczyć nasze połączenie przed cenzurą internetu, która obecnie
jest przeprowadzana na naszych oczach. Jako, że smartfony są popularniejsze od komputerów czy
laptopów i zwykle przesyłamy z nich tak samo ważne (albo i ważniejsze) dane, to wypadałoby
zaszyfrować cały ruch z takiego telefonu. Niniejszy wpis będzie właśnie dotyczył tego tematu, który
zostanie opisany w oparciu &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;smartfon Neffos C5&lt;/a&gt; od TP-LINK
mający na pokładzie Androida w wersji 5.1 (Lollipop).&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>XDA Labs: Repozytorium aplikacji i modułów Xposed</title>
      <link>https://morfikov.github.io/post/xda-labs-repozytorium-aplikacji-modulow-xposed/</link>
      <pubDate>Thu, 10 Nov 2016 16:44:05 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/xda-labs-repozytorium-aplikacji-modulow-xposed/</guid>
      <description>&lt;p&gt;Przeglądając sobie forum XDA w poszukiwaniu pewnych informacji natrafiłem na &lt;a href=&#34;https://forum.xda-developers.com/android/apps-games/labs-t3241866&#34;&gt;XDA
Labs&lt;/a&gt;. Niby jest to aplikacja
mająca na celu poprawę doznań przy przeglądaniu tego forum na urządzeniach mobilnych ale posiada
ona też kilka użytecznych funkcji niekoniecznie związanych bezpośrednio z interakcją ze stroną
xda-developers. Przede wszystkim, mamy tutaj dostęp do repozytorium aplikacji na Androida, mniej
więcej coś jak
&lt;a href=&#34;https://morfikov.github.io
/post/android-repozytorium-aplikacji-opensource-f-droid/&#34;&gt;F-Droid&lt;/a&gt;. Przy pomocy
XDA Labs jesteśmy też w stanie w prosty sposób instalować moduły Xposed. Te powyższe rzeczy
sprawiły, że postanowiłem się nieco bliżej przyjrzeć aplikacji XDA Labs.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak zaszyfrować zapytania DNS na smartfonie (dnscrypt-proxy)</title>
      <link>https://morfikov.github.io/post/jak-zaszyfrowac-zapytania-dns-na-smartfonie-dnscrypt-proxy/</link>
      <pubDate>Thu, 27 Oct 2016 18:52:19 +0200</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-zaszyfrowac-zapytania-dns-na-smartfonie-dnscrypt-proxy/</guid>
      <description>&lt;p&gt;Smartfony to takie małe komputery, z których praktycznie każdy z nas korzysta na co dzień. Nie
różnią się one zbytnio od tych domowych PC czy laptopów, no może za wyjątkiem rozmiarów.
Wszystkie elementy tyczące się spraw sieciowych, np. korzystanie z internetu za pomocą przeglądarki,
są dokładnie taka same co w przypadku zwykłych komputerów. Na smartfonach domeny również trzeba
jakoś rozwiązać. Standardowo w Androidzie są wykorzystywane serwery od Google (8.8.8.8 i 8.8.4.4).
Jeśli nasza sieć WiFi oferuje inne DNS&#39;y, to wtedy one mają pierwszeństwo. Niemniej jednak, nie
zawsze będziemy w stanie kontrolować środowisko sieciowe, do którego zostaniemy podłączeni. W takiej
sytuacji będziemy zdani na łaskę admina obcej sieci w kwestii poufności odwiedzanych przez nas stron
www czy jakichkolwiek innych domen w internecie. Z doświadczenia wiem, by nie składać swojej
prywatności w czyjeś ręce i dlatego też postanowiłem poszukać sposobu na zaszyfrowanie zapytań DNS
bezpośrednio na smartfonie. Długo nie musiałem szukać, bo okazuje się, że &lt;a href=&#34;https://dnscrypt.org/#dnscrypt-android&#34;&gt;dnscrypt-proxy jest
dostępny również na Androida&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Jak przeprowadzić unroot na smartfonie Neffos C5 od TP-LINK</title>
      <link>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-c5-od-tp-link/</link>
      <pubDate>Thu, 20 Oct 2016 22:58:57 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/jak-przeprowadzic-unroot-na-smartfonie-neffos-c5-od-tp-link/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://morfikov.github.io
/post/android-root-smartfona-neffos-c5-od-tp-link/&#34;&gt;Proces root na smartfonie Neffos
C5&lt;/a&gt; od TP-LINK można
przeprowadzić w miarę bez większych problemów, choć nie jest to rozwiązanie działające OOTB.
Niemniej jednak, taki root telefonu czyni go bardziej podatnym na zagrożenia ze strony wrogich
aplikacji. Ponadto, kasując czy też zmieniając pliki systemowe, możemy sprawić, że nasze urządzenie
zwyczajnie przestanie nam działać, tj. już się nie uruchomi. Niektórzy użytkownicy smartfonów nie
zdają sobie z tego sprawy i ukorzeniają Androida bez głębszego zastanowienia się. Mi jako
linux&#39;iarzowi, root jest niezbędny do pracy ale czy aby na pewno każdy musi go mieć? Ci z was,
którzy taki root systemu przeprowadzili i nie korzystają z niego praktycznie wcale, zastanawiają
się pewnie czy istnieje sposób, by cofnąć wprowadzone zmiany i przywrócić Androida do stanu
pierwotnego. Krótka odpowiedź brzmi: &amp;quot;oczywiście, że tak&amp;quot; i temu procesowi przyjrzymy się w
niniejszym artykule.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: YouTube bez reklam na smartfonie (NewPipe)</title>
      <link>https://morfikov.github.io/post/android-youtube-bez-reklam-na-smartfonie-newpipe/</link>
      <pubDate>Thu, 20 Oct 2016 19:41:01 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-youtube-bez-reklam-na-smartfonie-newpipe/</guid>
      <description>&lt;p&gt;Ja generalnie zaliczam się do grona osób bardzo spokojnych ale tylko do czasu aż się zdenerwuję.
Jedną taką bardziej wyprowadzającą mnie z równowagi kwestią są reklamy w serwisie YouTube. Problem
jest o wiele bardziej dotkliwy, gdy w grę wchodzą urządzenia mobilne, np. smartfony. Na komputerze
nie mam większego problemu, bo wszystkie reklamy mogę zablokować stosując adblock/ublock w
przeglądarce lub też korzystać z aplikacji
&lt;a href=&#34;https://github.com/mps-youtube/mps-youtube&#34;&gt;mpsyt&lt;/a&gt;/&lt;a href=&#34;http://flavio.tordini.org/minitube&#34;&gt;minitube&lt;/a&gt;.
Gdy chcę wesprzeć kogoś, to odpalam kilka kanałów z reklamami, wyciszam dźwięk i mój linux ogląda za
mnie ten cały syf reklamowy, a ja go ani nie słyszę, ani nie widzę i wszyscy są happy. W przypadku
smartfonów oglądanie serwisu YT jest nieco problematyczne. Nie dość, że nie ma jak obejść tych
reklam, to jeszcze zwykle są one głośniejsze niż ścieżka dźwiękowa materiału video, co bardzo
wnerwia w godzinach nocnych. Przy szukaniu rozwiązania tego problemu natknąłem się na
&lt;a href=&#34;https://github.com/TeamNewPipe/NewPipe&#34;&gt;NewPipe&lt;/a&gt;. Jest to przeglądarkę YT z otwartym kodem
źródłowym (OpenSource), która działa podobnie do mpsyt/minitube i to ten programik zostanie
opisany w niniejszym artykule.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Brak możliwości zapisu danych na karcie SD w Neffos C5</title>
      <link>https://morfikov.github.io/post/android-brak-mozliwosci-zapisu-danych-na-karcie-sd-neffos-c5/</link>
      <pubDate>Fri, 14 Oct 2016 20:56:20 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-brak-mozliwosci-zapisu-danych-na-karcie-sd-neffos-c5/</guid>
      <description>&lt;p&gt;Może i obecne smartfony dają nam w standardzie sporo wolnego miejsca na swoim flash&#39;u ale dla
niektórych to ciągle za mało. Nie ważne ile tej pamięci będziemy mieć dostępnej, to i tak zawsze
będzie nam jej brakować. Mój &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;Neffos C5&lt;/a&gt; ma na pokładzie
16 GiB flash, z czego około 10 GiB jest udostępnione użytkownikowi. Mi by się przydał flash 64 GiB.
Jako, że ten telefon obsługuje karty SDHC, max 32 GiB, to postanowiłem dokupić tego typu kartę i
zamontować ją w smartfonie. Problem pojawił się w momencie próby przeniesienia danych aplikacji z
pamięci wewnętrznej na pamięć zewnętrzną jaką jest karta SD. Chodzi na przykład o zapisywanie zdjęć
czy filmów z kamery bezpośrednio na karcie SD. Okazuje się jednak, że&lt;a href=&#34;https://developer.android.com/about/versions/android-4.4.html&#34;&gt;Android począwszy od
wersji 4.4&lt;/a&gt; zablokował możliwość
umieszczania danych aplikacji na karatach SD. Czy słusznie i czy istnieje jakiś sposób by wybrnąć z
tej sytuacji?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Repozytorium aplikacji OpenSource (F-Droid)</title>
      <link>https://morfikov.github.io/post/android-repozytorium-aplikacji-opensource-f-droid/</link>
      <pubDate>Tue, 11 Oct 2016 20:47:13 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-repozytorium-aplikacji-opensource-f-droid/</guid>
      <description>&lt;p&gt;Przeszukując sklep Google Play za nowymi aplikacjami, które mógłbym wgrać na swojego &lt;a href=&#34;https://morfikov.github.io
/post/recenzja-smartfon-neffos-c5-od-tp-link/&#34;&gt;Neffos&#39;a
C5&lt;/a&gt;, zawsze staram się zwracać uwagę
co tak naprawdę zamierzam zainstalować. Nie chodzi tutaj tylko o poleconą mi przez kogoś aplikację,
a konkretnie jej nazwę, bo te mogą być przecież bardzo podobne i łatwo zainstalować nie tego app&#39;ka,
którego powinniśmy. Android jest prawie jak windows, no może z tą różnicą, że jest udostępniany na
wolnych licencjach. Z racji swojej popularności musi być bardzo prosty w obsłudze, by nie generować
żadnych błędów i problemów wśród korzystających z niego użytkowników. Z doświadczenia wiem, że
prostota obsługi nie zawsze idzie w parze z bezpieczeństwem, a gdy mamy przed sobą tak popularny
system operacyjny jak Android, to już tylko krok dzieli nas od kompromitacji systemu przez wgranie
jakiejś trefnej aplikacji ze sklepu Google. Nie znam tych wszystkich programików, które są w nim
dostępne ale można zrobić lekki przesiew instalując jedynie aplikacje OpenSource. Przeszukiwanie
Google Play pod tym kątem nie jest zbyt wygodne, dlatego też ktoś postanowił uruchomić &lt;a href=&#34;https://f-droid.org/&#34;&gt;projekt
F-Droid&lt;/a&gt; zrzeszający wolne aplikacje, które możemy wgrać na swój telefon bez
większego problemu. Ten wpis będzie poświęcony właśnie aplikacji F-Droid.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Root smartfona Neffos C5 od TP-LINK</title>
      <link>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-od-tp-link/</link>
      <pubDate>Sun, 09 Oct 2016 18:08:36 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-od-tp-link/</guid>
      <description>&lt;p&gt;Smartfony mają to do siebie, że ogromna większość z nich pracuje pod kontrolą systemu linux, a
konkretnie jest to jakiś Android. Tak też jest w przypadku &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;Neffos&#39;a
C5&lt;/a&gt; od TP-LINK, gdzie mamy zainstalowaną wersję 5.1
(Lollipop). My linux&#39;iarze chcemy mieć pełny dostęp do systemu operacyjnego, by bez większych
przeszkód móc zarządzać urządzeniem, które pod jego kontrolą pracuje. Problem w tym, że ten Neffos
C5 nie ma w standardzie root&#39;a i nie mamy administracyjnego dostępu do całego systemu plików
telefonu. Jest kilka metod root&#39;owania smartfona, np. za pomocą Kingoroot/Kingroot ale nie działają
one w przypadku tego telefonu (i całe szczęście). W tym artykule zostanie pokazany sposób na root
systemu Neffos&#39;a C5 przy zachowaniu wszelkich norm bezpieczeństwa, które w sytuacjach podbramkowych
pomogą nam odzyskać kontrolę nad telefonem.&lt;/p&gt;
&lt;p&gt;Prostszy sposób na przeprowadzanie procesu root w smartfonach Neffos od TP-LINK z wykorzystaniem
natywnych obrazów TWRP &lt;a href=&#34;https://morfikov.github.io
/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/&#34;&gt;został opisany w nowym wątku&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Jak zainstalować ADB i fastboot pod linux</title>
      <link>https://morfikov.github.io/post/android-jak-zainstalowac-adb-i-fastboot-pod-linux/</link>
      <pubDate>Sat, 08 Oct 2016 20:34:36 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-jak-zainstalowac-adb-i-fastboot-pod-linux/</guid>
      <description>&lt;p&gt;Bawiąc się &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;smartfonem Neffos C5&lt;/a&gt; od TP-LINK chciałem
sprawdzić czy da radę zainstalowanemu na nim Androidowi 5.1 (Lollipop) zrobić root&#39;a. Chodzi o
uzyskanie dostępu administracyjnego do systemu plików na flash&#39;u telefonu. Proces się powiódł, z
tym, że by do niego przystąpić, potrzebne są narzędzia takie jak &lt;code&gt;adb&lt;/code&gt; i &lt;code&gt;fastboot&lt;/code&gt; , bo przy ich
pomocy możemy sterować telefonem, np. z poziomu jakiegoś linux&#39;a. Niemniej jednak, system komputera
jak i smartfona trzeba pierw przygotować odpowiednio, by taka komunikacja była możliwa i ten proces
zostanie właśnie opisany poniżej.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Reset ustawień do fabrycznych (factory defaults)</title>
      <link>https://morfikov.github.io/post/android-reset-ustawien-do-fabrycznych-factory-defaults/</link>
      <pubDate>Tue, 04 Oct 2016 20:39:20 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-reset-ustawien-do-fabrycznych-factory-defaults/</guid>
      <description>&lt;p&gt;Android zadomowił się w większości smartfonów. Jest to mniej więcej taki sam system operacyjny, co w
przypadku stacjonarnych komputerów czy laptopów. W obu przypadkach instalujemy i konfigurujemy różne
rzeczy, tak by ten system oraz jego aplikacje były dostosowane do naszych potrzeb w sposób
optymalny. Niemniej jednak, każdy system wymaga odpowiedniego traktowania i mam na myśli tutaj
regularne czyszczenie go ze zbędnych aplikacji czy plików, które nie są nam już do niczego
potrzebne. W przypadku desktopowych systemów zwykliśmy wgrywać je na nowo za pomocą płytki CD/DVD
czy też pendrive live. Ten proces z reguły jest szybki i w miarę bezproblemowy. Później trzeba tylko
trochę czasu poświęcić, by ten świeży system skonfigurować. A jak sprawa wygląda w przypadku
smartfona z Androidem? Nie mamy jak za bardzo wgrać świeżego systemu, no i na dobrą sprawę nie
musimy. Zamiast tego, możemy przywrócić ustawienia do fabrycznych (factory reset). W tym artykule
postaramy się obadać proces resetu ustawień telefonu na przykładzie &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;smartfona Neffos
C5&lt;/a&gt; od TP-LINK z Androidem 5.1 (Lollipop).&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
