<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>twrp on Morfitronik</title>
    <link>https://morfikov.github.io/tags/twrp/</link>
    <description>Recent content in twrp on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Sat, 02 Feb 2019 06:33:44 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/twrp/feed.xml" rel="self" type="application/rss" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Większy stopień kompresii pliku recovery.img (TWRP)</title>
      <link>https://morfikov.github.io/post/wiekszy-stopien-kompresii-pliku-recovery-img-twrp/</link>
      <pubDate>Sat, 02 Feb 2019 06:33:44 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wiekszy-stopien-kompresii-pliku-recovery-img-twrp/</guid>
      <description>&lt;p&gt;Ostatnio próbowałem zaktualizować obraz TWRP recovery dla jednego z moich telefonów. Ja generalnie
buduje te obrazy ze źródeł OMNI ROM, a tam jest dostępnych szereg gałęzi, np. 6.0, 7.1, 8.1 , etc,
które naturalnie pasują do odpowiadających im wersji Androida. Do tej pory budowałem w oparciu o
gałąź 7.1 ale po wydaniu polecenia &lt;code&gt;repo sync&lt;/code&gt; , szereg aktualizacji w stosunku do repozytorium
&lt;code&gt;bootable/recovery&lt;/code&gt; zostało pobranych, w tym też i jedna trefna, która uwalała proces kompilacji.
Ostatecznie &lt;a href=&#34;https://gerrit.omnirom.org/#/c/android_bootable_recovery/+/33485/&#34;&gt;udało się problem namierzyć i zlikwidować&lt;/a&gt;
ale w międzyczasie próbowałem zbudować obraz TWRP recovery z gałęzi 8.1. Wygląda na to, że im
nowszy Android, tym obrazy recovery rosną w objętość i 16M, które u mnie jest limitem, zostało
przekroczone o jakieś 500K i to przy najbardziej okrojonej funkcjonalności trybu recovery. Czy
istnieje jakieś rozwiązanie, które by umożliwiło zmniejszenie rozmiaru obrazu
&lt;code&gt;ramdisk-recovery.img&lt;/code&gt; , co przełożyłoby się również na wagę pliku &lt;code&gt;recovery.img&lt;/code&gt; ? Tak, trzeba
tylko zmienić rodzaj kompresji z domyślnego &lt;code&gt;gzip&lt;/code&gt; na &lt;code&gt;lzma&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Root w smartfonach Neffos od TP-LINK (X1, C5, C5 MAX, Y5, Y5L)</title>
      <link>https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/</link>
      <pubDate>Sun, 02 Apr 2017 19:27:56 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/</guid>
      <description>&lt;p&gt;Jakiś czas temu opisywałem proces ukorzeniania (root) smartfonów Neffos, a konkretnie były to modele
&lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;C5&lt;/a&gt;, &lt;a href=&#34;http://www.neffos.pl/product/details/C5-Max&#34;&gt;C5
MAX&lt;/a&gt;, &lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;Y5&lt;/a&gt; i
&lt;a href=&#34;http://www.neffos.pl/product/details/Y5L&#34;&gt;Y5L&lt;/a&gt;. Od tamtego czasu zdążyłem się nieco bardziej
zagłębić w struktury Androida i udało mi się ze źródeł &lt;a href=&#34;https://omnirom.org/&#34;&gt;OMNI ROM&lt;/a&gt; zbudować
natwyne obrazy TWRP dla każdego z tych ww. telefonów. Oczywiście TP-LINK ma w swojej ofercie jeszcze
modele &lt;a href=&#34;http://www.neffos.pl/product/details/C5L&#34;&gt;C5L&lt;/a&gt;,
&lt;a href=&#34;http://www.neffos.com/en/product/details/Y50&#34;&gt;Y50&lt;/a&gt;,
&lt;a href=&#34;http://www.neffos.com/en/product/details/X1&#34;&gt;X1&lt;/a&gt; oraz &lt;a href=&#34;http://www.neffos.com/en/product/details/X1Max&#34;&gt;X1
MAX&lt;/a&gt; ale póki co nie będę w stanie przygotować
obrazu TWRP i opisu jak ukorzenić Androidy w trzech z tych czterech smartfonów. Chodzi o to, że C5L
został wycofany z produkcji i raczej nie wpadnie on w moje łapki. Natomiast modele Y50 oraz X1 MAX
nie są jeszcze dostępne w polskiej ofercie TP-LINK&#39;a, przez co minie trochę czasu zanim uda mi się
do nich dobrać. Postanowiłem napisać świeży artykuł dotyczący procesu root w smartfonach Neffos C5,
C5 MAX, Y5, Y5L oraz X1. Po co pisać kolejny artykuł o ukorzenianiu Androida w Neffos&#39;ach?
Generalnie rzecz biorąc, w tych poprzednich wpisach było bardzo dużo informacji zbędnych z punktu
widzenia przeciętnego użytkownika, który chce zrootować system w swoim telefonie. Teraz, gdy
dysponuję natywnymi obrazami TWRP własnej roboty i zdobyłem nieco wiedzy z zakresu operowania na
Androidzie, to proces root jest o wiele prostszy i właśnie dlatego przydałoby się to wszystko opisać
na nowo.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Wgrywanie update.zip przez ADB sideload via TWRP recovery</title>
      <link>https://morfikov.github.io/post/android-wgrywanie-update-zip-przez-adb-sideload-via-twrp-recovery/</link>
      <pubDate>Thu, 09 Mar 2017 18:31:55 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-wgrywanie-update-zip-przez-adb-sideload-via-twrp-recovery/</guid>
      <description>&lt;p&gt;Po uszkodzeniu jednego z moich smartfonów TP-LINK i skasowaniu na nim wszystkich danych na partycji
&lt;code&gt;/system/&lt;/code&gt; trzeba było pomyśleć nad przywróceniem tego urządzenia do życia. Jednym z rozwiązać było
&lt;a href=&#34;https://morfikov.github.io
/post/android-jak-odratowac-smartfon-po-usunieciu-partycji-system/&#34;&gt;binarne wgranie obrazu systemowej partycji bezpośrednio na flash przy pomocy narzędzia
dd&lt;/a&gt;. Co jednak
w przypadku, gdy nie mamy dostępu do backup&#39;u lub tez zwyczajnie go nie zrobiliśmy? Co w takiej
sytuacji uczynić i czy jest jakaś nadzieja dla naszego telefonu? Odpowiedź jest naturalnie
twierdząca ale wymagane są dwie rzeczy: działający tryb recovery (najlepiej TWRP) ze wsparciem dla
trybu &amp;quot;ADB sideload&amp;quot; oraz paczka &lt;code&gt;update.zip&lt;/code&gt; z firmware, którą można pobrać bezpośrednio ze strony
TP-LINK/Neffos. By ulżyć nieco osobom, które do mnie piszą z zapytaniem o pomoc w przypadku
skasowania danych na partycji &lt;code&gt;/system/&lt;/code&gt; (czy uszkodzenia jej w jakiś sposób), postanowiłem napisać
krótkie howto na temat używania trybu ADB sideload. W tym artykule w rolach głównych weźmie udział
&lt;a href=&#34;http://www.neffos.pl/product/details/Y5&#34;&gt;Neffos Y5&lt;/a&gt; ale bez problemu można te kroki przeprowadzić
chyba na każdym innym smartfonie.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Jak odratować smartfon po usunięciu partycji /system/</title>
      <link>https://morfikov.github.io/post/android-jak-odratowac-smartfon-po-usunieciu-partycji-system/</link>
      <pubDate>Thu, 09 Mar 2017 14:24:44 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-jak-odratowac-smartfon-po-usunieciu-partycji-system/</guid>
      <description>&lt;p&gt;Zawsze mnie zastanawiało jak to jest możliwe, by przez przypadek można było usunąć dane na jeden z
kluczowych partycji w smartfonie jaką jest partycja &lt;code&gt;/system/&lt;/code&gt; . Ostatnio wiele osób do mnie pisało
z tego typu problemami i zapytaniem &amp;quot;jak odratować w takiej sytuacji telefon&amp;quot;. Odpowiedź wydawała mi
się prosta: wystarczy wgrać uprzednio zrobiony backup wyczyszczonej partycji via &lt;code&gt;fastboot&lt;/code&gt; .
Problem w tym, że po usunięciu danych z partycji &lt;code&gt;/system/&lt;/code&gt; , &lt;code&gt;fastboot&lt;/code&gt; nie działa. A skąd to wiem?
Ano &amp;quot;przez przypadek&amp;quot; usunąłem sobie dane na tej partycji. W sumie to tylko testowałem &lt;a href=&#34;https://twrp.me/faq/ADBSideload.html&#34;&gt;ficzer w
TWRP zwany ADB Sideload&lt;/a&gt;, który niby ma za zadanie wgrać ROM z
paczki &lt;code&gt;.zip&lt;/code&gt; . Coś poszło nie tak i w zasadzie zostałem z pustą partycją &lt;code&gt;/system/&lt;/code&gt; . Przy
odpalaniu telefonu w takim stanie, ten w zasadzie jedynie się resetuje co kilka chwil. Może i
&lt;code&gt;fastboot&lt;/code&gt; nie działa ale można wbić do trybu recovery. Jeśli tylko mamy wgrany TWRP, to jest spora
szansa na odratowanie smartfona. W tym artykule w rolach głównych wystąpi &lt;a href=&#34;http://www.neffos.pl/product/details/Y5L&#34;&gt;Neffos
Y5L&lt;/a&gt;, który ma SoC od Qualcomm&#39;a, zatem nie damy rady się
pobawić SP Flash Tool i całą robotę trzeba będzie odwalić ręcznie.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Budowanie obrazu TWRP recovery ze źródeł OMNI ROM</title>
      <link>https://morfikov.github.io/post/budowanie-obrazu-twrp-recovery-ze-zrodel-omni-rom/</link>
      <pubDate>Sun, 19 Feb 2017 21:06:04 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/budowanie-obrazu-twrp-recovery-ze-zrodel-omni-rom/</guid>
      <description>&lt;p&gt;Gdy zamierzamy zbudować sobie własny ROM na smartfon z Androidem, np.
&lt;a href=&#34;https://lineageos.org/&#34;&gt;LineageOS&lt;/a&gt; (CyanogenMod nie jest już rozwijany) czy nawet jedynie obraz
recovery (&lt;a href=&#34;https://twrp.me/&#34;&gt;TWRP&lt;/a&gt; albo &lt;a href=&#34;https://www.clockworkmod.com/&#34;&gt;CWM&lt;/a&gt;), to potrzebne nam jest
stosowne urządzenie oraz odpowiedni kod źródłowy. Skoro chcemy budować te ww. rzeczy, to
prawdopodobnie nasz telefon nie jest przez to oprogramowanie jeszcze wspierany lub też sam soft nie
jest regularnie aktualizowany przez dewelopera. W zasadzie zarówno pełne ROM&#39;y jak i obrazy recovery
są budowane ze źródeł Androida. Niemniej jednak, oficjalny kod dostarczany przez Google budzi czasem
wiele kontrowersji i ci nieco bardziej zaawansowani użytkownicy zmieniają go, np. czyniąc go w pełni
OpenSource czy też implementując w nim pewną niestandardową funkcjonalność. Tak powstają Custom
ROM&#39;y, które w późniejszym czasie z racji swojej popularności przestają być &amp;quot;Custom&amp;quot; i zaczynają żyć
swoim własnym życiem obok tego Góglowskiego Androida. W przypadku budowania obrazu recovery nie są
nam potrzebne całe źródła konkretnego ROM&#39;u. Jakby nie patrzeć, potrafią one zajmować trochę
miejsca, a poza tym proces ich budowania jest stosunkowo czasochłonny. Tak czy inaczej, jakieś
źródła trzeba pozyskać i przygotować je do dalszej pracy. W tym artykule nie będziemy sobie
jeszcze budować całego ROM&#39;u i skupimy się na zbudowaniu od podstaw jedynie obrazu TWRP recovery ze
źródeł &lt;a href=&#34;https://omnirom.org/&#34;&gt;OMNI ROM&lt;/a&gt;. Ten proces zostanie pokazany na przykładzie smartfona
Neffos Y5 od TP-LINK przy wykorzystaniu systemu linux, a konkretnie dystrybucji Debian.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Backup partycji /data/ w smartfonach przez recovery TWRP</title>
      <link>https://morfikov.github.io/post/backup-partycji-data-w-smartfonach-przez-recovery-twrp/</link>
      <pubDate>Sun, 15 Jan 2017 18:20:11 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/backup-partycji-data-w-smartfonach-przez-recovery-twrp/</guid>
      <description>&lt;p&gt;W artykułach dotyczących przeprowadzania procesu root na smartfonach Neffos
&lt;a href=&#34;https://morfikov.github.io
/post/android-root-smartfona-neffos-y5-od-tp-link/&#34;&gt;Y5&lt;/a&gt; oraz
&lt;a href=&#34;https://morfikov.github.io
/post/android-root-smartfona-neffos-y5l-tp-link/&#34;&gt;Y5L&lt;/a&gt; był pokazany sposób na
dokonanie backup&#39;u całego flash&#39;a tych urządzeń. Jeśli Android w naszym telefonie jest ukorzeniony
albo chociaż mamy wgrany obraz TWRP na partycję &lt;code&gt;/recovery/&lt;/code&gt; , to jesteśmy w stanie przeprowadzać
regularny backup wszystkich danych użytkownika z poziomu trybu recovery. Proces takiego backup&#39;u
będzie się nieco różnił w stosunku do tego opisywanego w wyżej podlinkowanych artykułach. W tym
przypadku nie będziemy robić kopii binarnej, a jedynie zgramy sobie wszystkie pliki znajdujące się
na partycji &lt;code&gt;/data/&lt;/code&gt; . W tym artykule zostanie pokazany sposób na przeprowadzanie procesu kopii
zapasowej w smartfonie Neffos Y5. Niemniej jednak, taki regularny backup można przeprowadzać
praktycznie w każdym smartfonie posiadającym recovery z TWRP.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Root smartfona Neffos C5 MAX od TP-LINK</title>
      <link>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-max-od-tp-link/</link>
      <pubDate>Tue, 13 Dec 2016 17:27:37 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-max-od-tp-link/</guid>
      <description>&lt;p&gt;Bawiąc się ostatnio &lt;a href=&#34;https://morfikov.github.io
/post/recenzja-smartfon-neffos-c5-max-od-tp-link/&#34;&gt;smartfonem Neffos C5
MAX&lt;/a&gt; od TP-LINK, obiecałem
sobie, że jak tylko będę miał chwilę czasu, to postaram się ukorzenić Androida, który w tym
telefonie siedzi (Lollipop). Generalnie rzecz biorąc, sposób root&#39;owania tego urządzenia jest bardzo
podobny do tego, który miałem już możliwość &lt;a href=&#34;https://morfikov.github.io
/post/android-root-smartfona-neffos-c5-od-tp-link/&#34;&gt;przeprowadzić na innym modelu TP-LINK&#39;a, tj. Neffos
C5&lt;/a&gt;. Dlatego też poniższy
artykuł jest bardzo zbliżony treścią, choć lekko zaktualizowany pod kątem Neffos&#39;a C5 MAX. Grunt, że
nie było żadnych problemów z przeprowadzeniem backup&#39;u flash&#39;a telefonu jak i samego procesu root.&lt;/p&gt;
&lt;p&gt;Prostszy sposób na przeprowadzanie procesu root w smartfonach Neffos od TP-LINK z wykorzystaniem
natywnych obrazów TWRP &lt;a href=&#34;https://morfikov.github.io
/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/&#34;&gt;został opisany w nowym wątku&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Android: Root smartfona Neffos C5 od TP-LINK</title>
      <link>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-od-tp-link/</link>
      <pubDate>Sun, 09 Oct 2016 18:08:36 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/android-root-smartfona-neffos-c5-od-tp-link/</guid>
      <description>&lt;p&gt;Smartfony mają to do siebie, że ogromna większość z nich pracuje pod kontrolą systemu linux, a
konkretnie jest to jakiś Android. Tak też jest w przypadku &lt;a href=&#34;http://www.neffos.pl/product/details/C5&#34;&gt;Neffos&#39;a
C5&lt;/a&gt; od TP-LINK, gdzie mamy zainstalowaną wersję 5.1
(Lollipop). My linux&#39;iarze chcemy mieć pełny dostęp do systemu operacyjnego, by bez większych
przeszkód móc zarządzać urządzeniem, które pod jego kontrolą pracuje. Problem w tym, że ten Neffos
C5 nie ma w standardzie root&#39;a i nie mamy administracyjnego dostępu do całego systemu plików
telefonu. Jest kilka metod root&#39;owania smartfona, np. za pomocą Kingoroot/Kingroot ale nie działają
one w przypadku tego telefonu (i całe szczęście). W tym artykule zostanie pokazany sposób na root
systemu Neffos&#39;a C5 przy zachowaniu wszelkich norm bezpieczeństwa, które w sytuacjach podbramkowych
pomogą nam odzyskać kontrolę nad telefonem.&lt;/p&gt;
&lt;p&gt;Prostszy sposób na przeprowadzanie procesu root w smartfonach Neffos od TP-LINK z wykorzystaniem
natywnych obrazów TWRP &lt;a href=&#34;https://morfikov.github.io
/post/root-w-smartfonach-neffos-od-tp-link-x1-c5-c5-max-y5-y5l/&#34;&gt;został opisany w nowym wątku&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
