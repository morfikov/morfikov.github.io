<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terminal on Morfitronik</title>
    <link>https://morfikov.github.io/tags/terminal/</link>
    <description>Recent content in terminal on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Wed, 03 Aug 2016 13:41:52 +0000</lastBuildDate>
    
	<atom:link href="https://morfikov.github.io/tags/terminal/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>packet_write_wait: Connection to IP port 22: Broken pipe</title>
      <link>https://morfikov.github.io/post/packet_write_wait-connection-to-ip-port-22-broken-pipe/</link>
      <pubDate>Wed, 03 Aug 2016 13:41:52 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/packet_write_wait-connection-to-ip-port-22-broken-pipe/</guid>
      <description>&lt;p&gt;Operowanie na VPS nie jest jakoś specjalnie trudne, zwłaszcza w przypadku, gdy mamy dostęp root i
możemy logować się na serwer z wykorzystaniem protokołu SSH. Dalej to już zwykła linux&#39;owa
mechanika, która może być nieco inna, w zależności od tego, jaki dokładnie system operacyjny na tym
VPS stoi. Czasami jednak, w pewnym momencie podczas połączenia możemy zostać rozłączeni z
niewiadomych nam przyczyn. Niemniej jednak, zawsze, gdy ten problem występuje, w terminalu można
zobaczyć komunikat: &lt;code&gt;packet_write_wait: Connection to 1.2.3.4 port 22: Broken pipe&lt;/code&gt; . Przydałoby się
zatem coś na ten stan rzeczy poradzić.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FZF (fuzzy finder) dla tmux&#39;a</title>
      <link>https://morfikov.github.io/post/fzf-fuzzy-finder-dla-tmuxa/</link>
      <pubDate>Mon, 06 Jun 2016 10:47:58 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/fzf-fuzzy-finder-dla-tmuxa/</guid>
      <description>&lt;p&gt;Jakiś czas temu pisałem o &lt;a href=&#34;https://morfikov.github.io
/post/implementacja-multipleksera-tmux/&#34;&gt;implementacji tmux&#39;a na
debianie&lt;/a&gt;. Dla tych, którzy nie za bardzo
wiedzą &lt;a href=&#34;https://tmux.github.io/&#34;&gt;czym tmux jest&lt;/a&gt;, to wyjaśniam, że jest to narzędzie, które min.
potrafi dzielić okno terminala na kilka mniejszych okienek. W ten sposób możemy korzystać ze swojego
ulubionego terminala i cieszyć się funkcjonalnością znaną choćby z terminatora. Ta umiejętność
dzielenia okien w tmux idealnie współgra z &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;FZF (fuzzy finder)&lt;/a&gt;.
Jest to narzędzie, które pomaga min. przeszukiwać historię poleceń shell&#39;a. BASH czy ZSH są, jakby
nie patrzeć, dość ograniczone pod tym względem. Może i ZSH nieco lepiej radzi sobie z odnajdywaniem
poleceń w historii od BASH ale i tak jego umiejętności pozostają daleko w tyle za FZF. Dlatego też w
tym artykule spróbujemy sobie zainstalować ten cały &amp;quot;fuzzy finder&amp;quot;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementacja multipleksera tmux</title>
      <link>https://morfikov.github.io/post/implementacja-multipleksera-tmux/</link>
      <pubDate>Sat, 30 Jan 2016 03:30:12 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/implementacja-multipleksera-tmux/</guid>
      <description>&lt;p&gt;Wszystko zaczęło się od pewnego posta na &lt;a href=&#34;https://forum.dug.net.pl/&#34;&gt;forum DUGa&lt;/a&gt;, w którym to jeden
użytkownik polecał innemu, aby ten zainteresował się programem o nazwie &lt;code&gt;tmux&lt;/code&gt; . Nie wiem czy tamta
osoba to zrobiła ale ja postanowiłem się przyjrzeć temu wynalazkowi zwanemu &lt;a href=&#34;https://en.wikipedia.org/wiki/Terminal_multiplexer&#34;&gt;terminal
multiplekser&lt;/a&gt;. Po niezbyt wnikliwym przejrzeniu
&lt;a href=&#34;https://tmux.github.io/&#34;&gt;strony projektu&lt;/a&gt; rzuciło mi się w oczy dzielenie okna jednego terminala na
szereg mniejszych. Ten ficzer znany był mi min. z &lt;a href=&#34;https://gnometerminator.blogspot.fr/p/introduction.html&#34;&gt;terminala
terminator&lt;/a&gt;. Zasadniczą różnicą tych dwóch
aplikacji jest to, że &lt;code&gt;tmux&lt;/code&gt; może być uruchomiony również pod TTY, efektywnie dzieląc obszar jednej
konsoli. Nie to bym ciągle siedział w trybie tekstowym ale skoro &lt;code&gt;tmux&lt;/code&gt; potrafi to samo co
&lt;code&gt;terminator&lt;/code&gt; oraz działa zarówno w trybie graficznym jak i tekstowym przy zaznaczeniu, że zjada
także mniej pamięci RAM, to czemu nie zaimplementować sobie jego obsługi? W trakcie użytkowania
tmux&#39;a okazało, że potrafi on sporo więcej i dlatego właśnie powstał ten wpis.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Konfiguracja terminala urxvt</title>
      <link>https://morfikov.github.io/post/konfiguracja-terminala-urxvt/</link>
      <pubDate>Sat, 23 Jan 2016 19:13:22 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/konfiguracja-terminala-urxvt/</guid>
      <description>&lt;p&gt;Na rynku oprogramowania linux&#39;owego mamy całą gamę różnego rodzaju pseudo terminali, które na dobrą
sprawę robią za konsolę w środowiskach graficznych. Jako, że takie środowiska rozrosły się dość
mocno ostatnimi czasy, to instalacja niektórych terminali może pociągać za sobą wiele zależności. To
z kolei przyczynia się do wgrania zbędnego oprogramowania. Inną kwestią są zasoby systemowe, bo
niektóre z terminali potrafią zjeść naprawdę sporo pamięci operacyjnej. Są oczywiście lżejsze
alternatywy i w tym wpisie omówimy sobie konfigurację terminala urxvt.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Osadzanie urxvt na pulpicie przy pomocy openbox&#39;a</title>
      <link>https://morfikov.github.io/post/osadzanie-urxvt-na-pulpicie-przy-pomocy-openboxa/</link>
      <pubDate>Mon, 09 Nov 2015 21:27:51 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/osadzanie-urxvt-na-pulpicie-przy-pomocy-openboxa/</guid>
      <description>&lt;p&gt;Wszyscy wiemy, że ogromna rzesza ludzi nie patrzy w logi systemowe. Nawet jeśli części z nas zdarza
się to raz na jakiś czas, to zwykle nie wtedy, gdy coś złego się dzieje z naszym systemem. W
przypadku jakichkolwiek problemów, mamy spore prawdopodobieństwo, że szereg zdarzeń może zostać
zalogowanych w dzienniku systemowym. Dlaczego zatem nie osadzić jakiegoś terminala na pulpicie, w
którym będą zbierane logi w czasie rzeczywistym? W takim przypadku co kilka (czy kilkanaście) minut
będziemy w stanie podejrzeć wszystkie komunikaty jakie zostały zalogowane przez system. W tym wpisie
postaramy się osadzić na pulpicie terminal urxvt i posłużymy się w tym celu menadżerem okien openbox
.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>