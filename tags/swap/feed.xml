<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swap on Morfitronik</title>
    <link>https://morfikov.github.io/tags/swap/</link>
    <description>Recent content in Swap on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Wed, 10 Jan 2024 20:05:00 +0100</lastBuildDate><atom:link href="https://morfikov.github.io/tags/swap/feed.xml" rel="self" type="application/rss+xml" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Przestrzeń wymiany SWAP tylko na potrzebny hibernacji w Debian linux</title>
      <link>https://morfikov.github.io/post/przestrzen-wymiany-swap-tylko-na-potrzebny-hibernacji-w-debian-linux/</link>
      <pubDate>Wed, 10 Jan 2024 20:05:00 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/przestrzen-wymiany-swap-tylko-na-potrzebny-hibernacji-w-debian-linux/</guid>
      <description>&lt;p&gt;W obecnych czasach, rola przestrzeni wymiany w zasadzie ograniczyła się z grubsza do umożliwienia
nam przeprowadzenia procesu hibernacji. Inne aspekty pracy systemu, w których SWAP brał udział
zostały albo zepchnięte na margines (bardzo stare maszyny z niewielką ilością RAM), albo zupełnie
wyeliminowane za sprawą nowszych technologi lub/i posiadania większej ilości pamięci operacyjnej w
takich systemach. Obecnie domowy komputer z 32 GiB pamięci RAM to nic niezwykłego i przestrzeń
wymiany na takich maszynach nie jest już nam w zasadzie do niczego potrzebna, bo raczej jest mało
prawdopodobne, że nam tej pamięci zabraknie przy codziennym użytkowaniu naszego linux&#39;a. Niemniej
jednak, hibernacja systemu jest czymś pozytywnym z perspektywy użytkownika, bo umożliwia mu
zapisanie stanu pracy przed wyłączeniem komputera i odtworzenie tego stanu po ponownym uruchomieniu
systemu. Jeśli chcielibyśmy się cieszyć urokami hibernacji, to bez konfiguracji SWAP&#39;a się nie
obejdzie. Problem jednak zaczyna się, gdy mamy dysk SSD i taka przestrzeń wymiany zostanie na nim
skonfigurowana. Chodzi generalnie o pewne aplikacje, które są w stanie generować bardzo dużo cache
w pamięci operacyjnej, czego efektem będzie przenoszenie danych z RAM do SWAP, a to może bardzo
szybko wykończyć taki nośnik flash. Dlatego też przydałoby się nieco zabezpieczyć przestrzeń
wymiany przed tego typu sytuacjami, tak by można było jej używać jedynie w przypadku hibernacji.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Czy w linux plik SWAP jest lepszy niż partycja wymiany</title>
      <link>https://morfikov.github.io/post/czy-w-linux-plik-swap-jest-lepszy-niz-partycja-wymiany/</link>
      <pubDate>Fri, 22 Mar 2019 16:23:42 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/czy-w-linux-plik-swap-jest-lepszy-niz-partycja-wymiany/</guid>
      <description>&lt;p&gt;Ostatnimi czasy, z racji rozwoju technologicznego, mamy do dyspozycji coraz to szybsze komputery,
co przekłada się w znacznym stopniu na prędkość wykonywania operacji przez ich systemy operacyjne.
Obecnie przeciętnej klasy desktop czy laptop jest już wyposażony w 16G czy nawet 32G pamięci
operacyjnej (w niedługim czasie
nawet &lt;a href=&#34;https://android.com.pl/news/200097-samsung-12-gb-ram-lpddr4x/&#34;&gt;smartfony będą posiadać 12G RAM&lt;/a&gt;).
Spada zatem zapotrzebowanie wykorzystania dysku twardego jako pamięci RAM. W linux używanie
dysku twardego jako rozszerzenie pamięci operacyjnej było i jest w dalszym ciągu realizowane za
sprawą przestrzeni wymiany SWAP. Ta przestrzeń wymiany może być zaimplementowana w postaci osobnej
partycji dysku twardego albo też jako plik umieszczony w obrębie systemu plików, np. ext4. Część
dystrybucji linux&#39;a decyduję się na porzucenie partycji wymiany na rzecz pliku SWAP. Czy taki krok
jest uzasadniony i czy korzystając aktualnie z partycji wymiany powinniśmy zmigrować na plik SWAP?&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Przenoszenie danych ze ZRAM do RAM na smartfonie z Androidem</title>
      <link>https://morfikov.github.io/post/przenoszenie-danych-ze-zram-do-ram-na-smartfonie-z-androidem/</link>
      <pubDate>Mon, 02 Jan 2017 17:19:47 +0100</pubDate>
      
      <guid>https://morfikov.github.io/post/przenoszenie-danych-ze-zram-do-ram-na-smartfonie-z-androidem/</guid>
      <description>&lt;p&gt;Jak często zdarza się wam uruchamiać ponownie telefon czy smartfon? Raczej nikt z nas nie robi tego
zbyt często, tak jak ma to miejsce w przypadku desktopów, laptopów i innych tego typu standardowych
komputerów. System w smartfonie zwykle działa bez resetowania wiele tygodni czy nawet miesięcy, bo
niewiele rzeczy instalujemy, no i praktycznie nic nie aktualizujemy. Dlatego też nie ma potrzeby
uruchamiać ponownie Androida. Niemniej jednak są pewne przypadki, w których taki system jest w
stanie zachowywać się bardzo dziwnie i restart smartfona zwykle poprawia zaistniałe problemy. Chodzi
generalnie o utylizowanie baterii w większym stopniu, czy o ogólne uczucie spowolnienia pracy
systemu. Przyczyn takiego stanu rzeczy może być cała masa ale w tym konkretnym przypadku znaczenie
zdaje się mieć zbyt duże wykorzystanie pamięci RAM. W efekcie Android robi użytek z &lt;a href=&#34;https://www.kernel.org/doc/Documentation/blockdev/zram.txt&#34;&gt;urządzenia
ZRAM&lt;/a&gt;, które jest niczym innym jak tylko skompresowanym wycinkiem pamięci operacyjnej, gdzie
system stara się upchnąć dane w przypadku kończenia się zasobów pamięci, a kompresja to przecież
bardzo zasobożerny proces. Możemy taki telefon wyłączać co jakiś czas ale istnieje prostsza metoda
wyeliminowania problemu.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Zaszyfrowana przestrzeń wymiany SWAP</title>
      <link>https://morfikov.github.io/post/zaszyfrowana-przestrzen-wymiany-swap/</link>
      <pubDate>Mon, 19 Oct 2015 22:32:41 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/zaszyfrowana-przestrzen-wymiany-swap/</guid>
      <description>&lt;p&gt;Opisując mechanizm szyfrowania katalogu domowego przy pomocy &lt;a href=&#34;https://morfikov.github.io/post/szyfrowanie-katalogu-home-przy-pomocy-encfs/&#34;&gt;narzędzia
encfs&lt;/a&gt; , wspomniałem o
problemie jaki powstaje przy jednoczesnym braku szyfrowania przestrzeni wymiany SWAP. Oczywiście,
jeśli posiadamy w systemie dużą ilość pamięci RAM, to raczej nie potrzebna nam jest przestrzeń
wymiany. Podobnie sprawa ma się w przypadku, gdy nie korzystamy z hibernacji. Natomiast, jeśli jedna
z naszych partycji jest sformatowana jako SWAP i aktywnie z niej korzystamy, to niepełne szyfrowanie
dysku, jakie zapewnia &lt;code&gt;encfs&lt;/code&gt; może doprowadzić do skompromitowania zaszyfrowanych danych.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Przestrzeń wymiany SWAP jako plik</title>
      <link>https://morfikov.github.io/post/przestrzen-wymiany-swap-jako-plik/</link>
      <pubDate>Thu, 18 Jun 2015 22:11:45 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/przestrzen-wymiany-swap-jako-plik/</guid>
      <description>&lt;p&gt;Każdy system operacyjny musi być przygotowany na ewentualność wyczerpania się pamięci operacyjnej
RAM. W przypadku gdyby nie był, groziłoby mu powieszenie się. Są różne metody ochrony maszyn z
linuxami na pokładzie przed tego typu sytuacją. Jedne z nich zakładają wykorzystanie wbudowanych w
kernel mechanizmów takich jak choćby &lt;a href=&#34;https://pl.wikipedia.org/wiki/Brak_pami%C4%99ci&#34;&gt;oom-killer&lt;/a&gt;,
który ma za zadanie zabijać te najbardziej żarłoczne procesy. Są również bardziej łagodne sposoby na
uchronienie komputera przed zbyt szybkim wyczerpaniem się pamięci i w tym wpisie omówimy sobie
przestrzeń wymiany SWAP.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
