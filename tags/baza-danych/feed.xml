<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>baza-danych on Morfitronik</title>
    <link>https://morfikov.github.io/tags/baza-danych/</link>
    <description>Recent content in baza-danych on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Wed, 20 Jul 2016 20:15:44 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/baza-danych/feed.xml" rel="self" type="application/rss" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>WordPress: Kilku użytkowników bazy danych</title>
      <link>https://morfikov.github.io/post/wordpress-kilku-uzytkownikow-bazy-danych/</link>
      <pubDate>Wed, 20 Jul 2016 20:15:44 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wordpress-kilku-uzytkownikow-bazy-danych/</guid>
      <description>&lt;p&gt;Za wysokie uprawnienia zawsze prowadzą do problemów, zwłaszcza, gdy w grę wchodzą komputery i
serwisy www. Wszyscy wiemy, że WordPress nie należy do bezpiecznych rozwiązań, mimo, że cała masa
stron na necie opiera się właśnie o tego CMS&#39;a. Można jednak wypracować sobie bezpieczny setup, pod
warunkiem, że będziemy się zawsze kierować jedna prostą zasadą. Mianowicie chodzi o ograniczenie
uprawnień. Standardowo WordPress ma zdefiniowanego jednego użytkownika w pliku &lt;code&gt;wp-config.php&lt;/code&gt; ,
którym skrypt się posługuje. Zwykle też ten użytkownik ma wszystkie możliwe prawa do wszystkich
tabel w bazie danych naszego bloga czy serwisu. Nie musi tak być, a my możemy wykorzystać kilku
użytkowników i nadać im inne uprawnienia w zależności od tego jakie operacje na bazie danych będą
oni przeprowadzać. W tym wpisie zobaczymy jak zaprzęgnąć wielu użytkowników do pracy z bazą danych
Wordpress&#39;a.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Baza danych pozwoleń w Firefox&#39;ie (permissions.sqlite)</title>
      <link>https://morfikov.github.io/post/baza-danych-pozwolen-firefox-permissions-sqlite/</link>
      <pubDate>Sun, 17 Jul 2016 21:43:14 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/baza-danych-pozwolen-firefox-permissions-sqlite/</guid>
      <description>&lt;p&gt;Praktycznie każda przeglądarka, w tym też i Firefox, oferuje możliwość nadania określonym domenom
praw dostępu do zasobów systemowych. Chodzi generalnie o wykorzystywanie wtyczek, np. flash, które
są aktywowane na danej stronie internetowej jeśli ta ich potrzebuje. Po części też sprawa dotyczy
korzystania z urządzeń takich jak wbudowane w laptop kamera i mikrofon oraz szeregu dodatkowych
rzeczy, np. ciasteczka, pop-up&#39;y i inne takie. Obecnie Firefox standardowo blokuje dostęp do
pluginów, a gdy zachodzi potrzeba skorzystania z któregoś z nich, to zostaje nam zaprezentowane
okienko, w którym możemy zdecydować co zrobić. Gdy często odwiedzamy daną witrynę, to naturalnie
prosimy naszą przeglądarkę, by ta zapisała ustawienia dla tej strony. Firefox robi to przez dodanie
wyjątku w pliku &lt;code&gt;permissions.sqlite&lt;/code&gt; . W sporej części przypadków będziemy mogli cofnąć pozwolenia w
dość prosty sposób. Niemniej jednak, nie we wszystkich z nich da się to tak łatwo zrobić.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Baza danych użytkowników serwera freeradius</title>
      <link>https://morfikov.github.io/post/baza-danych-uzytkownikow-serwera-freeradius/</link>
      <pubDate>Tue, 13 Oct 2015 19:31:05 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/baza-danych-uzytkownikow-serwera-freeradius/</guid>
      <description>&lt;p&gt;Poprzedni wpis był o sieciach bezprzewodowych, a konkretnie dotyczył on &lt;a href=&#34;https://morfikov.github.io
/post/wpa2-enterprise-serwer-freeradius/&#34;&gt;konfiguracji protokołu WPA
Enterprise w oparciu o serwer
freeradius&lt;/a&gt;. Ten post będzie w podobnym
klimacie, z tym, że skupimy się tutaj na nieco innym podejściu to kwestii użytkowników, którzy mogą
się łączyć do sieci WiFi. Ich konfiguracja nie zostanie praktycznie w żaden sposób ruszona, no może
za wyjątkiem &lt;a href=&#34;http://wiki.freeradius.org/guide/SQL-HOWTO&#34;&gt;przeniesienia jej do bazy danych MySQL&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>WordPress: Ograniczone prawa dostępu</title>
      <link>https://morfikov.github.io/post/wordpress-ograniczone-prawa-dostepu/</link>
      <pubDate>Sat, 06 Jun 2015 11:41:24 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wordpress-ograniczone-prawa-dostepu/</guid>
      <description>&lt;p&gt;Mając już zainstalowanego i wstępnie skonfigurowanego WordPress&#39;a, przydałoby się zadbać &lt;a href=&#34;https://codex.wordpress.org/Changing_File_Permissions&#34;&gt;prawa
dostępu do jego plików&lt;/a&gt; jak i również
ograniczyć nieco dostęp do samej bazy danych, tak by możliwie najmniejsze uprawnienia zostały
nadane, co poprawi znacznie bezpieczeństwo naszej witryny. Jeśli opanowaliśmy już operowanie na
instalacji WordPress&#39;a przy pomocy
&lt;a href=&#34;https://morfikov.github.io
/post/wordpress-wiersz-polecen-wp-cli/&#34;&gt;skryptu&lt;/a&gt;
&lt;a href=&#34;https://morfikov.github.io
/post/wordpress-instalacja-przy-pomocy-wp-cli/&#34;&gt;wp-cli&lt;/a&gt; , to możemy bez wahania
dokręcić śrubę naszemu serwisowi. Jeśli nie zaznajomiliśmy się jeszcze z powyższym narzędziem, to
ograniczenie praw może spowodować problemy z aktualizacją rdzennych plików WordPress&#39;a, jak i
instalacją/konfiguracją jego pluginów czy motywów.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>WordPress: Jak zmienić prefiks bazy danych</title>
      <link>https://morfikov.github.io/post/wordpress-jak-zmienic-prefiks-bazy-danych/</link>
      <pubDate>Mon, 25 May 2015 20:02:36 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/wordpress-jak-zmienic-prefiks-bazy-danych/</guid>
      <description>&lt;p&gt;Każda instalacja tych popularniejszych (i wszystkich pozostałych) CMS&#39;ów powinna być w miarę
niepowtarzalna, by utrudnić automatyzację ataków. Blog WordPress&#39;a opiera się o bazę danych. Mamy
tam kilka tabel, z których każda jest poprzedzona pewnym prefiksem. Czy zmiana tego prefiksu &lt;code&gt;wp_&lt;/code&gt;
na jakiś losowo wybrany przez nas ma jakiś sens? Czy ochroni nas to przed jakimiś formami ataku? W
tym wpisie postaramy się prześledzić proces zmiany prefiksu do tabel w bazie danych.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
