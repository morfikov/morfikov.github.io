<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>openssl on Morfitronik</title>
    <link>https://morfikov.github.io/tags/openssl/</link>
    <description>Recent content in openssl on Morfitronik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Thu, 08 Oct 2015 14:29:34 +0000</lastBuildDate><atom:link href="https://morfikov.github.io/tags/openssl/feed.xml" rel="self" type="application/rss" />
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Generowanie certyfikatów przy pomocy easy-rsa</title>
      <link>https://morfikov.github.io/post/generowanie-certyfikatow-przy-pomocy-easy-rsa/</link>
      <pubDate>Thu, 08 Oct 2015 14:29:34 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/generowanie-certyfikatow-przy-pomocy-easy-rsa/</guid>
      <description>&lt;p&gt;Jakiś czas temu przedstawiłem &lt;a href=&#34;https://morfikov.github.io/post/generowanie-certyfikatow/&#34;&gt;manualny sposób na generowanie
certyfikatów&lt;/a&gt;, które można z powodzeniem
wykorzystać przy ssl, openvpn czy freeradius. Nie było tego znowu aż tak dużo ale jakby nie patrzeć
trochę parametrów trzeba znać, a najlepiej mieć przygotowane odpowiednie linijki, by sam proces
generowania certyfikatów przebiegł dość sprawnie. Jednak wychodzi na to, że nie trzeba się znowu aż
tak wysilać, bo istnieją dedykowane narzędzia, które wygenerują nam wszystkie potrzebne pliki. Mowa
o &lt;code&gt;easy-rsa&lt;/code&gt; i to niego będzie dotyczył ten wpis.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Zaszyfrowane logi w rsyslog i syslog-ng</title>
      <link>https://morfikov.github.io/post/zaszyfrowane-logi-w-rsyslog-i-syslog-ng/</link>
      <pubDate>Thu, 08 Oct 2015 13:53:38 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/zaszyfrowane-logi-w-rsyslog-i-syslog-ng/</guid>
      <description>&lt;p&gt;Jakiś czas temu, na forum DUG&#39;a wyczytałem coś o przesyłaniu logów systemowych przez sieć. W sumie,
to nigdy mi to do głowy nie przyszło ale jeśli by się nad tym głębiej zastanowić, tego typu
mechanizm może okazać się całkiem użyteczny. Na dobrą sprawę nie wiem jak to jest rozwiązane w
debianie opartym o systemd, natomiast jeśli chodzi o inne init&#39;y (openrc i sysvinit), to tego typu
funkcjonalność można zaimplementować wykorzystując narzędzie &lt;code&gt;rsyslog&lt;/code&gt; lub &lt;code&gt;syslog-ng&lt;/code&gt; . W tym
wpisie zostanie opisana konfiguracja debianowego serwera, na którym będzie nasłuchiwał daemon
&lt;code&gt;rsyslog&lt;/code&gt; . Dodatkowo, zostanie przedstawiona konfiguracja dwóch klientów, z których jeden będzie
miał zainstalowanego &lt;code&gt;syslog-ng&lt;/code&gt; , a drugi &lt;code&gt;rsyslog&lt;/code&gt; . Z klientów logi zostaną przesłane do serwera.
Dodatkowo, postaramy się &lt;a href=&#34;http://www.rsyslog.com/doc/v8-stable/tutorials/tls_cert_summary.html&#34;&gt;zaszyfrować ruch przy pomocy kanału
TLS&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Generowanie certyfikatów</title>
      <link>https://morfikov.github.io/post/generowanie-certyfikatow/</link>
      <pubDate>Sun, 04 Oct 2015 18:11:50 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/generowanie-certyfikatow/</guid>
      <description>&lt;p&gt;Certyfikaty mogą zostać wykorzystane wszędzie tam, gdzie mamy do czynienia z protokołami
szyfrującymi ruch. Zwykle są to serwisy hostujące strony www ale też mogą to być i inne usługi, np.
OpenVPN. Można je także spotkać w sieciach bezprzewodowych gdzie wykorzystywany jest protokół
WPA2-Enterprise. Jeśli operujemy na linux&#39;ie, to prawdopodobnie spotkaliśmy się już z
oprogramowaniem, które wykorzystuje certyfikaty, np. serwer &lt;code&gt;apache2&lt;/code&gt; . Dobrze jest sobie zatem
przyswoić wiedzę na temat generowania certyfikatów.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Moduł ssl w Apache2</title>
      <link>https://morfikov.github.io/post/modul-ssl-w-apache/</link>
      <pubDate>Sat, 05 Sep 2015 18:10:04 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/modul-ssl-w-apache/</guid>
      <description>&lt;p&gt;Przy okazji uszczelniania serwera Apache2, przypomniał mi się &lt;a href=&#34;https://morfikov.github.io/post/logjam-czyli-nowa-podatnosc-w-ssltls/&#34;&gt;atak
logjam&lt;/a&gt; , przez który to było niemałe
zamieszanie. Pamiętam, że w tamtym czasie próbowałem zabezpieczyć swój serwer testowy, by był na tę
formę ataku odporny. Niemniej jednak, wersja Apache2, która w tamtym czasie była u mnie
zainstalowana, nie do końca dawała taką możliwość. Dziś podszedłem do tej kwestii jeszcze raz i w
oparciu &lt;a href=&#34;https://weakdh.org/sysadmin.html&#34;&gt;o ten link&lt;/a&gt; udało mi się poprawnie skonfigurować mój
serwer www.&lt;/p&gt;</description>
    </item>
    
    <item>
	  <author>Mikhail Morfikov</author>
      <title>Migracja certyfikatów OpenSSL z SHA-1</title>
      <link>https://morfikov.github.io/post/migracja-certyfikatow-openssl-z-sha-1/</link>
      <pubDate>Sat, 05 Sep 2015 17:15:12 +0000</pubDate>
      
      <guid>https://morfikov.github.io/post/migracja-certyfikatow-openssl-z-sha-1/</guid>
      <description>&lt;p&gt;Szukając co by tutaj jeszcze poprawić w moim środowisku testowym, w którym działa między innymi
apache, natrafiłem na komunikat w firefoxie, który oznajmił mi, że certyfikat mojego serwera
korzysta z przestarzałego już algorytmu mieszającego (hash). W tym przypadku jest to SHA-1. &lt;a href=&#34;https://blog.mozilla.org/security/2014/09/23/phasing-out-certificates-with-sha-1-based-signature-algorithms/&#34;&gt;Jak
można przeczytać na blogu
mozilli&lt;/a&gt;,
algorytm SHA-1 wypadł z łask jakiś czas temu i obecnie nie zaleca się jego używania ze względów
bezpieczeństwa. Postanowiłem zatem poprawić tę lukę.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
